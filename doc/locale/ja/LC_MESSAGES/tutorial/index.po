# -*- po -*-
# Japanese translations for 1.2.1 package.
# Copyright (C) 2009-2012, Brazil, Inc
# This file is distributed under the same license as the groonga package.
# Kouhei Sutou <kou@clear-code.com>, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: 1.2.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2019-05-23 14:19+0900\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "Execution example::"
msgstr "実行例::"

msgid "Tag search and reverse resolution of reference relationships"
msgstr "タグ検索・参照関係の逆引き"

msgid "As you know, Groonga supports to store array in column which refers other table. In fact, you can do tag search by using array data which refers other table."
msgstr "Groongaはカラム値として他のテーブルへの参照の配列を持つことができます。実は、テーブルへの参照の配列データを用いることによって、いわゆるタグ検索を行うことが可能となります。"

msgid "Tag search is very fast because Groonga use inverted index as data structure."
msgstr "タグ検索はGroongaの転置インデックスというデータ構造を用いて高速に行われます。"

msgid "Tag search"
msgstr "タグ検索"

msgid "Let's consider to create a search engine for an web site to share movies. Each movie may be associated with multiple keywords which represents the content of movie."
msgstr "動画共有サイトの検索エンジンを作ることを想定します。1つの動画には、その動画の特徴を表す、複数の語句が付与されています。「ある語句が付与されている動画の一覧を取得する」検索を行いたいとします。"

msgid "Let's create tables for movie information, then search the movies."
msgstr "実際に、動画情報のテーブルを作成し、検索をしてみましょう。"

msgid "First, create the ``Video`` table which stores movie information. the ``Video`` table has two columns. the ``title`` column stores title of the movie. the ``tags`` column stores multiple tag information in reference Tag table."
msgstr "動画の情報を保存する、Videoテーブルを作成します。Videoテーブルでは、動画のタイトルをtitleカラムに、動画のタグ情報をtagsカラムにTagテーブル型で複数格納しています。 "

msgid "Next, create the ``Tag`` table which stores tag information. the ``Tag`` table has one column. The tag string is stored as primary key, then ``index_tags`` stores indexes for tags column of Video table."
msgstr "タグの情報を保存する、Tagテーブルを作成します。Tagテーブルでは、タグ文字列を主キーに格納し、Videoテーブルのtagsカラムに対するインデックスをindex_tagsカラムに格納しています。"

msgid "After creating indexed column, you can do full-text search very fast. The indexed column is also automatically updated when stored data is refreshed."
msgstr "インデックスカラムを作成すると、全文検索が高速に行えるようになります。インデックスカラムは、対象のカラムに保存されたデータに更新があったとき、自動的に更新されます。"

msgid "List up the movies that specific keywords are given."
msgstr "「ある語句が付与されている動画の一覧を取得する」検索を行いましょう。"

msgid "You can search by tags such as \"Variety\", \"Sports\" and \"Animation\"."
msgstr "このように、「Variety」、「Sports」、「Animation」のようなタグで検索を行うことができました。"

msgid "Reverse resolution of reference relationships"
msgstr "参照関係の逆引き"

msgid "Groonga supports indexes for reverse resolution among tables. Tag search is one of concrete examples."
msgstr "Groongaはテーブル間の参照関係の逆引きを高速に行うためのインデックスを付与することができます。タグ検索は、その1例にすぎません。"

msgid "For example, you can search friendships by reverse resolution in social networking site."
msgstr "例えば、ソーシャルネットワーキングサイトにおける友人関係を逆引き検索することができます。"

msgid "Following example shows how to create ``User`` table which stores user information, ``username`` column which stores user name, ``friends`` column which stores list of user's friends in array, ``index_friends`` column as indexed column."
msgstr "以下の例では、ユーザー情報を格納するUserテーブルを作成し、ユーザー名を格納するusernameカラム、ユーザーの友人一覧を配列で格納するfriendsカラムとそのインデックスのindex_friendsカラムを追加しています。"

msgid "Let's show list of users who contains specified user in friend list."
msgstr "指定したユーザーを友人リストに入れているユーザーの一覧を表示してみましょう。"

msgid "Then drilldown the count which shows user is listed as friend."
msgstr "さらに、ドリルダウンを使って、友人リストに入っている数の一覧を表示してみましょう。"

msgid "As you can see, it shows the results which follows reverse resolution of reference relationship."
msgstr "このように、テーブルの参照関係を逆にたどる検索ができました。"

msgid "Geo location search with index"
msgstr "インデックス付きジオサーチ"

msgid "Groonga supports to add indexes to the column which stores geo location information. Groonga is very fast because it use such indexes against the column which contains geo location information to search enormous number of records."
msgstr "Groongaでは位置情報のカラムに対して、インデックスを付与することが出来ます。大量の位置情報レコードを検索する場合に、検索速度が速くなります。"

msgid "These indexes are also used when sorting the records with geo location search."
msgstr "これらのインデックスは、位置情報レコードを用いてソートする場合に使われます。"
