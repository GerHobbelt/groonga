# -*- po -*-
# Japanese translations for 1.2.1 package.
# Copyright (C) 2009-2011, Brazil, Inc
# This file is distributed under the same license as the groonga package.
# Kouhei Sutou <kou@clear-code.com>, 2011.
msgid ""
msgstr ""
"Project-Id-Version: 1.2.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-02-09 09:45+0900\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "Execution example::"
msgstr "実行例::"

msgid "``TokenRegexp``"
msgstr ""

msgid "Summary"
msgstr "概要"

msgid "This tokenizer is experimental. Specification may be changed."
msgstr "このトークナイザーは実験的です。仕様が変わる可能性があります。"

msgid "This tokenizer can be used only with UTF-8. You can't use this tokenizer with EUC-JP, Shift_JIS and so on."
msgstr "このトークナイザーはUTF-8でしか使えません。EUC-JPやShift_JISなどと一緒には使えません。"

msgid "``TokenRegexp`` is a tokenizer for supporting regular expression search by index."
msgstr "``TokenRegexp`` はインデックスを使った正規表現検索をサポートするトークナイザーです。"

msgid "Syntax"
msgstr "構文"

msgid "``TokenRegexp`` hasn't parameter::"
msgstr "``TokenRegexp`` には、引数がありません。"

msgid "Usage"
msgstr "使い方"

msgid "In general, regular expression search is evaluated as sequential search. But the following cases can be evaluated as index search:"
msgstr "一般的に、正規表現検索は逐次検索で実行します。しかし、次のケースはインデックスを使って検索できます。"

msgid "Literal only case such as ``hello``"
msgstr "``hello`` のようにリテラルしかないケース"

msgid "The beginning of text and literal case such as ``\\A/home/alice``"
msgstr "``\\A/home/alice`` のようにテキストの最初でのマッチとリテラルのみのケース"

msgid "The end of text and literal case such as ``\\.txt\\z``"
msgstr "``\\.txt\\z`` のようにテキストの最後でのマッチとリテラルのみのケース"

msgid "In most cases, index search is faster than sequential search."
msgstr "多くのケースでは、逐次検索よりもインデックスを使った検索の方が高速です。"

msgid "``TokenRegexp`` is based on bigram tokenize method. ``TokenRegexp`` adds the beginning of text mark (``U+FFEF``) at the begging of text and the end of text mark (``U+FFF0``) to the end of text when you index text:"
msgstr "``TokenRegexp`` はベースはバイグラムを使います。 ``TokenRegexp`` は、インデックス時に、テキストの先頭にテキストの先頭であるというマーク（ ``U+FFEF`` ）を入れ、テキストの最後にテキストの最後であるというマーク（ ``U+FFF0`` ）を入れます。"
