# -*- po -*-
# Japanese translations for 1.2.1 package.
# Copyright (C) 2009-2011, Brazil, Inc
# This file is distributed under the same license as the groonga package.
# Kouhei Sutou <kou@clear-code.com>, 2011.
msgid ""
msgstr ""
"Project-Id-Version: 1.2.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-02-09 09:45+0900\n"
"Last-Translator: Masafumi Yokoyama <yokoyama@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 2.4.3\n"
"X-POOTLE-MTIME: 1411061943.000000\n"

msgid "Execution example::"
msgstr "実行例::"

msgid "Vector column"
msgstr "ベクターカラム"

msgid "Summary"
msgstr "概要"

msgid ""
"Vector column is a data store object. It can stores zero or more scalar "
"values. In short, scalar value is a single value such as number and string. "
"See :doc:`scalar` about scalar value details."
msgstr ""
"ベクターカラムはデータストアオブジェクトです。ベクターカラムは0個以上のスカ"
"ラー値を保存できます。ざっくり言うと、スカラー値とは数値や文字列といった1つの"
"値のことです。スカラー値の詳細は :doc:`scalar` を参照してください。"

msgid ""
"One of vector column use cases is tags store. You can use a vector column to "
"store tag values."
msgstr ""
"ベクターカラムのユースケースの1つはタグの保存です。ベクターカラムを使うとタグ"
"の値を複数保存できます。"

msgid ""
"You can use vector column as index search target in the same way as scalar "
"column. You can set weight for each element. The element that has one or "
"more weight is matched, the record has more score rather than no weight "
"case. It is a vector column specific feature. Vector column that can store "
"weight is called weight vector column."
msgstr ""
"スカラーカラムと同じように、ベクターカラムもインデックスを使って検索できま"
"す。各要素に重みをつけることもできます。1以上の重みがついた要素がマッチする"
"と、重みがついていない場合よりも大きなスコアがつきます。これはベクターカラム"
"特有の機能です。重みも保存できるベクターカラムのことは重み付きベクターカラム"
"と呼びます。"

msgid ""
"You can also do full text search against each text element. But search score "
"is too high when weight is used. You should use full text search with weight "
"carefully."
msgstr ""
"各要素がテキストなら、各要素に対して全文検索することもできます。しかし、重み"
"を使った場合は検索スコアが高くなりすぎることに注意してください。重み付きベク"
"ターカラムに対して全文検索をするときは注意してください。"

msgid "Usage"
msgstr "使い方"

msgid "There are three vector column types:"
msgstr "ベクターカラムには3種類あります。"

msgid "Normal vector column"
msgstr "ノーマルベクターカラム"

msgid "Reference vector column"
msgstr "参照型ベクターカラム"

msgid "Weight vector column"
msgstr "重み付きベクターカラム"

msgid "This section describes how to use these types."
msgstr "このセクションではこれらの種類の使い方について説明します。"

msgid ""
"Normal vector column stores zero or more scalar data. For example, scalar "
"data are number, string and so on."
msgstr ""
"ノーマルベクターカラムは0個以上のスカラーデータを保存します。スカラーデータと"
"は、例えば、数値や文字列です。"

msgid ""
"A normal vector column can store the same type elements. You can't mix "
"types. For example, you can't store a number and a string in the same normal "
"vector column."
msgstr ""
"ノーマルベクターカラムは同じ型の要素だけを保存できます。型を混ぜることはでき"
"ません。例えば、同じノーマルベクターカラムに数値と文字列を保存できません。"

msgid ""
"Normal vector column is useful when a record has multiple values with a key. "
"Tags are the most popular use case."
msgstr ""
"ノーマルベクターカラムは、1つのレコードが、1つのキーに対して複数の値を持って"
"いるときに便利です。タグは一番よくあるユースケースです。"

msgid "How to create"
msgstr "作り方"

msgid ""
"Use :doc:`/reference/commands/column_create` command to create a normal "
"vector column. The point is ``COLUMN_VECTOR`` flag:"
msgstr ""
"ノーマルベクターカラムを作るためには :doc:`/reference/commands/"
"column_create` コマンドを使います。ポイントは ``COLUMN_VECTOR`` フラグです。"

msgid "You can set zero or more tags to a bookmark."
msgstr "1つのブックマークに0個以上のタグを設定できます。"

msgid "How to load"
msgstr "ロード方法"

msgid "You can load vector data by JSON array syntax::"
msgstr "JSONの配列構文で指定してベクターデータをロードします::"

msgid "Let's load the following data:"
msgstr "以下のデータをロードしましょう。"

msgid "``_key``"
msgstr ""

msgid "``tags``"
msgstr ""

msgid "``http://groonga.org/``"
msgstr ""

msgid "``[\"groonga\"]``"
msgstr ""

msgid "``http://mroonga.org/``"
msgstr ""

msgid "``[\"mroonga\", \"mysql\", \"groonga\"]``"
msgstr ""

msgid "``http://ranguba.org/``"
msgstr ""

msgid "``[\"ruby\", \"groonga\"]``"
msgstr ""

msgid "Here is a command that loads the data:"
msgstr "以下がデータをロードするコマンドです。"

msgid "The loaded data can be outputted as JSON array syntax:"
msgstr "ロードしたデータはJSONの配列構文で出力されます。"

msgid "How to search"
msgstr "検索方法"

msgid "You need to create an index to search normal vector column:"
msgstr "ノーマルベクターカラムを検索するにはインデックスを作る必要があります。"

msgid ""
"There is no vector column specific way. You can create an index like a "
"scalar column."
msgstr ""
"ベクターカラム固有の方法はありません。スカラーカラムにインデックスを作る方法"
"と同じです。"

msgid "You can search an element in ``tags`` like full text search syntax."
msgstr "全文検索と同じ構文で ``tags`` 内の要素を検索できます。"

msgid "With :ref:`select-match-columns` and :ref:`select-query`:"
msgstr ":ref:`select-match-columns` と :ref:`select-query` を使った場合:"

msgid "You can also use weight in :ref:`select-match-columns`:"
msgstr ":ref:`select-match-columns` の中で重みを使うこともできます。"

msgid "With :ref:`select-filter`:"
msgstr ":ref:`select-filter` を使った場合:"

msgid "TODO"
msgstr ""

msgid ""
"Reference vector column is space-efficient if there are many same value "
"elements. Reference vector column keeps reference record IDs not value "
"itself. Record ID is smaller than value itself."
msgstr ""

msgid ""
"Weight vector column is similar to normal vector column. It can store "
"elements. It can also stores weights for them. Weight is degree of "
"importance of the element."
msgstr ""
"重み付きベクターカラムはノーマルベクターカラムに似ています。複数の要素を保存"
"できます。さらに、要素の重みも保存できます。重みとはその要素の重要度です。"

msgid ""
"Weight is positive integer. ``0`` is the default weight. It means that no "
"weight."
msgstr ""
"重みは正の整数です。デフォルトの重みは ``0`` です。これは重みがないという意味"
"になります。"

msgid ""
"If weight is one or larger, search score is increased by the weight. If the "
"weight is ``0``, score is ``1``. If the weight is ``10``, score is ``11`` "
"(``= 1 + 10``)."
msgstr ""
"重みが1以上なら、検索スコアーに重みが加算されます。重みが ``0`` なら検索スコ"
"アーは ``1`` です。重みが ``10`` なら検索スコアーは ``11`` （ ``= 1 + 10`` ）"
"です。"

msgid ""
"Weight vector column is useful for tuning search score. See also :ref:"
"`select-adjuster`. You can increase search score of specific records."
msgstr ""
"重み付きベクターカラムは検索スコアーのチューニングに便利です。 :ref:`select-"
"adjuster` も参照してください。特定のレコードの検索スコアーを増やすことができ"
"ます。"

msgid "Limitations"
msgstr "制限"

msgid ""
"There are some limitations for now. They will be resolved in the future."
msgstr "今のところいくつか制限があります。将来的には解消される予定です。"

msgid "Here are limitations:"
msgstr "以下が制限です。"

msgid ""
"You need to use string representation for element value on load. For "
"example, you can't use ``29`` for number 29. You need to use ``\"29\"`` for "
"number 29."
msgstr ""
"ロード時に要素の値を文字列での表現で指定しなければいけません。例えば、数値の"
"29を指定するために、 ``29`` を使うことはできません。 ``\"29\"`` と文字列で表"
"記する必要があります。"

msgid ""
"Use :doc:`/reference/commands/column_create` command to create a weight "
"vector column. The point is ``COLUMN_VECTOR|WITH_WEIGHT`` flags:"
msgstr ""
"重み付きベクターカラムを作るには :doc:`/reference/commands/column_create` を"
"使います。ポイントは ``COLUMN_VECTOR|WITH_WEIGHT`` フラグです。"

msgid ""
"If you don't specify ``WITH_WEIGHT`` flag, it is just a normal vector column."
msgstr ""
"``WITH_WEIGHT`` フラグを指定しないと、ただのノーマルベクターカラムになりま"
"す。"

msgid "You can set zero or more tags with weight to a bookmark."
msgstr "1つのブックマークに重み付きで0個以上のタグを設定できます。"

msgid "You can load vector data by JSON object syntax::"
msgstr "JSONのオブジェクト構文でベクターデータをロードします::"

msgid "``{\"groonga\": 100}``"
msgstr ""

msgid "``{\"mroonga\": 100, \"mysql\": 50, \"groonga\": 10}``"
msgstr ""

msgid "``{\"ruby\": 100, \"groonga\": 50}``"
msgstr ""

msgid "The loaded data can be outputted as JSON object syntax:"
msgstr "ロードしたデータはJSONのオブジェクト構文で出力されます。"

msgid ""
"You need to create an index to search weight vector column. You don't forget "
"to specify ``WITH_WEIGHT`` flag to ``column_create``:"
msgstr ""
"重み付きベクターを検索するためにはインデックスを作る必要があります。 "
"``column_create`` に ``WITH_WEIGHT`` フラグを指定することを忘れないでくださ"
"い。"

msgid ""
"There is no weight vector column specific way except ``WITH_WEIGHT`` flag. "
"You can create an index like a scalar column."
msgstr ""
"``WITH_WEIGHT`` 以外は重み付きベクターカラムに特有の方法はありません。スカ"
"ラーカラムにインデックスを作る方法と同じです。"

msgid ""
"You can also use weight in :ref:`select-match-columns`. The score is ``(1 + "
"weight_in_weight_vector) * weight_in_match_columns``:"
msgstr ""
":ref:`select-match-columns` の重みと一緒に使うこともできます。スコアーは "
"``(1 + 重み付きベクターの重み) * match_columnsの重み`` 。"

msgid "How to apply just weight"
msgstr "重みだけを適用する方法"

msgid ""
"You can use weight in weight vector column to just increase search score "
"without changing a set of matched records."
msgstr ""
"マッチしたレコード集合を変更せずに、重み付きベクターカラムの重みの分だけ検索"
"スコアーを増やすことができます。"

msgid "Use :ref:`select-adjuster` for the purpose:"
msgstr "この用途には :ref:`select-adjuster` を使います。"

msgid ""
"The ``select`` command uses ``--filter true``. So all records are matched "
"with score 1. Then it applies ``--adjuster``. The adjuster does the "
"following:"
msgstr ""
"この ``select`` コマンドは ``--filter true`` を使っています。そのため、すべて"
"のレコードがマッチし、スコアーは1になります。それから、 ``--adjuster`` を適用"
"します。アジャスターは以下のことをします。"

msgid ""
"``tags @ \"mysql\" * 10`` increases score by ``(1 + weight) * 10`` of "
"records that has ``\"mysql\"`` tag."
msgstr ""
"``tags @ \"mysql\" * 10`` は ``\"mysql\"`` タグを含むレコードのスコアーを "
"``(1 + 重み) * 10`` 増やします。"

msgid ""
"``tags @ \"groonga\" * 5`` increases score by ``(1 + weight) * 5`` of "
"records that has ``\"groonga\"`` tag."
msgstr ""
"``tags @ \"groonga\" * 5`` は ``\"groonga\"`` タグを含むレコードのスコアーを "
"``(1 + 重み) * 5`` 増やします。"

msgid ""
"For example, record ``\"http://mroonga.org/\"`` has both ``\"mysql\"`` tag "
"and ``\"groonga\"`` tag. So its score is increased by ``565`` (``= ((1 + 50) "
"* 10) + ((1 + 10) * 5) = (51 * 10) + (11 * 5) = 510 + 55``). The search "
"score is 1 by ``--filter true`` before applying ``--adjuster``. So the final "
"search score is ``566`` (``= 1 + 565``) of record ``\"http://mroonga.org/"
"\"``."
msgstr ""
"例えば、 ``\"http://mroonga.org/\"`` レコードは ``\"mysql\"`` タグと "
"``\"groonga\"`` タグを両方持っています。そのため、スコアーは ``565`` （ ``= "
"((1 + 50) * 10) + ((1 + 10) * 5) = (51 * 10) + (11 * 5) = 510 + 55`` ）増えま"
"す。 ``--adjuster`` を適用する前は、``--filter true`` によって検索スコアーは1"
"になっています。そのため、 ``\"http://mroonga.org/\"`` レコードの最終的な検索"
"スコアーは ``566`` （ ``= 1 + 565`` ）になります。"
