# -*- po -*-
# English translations for Groonga package.
# Copyright (C) 2009-2022 Groonga Project
# This file is distributed under the same license as the Groonga package.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Groonga 12.0.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-02-28 11:57+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "``column_create``"
msgstr "``column_create``"

msgid "Summary"
msgstr "Summary"

msgid "``column_create`` creates a new column in a table."
msgstr "``column_create`` creates a new column in a table."

msgid ""
"You need to create one or more columns to store multiple data in one record."
msgstr ""
"You need to create one or more columns to store multiple data in one record."

msgid ""
"Groonga provides an index as a column. It's different from other systems. An "
"index is just an index in other systems. Implementing an index as a column "
"provides flexibility. For example, you can add metadata to each token."
msgstr ""
"Groonga provides an index as a column. It's different from other systems. An "
"index is just an index in other systems. Implementing an index as a column "
"provides flexibility. For example, you can add metadata to each token."

msgid "See :doc:`/reference/column` for column details."
msgstr "See :doc:`/reference/column` for column details."

msgid "Syntax"
msgstr "Syntax"

msgid "This command takes many parameters."
msgstr "This command takes many parameters."

msgid "Most parameters are required::"
msgstr "Most parameters are required::"

msgid "Usage"
msgstr "Usage"

msgid "This section describes about the followings:"
msgstr "This section describes about the followings:"

msgid ":ref:`column-create-scalar`"
msgstr ":ref:`column-create-scalar`"

msgid ":ref:`column-create-vector`"
msgstr ":ref:`column-create-vector`"

msgid ":ref:`column-create-vector-weight`"
msgstr ":ref:`column-create-vector-weight`"

msgid ":ref:`column-create-reference`"
msgstr ":ref:`column-create-reference`"

msgid ":ref:`column-create-index`"
msgstr ":ref:`column-create-index`"

msgid ":ref:`column-create-index-full-text-search`"
msgstr ":ref:`column-create-index-full-text-search`"

msgid ":ref:`column-create-index-multiple-columns`"
msgstr ":ref:`column-create-index-multiple-columns`"

msgid ":ref:`column-create-index-small`"
msgstr ":ref:`column-create-index-small`"

msgid ":ref:`column-create-index-medium`"
msgstr ":ref:`column-create-index-medium`"

msgid ":ref:`column-create-index-large`"
msgstr ":ref:`column-create-index-large`"

msgid ""
"Here is the ``People`` table definition. The ``People`` table is used in "
"examples:"
msgstr ""
"Here is the ``People`` table definition. The ``People`` table is used in "
"examples:"

msgid "Execution example::"
msgstr "Execution example::"

msgid "Create a scalar column"
msgstr "Create a scalar column"

msgid ""
"Groonga provides scalar column to store one value. For example, scalar "
"column should be used for storing age into a person record. Because a person "
"record must have only one age."
msgstr ""
"Groonga provides scalar column to store one value. For example, scalar "
"column should be used for storing age into a person record. Because a person "
"record must have only one age."

msgid ""
"If you want to store multiple values into a record, scalar column isn't "
"suitable. Use :ref:`column-create-vector` instead."
msgstr ""
"If you want to store multiple values into a record, scalar column isn't "
"suitable. Use :ref:`column-create-vector` instead."

msgid ""
"You must specify ``COLUMN_SCALAR`` to the ``flags`` parameter to create a "
"scalar column."
msgstr ""
"You must specify ``COLUMN_SCALAR`` to the ``flags`` parameter to create a "
"scalar column."

msgid ""
"Here is an example to create the ``age`` column to the ``People`` table. "
"``age`` column is a scalar column. It can store one ``UInt8`` (``0-255``) "
"value as its value:"
msgstr ""
"Here is an example to create the ``age`` column to the ``People`` table. "
"``age`` column is a scalar column. It can store one ``UInt8`` (``0-255``) "
"value as its value:"

msgid "You can store one value (``7``) by the following :doc:`load` command:"
msgstr "You can store one value (``7``) by the following :doc:`load` command:"

msgid ""
"You can confirm the stored one value (``7``) by the following :doc:`select` "
"command:"
msgstr ""
"You can confirm the stored one value (``7``) by the following :doc:`select` "
"command:"

msgid "Create a vector column"
msgstr "Create a vector column"

msgid ""
"Groonga provides vector column to store multiple values. For example, vector "
"column may be used for storing roles into a person record. Because a person "
"record may have multiple roles."
msgstr ""
"Groonga provides vector column to store multiple values. For example, vector "
"column may be used for storing roles into a person record. Because a person "
"record may have multiple roles."

msgid ""
"If you want to store only one value into a record, vector column isn't "
"suitable. Use :ref:`column-create-scalar` instead."
msgstr ""
"If you want to store only one value into a record, vector column isn't "
"suitable. Use :ref:`column-create-scalar` instead."

msgid ""
"You must specify ``COLUMN_VECTOR`` to the ``flags`` parameter to create a "
"vector column."
msgstr ""
"You must specify ``COLUMN_VECTOR`` to the ``flags`` parameter to create a "
"vector column."

msgid ""
"Here is an example to create the ``roles`` column to the ``People`` table. "
"``roles`` column is a vector column. It can store zero or more ``ShortText`` "
"values as its value:"
msgstr ""
"Here is an example to create the ``roles`` column to the ``People`` table. "
"``roles`` column is a vector column. It can store zero or more ``ShortText`` "
"values as its value:"

msgid ""
"You can store multiple values (``[\"adventurer\", \"younger-sister\"]``) by "
"the following :doc:`load` command:"
msgstr ""
"You can store multiple values (``[\"adventurer\", \"younger-sister\"]``) by "
"the following :doc:`load` command:"

msgid ""
"You can confirm the stored multiple values (``[\"adventurer\", \"younger-"
"sister\"]``) by the following :doc:`select` command:"
msgstr ""
"You can confirm the stored multiple values (``[\"adventurer\", \"younger-"
"sister\"]``) by the following :doc:`select` command:"

msgid "Create a weight vector column"
msgstr "Create a weight vector column"

msgid "TODO: See also :ref:`weight-vector-column` and :ref:`select-adjuster`."
msgstr "TODO: See also :ref:`weight-vector-column` and :ref:`select-adjuster`."

msgid "Create a column that refers a table's record"
msgstr "Create a column that refers a table's record"

msgid ""
"Both scalar column and vector column can store reference to record of an "
"existing table as column value. It's useful to store relationship between "
"records."
msgstr ""
"Both scalar column and vector column can store reference to record of an "
"existing table as column value. It's useful to store relationship between "
"records."

msgid ""
"For example, using a column that refers a person record is better for "
"storing a character into a book record. Because one person may be appeared "
"in some books."
msgstr ""
"For example, using a column that refers a person record is better for "
"storing a character into a book record. Because one person may be appeared "
"in some books."

msgid ""
"You must specify table name to be referenced to the ``type`` parameter to "
"create a column that refers a table's record."
msgstr ""
"You must specify table name to be referenced to the ``type`` parameter to "
"create a column that refers a table's record."

msgid ""
"Here is an example to create the ``character`` column to the ``Books`` "
"table. The ``character`` column refers the ``People`` table. It can store "
"one ``People`` table's record."
msgstr ""
"Here is an example to create the ``character`` column to the ``Books`` "
"table. The ``character`` column refers the ``People`` table. It can store "
"one ``People`` table's record."

msgid "Here is the ``Books`` table definition:"
msgstr "Here is the ``Books`` table definition:"

msgid ""
"Here is the ``character`` column definition in the ``Books`` table. ``--type "
"People`` is important:"
msgstr ""
"Here is the ``character`` column definition in the ``Books`` table. ``--type "
"People`` is important:"

msgid ""
"You can store one reference (``\"alice\"``) by the following :doc:`load` "
"command. You can use key value (``People._key`` value) for referring a "
"record:"
msgstr ""
"You can store one reference (``\"alice\"``) by the following :doc:`load` "
"command. You can use key value (``People._key`` value) for referring a "
"record:"

msgid ""
"You can confirm the stored reference (``\"alice\"`` record) by the "
"following :doc:`select` command. It retrieves the ``age`` column and the "
"``roles`` column values:"
msgstr ""
"You can confirm the stored reference (``\"alice\"`` record) by the "
"following :doc:`select` command. It retrieves the ``age`` column and the "
"``roles`` column values:"

msgid "Create an index column"
msgstr "Create an index column"

msgid ""
"Groonga provides index column for fast search. It doesn't store your data. "
"It stores data for fast search."
msgstr ""
"Groonga provides index column for fast search. It doesn't store your data. "
"It stores data for fast search."

msgid ""
"You don't need to update index column by yourself. Index column is updated "
"automatically when you store data into a data column (scalar column or "
"vector column) that is marked as index target column. You can set multiple "
"columns as index target columns to one index column."
msgstr ""
"You don't need to update index column by yourself. Index column is updated "
"automatically when you store data into a data column (scalar column or "
"vector column) that is marked as index target column. You can set multiple "
"columns as index target columns to one index column."

msgid ""
"If you make a new index, it is invisible until finishing of index build."
msgstr ""
"If you make a new index, it is invisible until finishing of index build."

msgid ""
"If Groonga has an index column for the ``age`` column of the ``People`` "
"table, Groonga can do fast equal search, fast comparison search and fast "
"range search against ``age`` column values."
msgstr ""
"If Groonga has an index column for the ``age`` column of the ``People`` "
"table, Groonga can do fast equal search, fast comparison search and fast "
"range search against ``age`` column values."

msgid "You must specify the following parameters to create an index column:"
msgstr "You must specify the following parameters to create an index column:"

msgid "The ``flags`` parameter: ``COLUMN_INDEX``"
msgstr "The ``flags`` parameter: ``COLUMN_INDEX``"

msgid ""
"The ``type`` parameter: The table name of index target column such as "
"``People``"
msgstr ""
"The ``type`` parameter: The table name of index target column such as "
"``People``"

msgid "The ``source`` parameter: The index target column name such as ``age``"
msgstr "The ``source`` parameter: The index target column name such as ``age``"

msgid ""
"You don't need additional flags to the ``flags`` parameter for equal search, "
"comparison search and range search index column. You need additional flags "
"to the ``flags`` parameter for full text search index column or multiple "
"column index column. See :ref:`column-create-index-full-text-search` and :"
"ref:`column-create-index-multiple-columns` for details."
msgstr ""
"You don't need additional flags to the ``flags`` parameter for equal search, "
"comparison search and range search index column. You need additional flags "
"to the ``flags`` parameter for full text search index column or multiple "
"column index column. See :ref:`column-create-index-full-text-search` and :"
"ref:`column-create-index-multiple-columns` for details."

msgid ""
"Here is an example to create an index column for the ``age`` column of the "
"``People`` table."
msgstr ""
"Here is an example to create an index column for the ``age`` column of the "
"``People`` table."

msgid ""
"First, you need to create a table for range index column. See :ref:`table-"
"create-range-index-table` for details. This example creates the ``Ages`` "
"table as :ref:`table-pat-key`:"
msgstr ""
"First, you need to create a table for range index column. See :ref:`table-"
"create-range-index-table` for details. This example creates the ``Ages`` "
"table as :ref:`table-pat-key`:"

msgid ""
"Now, you can create an index column for the ``age`` column of the ``People`` "
"table. ``COLUMN_INDEX`` in the ``flags`` parameter, ``People`` in the "
"``type`` parameter and ``age`` in the ``source`` parameter are important:"
msgstr ""
"Now, you can create an index column for the ``age`` column of the ``People`` "
"table. ``COLUMN_INDEX`` in the ``flags`` parameter, ``People`` in the "
"``type`` parameter and ``age`` in the ``source`` parameter are important:"

msgid ""
"You can confirm that ``age > 5`` is evaluated by the ``Ages."
"people_age_index`` newly created index column from log. Groonga reports used "
"index columns in ``info`` log level. You can change log level dynamically "
"by :doc:`log_level` command."
msgstr ""
"You can confirm that ``age > 5`` is evaluated by the ``Ages."
"people_age_index`` newly created index column from log. Groonga reports used "
"index columns in ``info`` log level. You can change log level dynamically "
"by :doc:`log_level` command."

msgid ""
"You can confirm that the ``Ages.people_age_index`` is used from the "
"following log::"
msgstr ""
"You can confirm that the ``Ages.people_age_index`` is used from the "
"following log::"

msgid ""
"The log says ``Ages.people_age_index`` index column is used for range search."
msgstr ""
"The log says ``Ages.people_age_index`` index column is used for range search."

msgid "Create an index column for full text search"
msgstr "Create an index column for full text search"

msgid ""
"There is a difference between for non full text search (equal search, "
"comparison search or range search) index column and for full text search "
"index column. You need to add ``WITH_POSITION`` to the ``flags`` parameter. "
"It means that you need to specify ``COLUMN_INDEX|WITH_POSITION`` to the "
"``flags`` parameter. It's the difference."
msgstr ""
"There is a difference between for non full text search (equal search, "
"comparison search or range search) index column and for full text search "
"index column. You need to add ``WITH_POSITION`` to the ``flags`` parameter. "
"It means that you need to specify ``COLUMN_INDEX|WITH_POSITION`` to the "
"``flags`` parameter. It's the difference."

msgid ""
"Here is an example to create a full text search index column for the key of "
"the ``People`` table."
msgstr ""
"Here is an example to create a full text search index column for the key of "
"the ``People`` table."

msgid ""
"First, you need to create a table for full text search index column. See :"
"ref:`table-create-lexicon` for details. This example creates the ``Terms`` "
"table as :ref:`table-pat-key` with :ref:`token-bigram` tokenizer and :ref:"
"`normalizer-auto` normalizer:"
msgstr ""
"First, you need to create a table for full text search index column. See :"
"ref:`table-create-lexicon` for details. This example creates the ``Terms`` "
"table as :ref:`table-pat-key` with :ref:`token-bigram` tokenizer and :ref:"
"`normalizer-auto` normalizer:"

msgid ""
"Now, you can create a full text search index column for the key of the "
"``People`` table. ``COLUMN_INDEX|WITH_POSITION`` in the ``flags`` parameter, "
"``People`` in the ``type`` parameter and ``_key`` in the ``source`` "
"parameter are important:"
msgstr ""
"Now, you can create a full text search index column for the key of the "
"``People`` table. ``COLUMN_INDEX|WITH_POSITION`` in the ``flags`` parameter, "
"``People`` in the ``type`` parameter and ``_key`` in the ``source`` "
"parameter are important:"

msgid ""
"You can confirm that ``--match_columns _key`` and ``--query Alice`` are "
"evaluated by the ``Terms.people_key_index`` newly created full text search "
"index column from log. Groonga reports used index columns in ``info`` log "
"level. You can change log level dynamically by :doc:`log_level` command."
msgstr ""
"You can confirm that ``--match_columns _key`` and ``--query Alice`` are "
"evaluated by the ``Terms.people_key_index`` newly created full text search "
"index column from log. Groonga reports used index columns in ``info`` log "
"level. You can change log level dynamically by :doc:`log_level` command."

msgid ""
"You can confirm that the ``Terms.people_key_index`` is used from the "
"following log::"
msgstr ""
"You can confirm that the ``Terms.people_key_index`` is used from the "
"following log::"

msgid ""
"The log says ``Terms.people_key_index`` index column is used for full text "
"search. (To be precise, the index column is used for exact term search by "
"inverted index.)"
msgstr ""
"The log says ``Terms.people_key_index`` index column is used for full text "
"search. (To be precise, the index column is used for exact term search by "
"inverted index.)"

msgid "Create a multiple columns index column"
msgstr "Create a multiple columns index column"

msgid ""
"You can create an index column for multiple columns. It means that you can "
"do fast search for multiple columns with one index column. Multiple columns "
"index column has better space efficiency than single column index column "
"only when multiple columns have many same tokens. Multiple columns index "
"column may be slower than single column index column. Because multiple "
"columns index column will be a bigger index column."
msgstr ""
"You can create an index column for multiple columns. It means that you can "
"do fast search for multiple columns with one index column. Multiple columns "
"index column has better space efficiency than single column index column "
"only when multiple columns have many same tokens. Multiple columns index "
"column may be slower than single column index column. Because multiple "
"columns index column will be a bigger index column."

msgid ""
"You can't use multiples columns in different tables as index target columns "
"in the same multiple columns index column. You must specify columns in the "
"same tables as index target columns to one multiple columns index column. "
"For example, you can't create a multiple columns index for ``People._key`` "
"and ``Books._key`` because they are columns of different tables. You can "
"create a multiple columns index column for ``People._key`` and ``People."
"roles`` because they are columns of the same table."
msgstr ""
"You can't use multiples columns in different tables as index target columns "
"in the same multiple columns index column. You must specify columns in the "
"same tables as index target columns to one multiple columns index column. "
"For example, you can't create a multiple columns index for ``People._key`` "
"and ``Books._key`` because they are columns of different tables. You can "
"create a multiple columns index column for ``People._key`` and ``People."
"roles`` because they are columns of the same table."

msgid ""
"There is a difference between for single column index column and for "
"multiple columns index column. You need to add ``WITH_SECTION`` to the "
"``flags`` parameter. It means that you need to specify ``COLUMN_INDEX|"
"WITH_SECTION`` to the ``flags`` parameter. It's the difference."
msgstr ""
"There is a difference between for single column index column and for "
"multiple columns index column. You need to add ``WITH_SECTION`` to the "
"``flags`` parameter. It means that you need to specify ``COLUMN_INDEX|"
"WITH_SECTION`` to the ``flags`` parameter. It's the difference."

msgid ""
"If you want to create a multiple columns index column for full text search, "
"you need to specify ``COLUMN_INDEX|WITH_POSITION|WITH_SECTION`` to the "
"``flags`` parameter. See :ref:`column-create-index-full-text-search` for "
"full text search index column details."
msgstr ""
"If you want to create a multiple columns index column for full text search, "
"you need to specify ``COLUMN_INDEX|WITH_POSITION|WITH_SECTION`` to the "
"``flags`` parameter. See :ref:`column-create-index-full-text-search` for "
"full text search index column details."

msgid ""
"Here is an example to create a multiple columns index column for the key of "
"the ``People`` table and the ``roles`` column of the ``People`` table."
msgstr ""
"Here is an example to create a multiple columns index column for the key of "
"the ``People`` table and the ``roles`` column of the ``People`` table."

msgid ""
"There is no difference between index table for single column index column "
"and multiple columns index column."
msgstr ""
"There is no difference between index table for single column index column "
"and multiple columns index column."

msgid ""
"In this example, ``Names`` table is created for equal search and prefix "
"search. It uses ``TABLE_PAT_KEY`` because ``TABLE_PAT_KEY`` supports prefix "
"search. See :doc:`../tables` for details."
msgstr ""
"In this example, ``Names`` table is created for equal search and prefix "
"search. It uses ``TABLE_PAT_KEY`` because ``TABLE_PAT_KEY`` supports prefix "
"search. See :doc:`../tables` for details."

msgid ""
"You can create a multiple columns index column for the key of the ``People`` "
"table and ``roles`` column of the ``People`` table. ``COLUMN_INDEX|"
"WITH_SECTION`` in the ``flags`` parameter, ``People`` in the ``type`` "
"parameter and ``_key,roles`` in the ``source`` parameter are important:"
msgstr ""
"You can create a multiple columns index column for the key of the ``People`` "
"table and ``roles`` column of the ``People`` table. ``COLUMN_INDEX|"
"WITH_SECTION`` in the ``flags`` parameter, ``People`` in the ``type`` "
"parameter and ``_key,roles`` in the ``source`` parameter are important:"

msgid ""
"You can confirm that ``--filter 'roles @^ \"Younger\"`` is evaluated by the "
"``Names.people_key_roles_index`` newly created multiple columns index column "
"from log. Groonga reports used index columns in ``info`` log level. You can "
"change log level dynamically by :doc:`log_level` command."
msgstr ""
"You can confirm that ``--filter 'roles @^ \"Younger\"`` is evaluated by the "
"``Names.people_key_roles_index`` newly created multiple columns index column "
"from log. Groonga reports used index columns in ``info`` log level. You can "
"change log level dynamically by :doc:`log_level` command."

msgid ""
"You can confirm that the ``Names.people_key_roles_index`` is used from the "
"following log::"
msgstr ""
"You can confirm that the ``Names.people_key_roles_index`` is used from the "
"following log::"

msgid ""
"The log says ``Names.people_key_roles_index`` index column is used for "
"prefix search."
msgstr ""
"The log says ``Names.people_key_roles_index`` index column is used for "
"prefix search."

msgid "Create a small index column"
msgstr "Create a small index column"

msgid ""
"If you know index target data are small, you can reduce memory usage for the "
"index column. Memory usage is ``1/256`` of the default index column."
msgstr ""
"If you know index target data are small, you can reduce memory usage for the "
"index column. Memory usage is ``1/256`` of the default index column."

msgid ""
"How many data are small? It depends on data. Small index column can't handle "
"1 billion records at least. If index target is only one scalar column with "
"no text family type (``ShortText``, ``Text`` or ``LongText``), the maximum "
"handleable records are depends of the number of kinds of index target data. "
"If index target column has ``1``, ``1``, ``2`` and ``3``, the number of "
"kinds of them are ``3`` (``1`` and ``2`` and ``3``). The following table "
"shows the relationship between the number of kinds of index target data and "
"the number of handleable records:"
msgstr ""
"How many data are small? It depends on data. Small index column can't handle "
"1 billion records at least. If index target is only one scalar column with "
"no text family type (``ShortText``, ``Text`` or ``LongText``), the maximum "
"handleable records are depends of the number of kinds of index target data. "
"If index target column has ``1``, ``1``, ``2`` and ``3``, the number of "
"kinds of them are ``3`` (``1`` and ``2`` and ``3``). The following table "
"shows the relationship between the number of kinds of index target data and "
"the number of handleable records:"

msgid ""
"The number of kinds of index target data and the number of handleable "
"records in a small index column"
msgstr ""
"The number of kinds of index target data and the number of handleable "
"records in a small index column"

msgid "The number of kinds of index target data"
msgstr "The number of kinds of index target data"

msgid "The number of hanleable records"
msgstr "The number of hanleable records"

msgid "1"
msgstr "1"

msgid "16779234"
msgstr "16779234"

msgid "2"
msgstr "2"

msgid "4648070"
msgstr "4648070"

msgid "4"
msgstr "4"

msgid "7238996"
msgstr "7238996"

msgid "8"
msgstr "8"

msgid "8308622"
msgstr "8308622"

msgid "16"
msgstr "16"

msgid "11068624"
msgstr "11068624"

msgid "32"
msgstr "32"

msgid "12670817"
msgstr "12670817"

msgid "64"
msgstr "64"

msgid "18524211"
msgstr "18524211"

msgid "128"
msgstr "128"

msgid "38095511"
msgstr "38095511"

msgid "256"
msgstr "256"

msgid "51265384"
msgstr "51265384"

msgid ""
"You need to add ``INDEX_SMALL`` to the ``flags`` parameter such as "
"``COLUMN_INDEX|INDEX_SMALL`` to create a small index column."
msgstr ""
"You need to add ``INDEX_SMALL`` to the ``flags`` parameter such as "
"``COLUMN_INDEX|INDEX_SMALL`` to create a small index column."

msgid ""
"If the ``People`` table has only 1 million records, you can use a small "
"index column for the ``age`` column:"
msgstr ""
"If the ``People`` table has only 1 million records, you can use a small "
"index column for the ``age`` column:"

msgid "Create a medium index column"
msgstr "Create a medium index column"

msgid ""
"If you know index target data are medium, you can reduce memory usage for "
"the index column. Memory usage is ``5/24`` of the default index column."
msgstr ""
"If you know index target data are medium, you can reduce memory usage for "
"the index column. Memory usage is ``5/24`` of the default index column."

msgid "How many data are medium? It depends on data."
msgstr "How many data are medium? It depends on data."

msgid ""
"If index target is only one scalar column, a medium index column can handle "
"all records."
msgstr ""
"If index target is only one scalar column, a medium index column can handle "
"all records."

msgid ""
"A medium index column may not handle all records at the following cases:"
msgstr ""
"A medium index column may not handle all records at the following cases:"

msgid ""
"Index target is one text family (``ShortText``, ``Text`` or ``LongText``) "
"scalar column"
msgstr ""
"Index target is one text family (``ShortText``, ``Text`` or ``LongText``) "
"scalar column"

msgid "Index target is one vector column"
msgstr "Index target is one vector column"

msgid "Index targets are multiple columns"
msgstr "Index targets are multiple columns"

msgid "Index table has tokenizer"
msgstr "Index table has tokenizer"

msgid ""
"You need to add ``INDEX_MEDIUM`` to the ``flags`` parameter such as "
"``COLUMN_INDEX|INDEX_MEDIUM`` to create a medium index column."
msgstr ""
"You need to add ``INDEX_MEDIUM`` to the ``flags`` parameter such as "
"``COLUMN_INDEX|INDEX_MEDIUM`` to create a medium index column."

msgid ""
"You can use a medium index column for an index column of the ``age`` column "
"of the ``People`` table safely. Because it's one scalar column with "
"``UInt8`` type."
msgstr ""
"You can use a medium index column for an index column of the ``age`` column "
"of the ``People`` table safely. Because it's one scalar column with "
"``UInt8`` type."

msgid "Here is an example to create a medium index column:"
msgstr "Here is an example to create a medium index column:"

msgid "Create a large index column"
msgstr "Create a large index column"

msgid ""
"If you know index target data are large, you need to use large index column. "
"It uses increases memory usage for the index column but it can accept more "
"data. Memory usage is 2 times larger than the default index column."
msgstr ""
"If you know index target data are large, you need to use large index column. "
"It uses increases memory usage for the index column but it can accept more "
"data. Memory usage is 2 times larger than the default index column."

msgid "How many data are large? It depends on data."
msgstr "How many data are large? It depends on data."

msgid "If index target is only one scalar column, it's not large data."
msgstr "If index target is only one scalar column, it's not large data."

msgid ""
"Large data must have many records (normally at least 10 millions records) "
"and at least one of the following features:"
msgstr ""
"Large data must have many records (normally at least 10 millions records) "
"and at least one of the following features:"

msgid ""
"You need to add ``INDEX_LARGE`` to the ``flags`` parameter such as "
"``COLUMN_INDEX|INDEX_LARGE`` to create a large index column."
msgstr ""
"You need to add ``INDEX_LARGE`` to the ``flags`` parameter such as "
"``COLUMN_INDEX|INDEX_LARGE`` to create a large index column."

msgid ""
"You can use a large index column for an index column of the ``_key`` of the "
"``People`` table and the ``role`` column of the ``People`` table."
msgstr ""
"You can use a large index column for an index column of the ``_key`` of the "
"``People`` table and the ``role`` column of the ``People`` table."

msgid "Here is an example to create a large index column:"
msgstr "Here is an example to create a large index column:"

msgid "Parameters"
msgstr "Parameters"

msgid "This section describes all parameters."
msgstr "This section describes all parameters."

msgid "Required parameters"
msgstr "Required parameters"

msgid "There are some required parameters."
msgstr "There are some required parameters."

msgid "``table``"
msgstr "``table``"

msgid "Specifies an existing table name for the new column."
msgstr "Specifies an existing table name for the new column."

msgid "``name``"
msgstr "``name``"

msgid "Specifies the column name to be created."
msgstr "Specifies the column name to be created."

msgid "The column name must be unique in the same table."
msgstr "The column name must be unique in the same table."

msgid "Here are available characters:"
msgstr "Here are available characters:"

msgid "``0`` .. ``9`` (digit)"
msgstr "``0`` .. ``9`` (digit)"

msgid "``a`` .. ``z`` (alphabet, lower case)"
msgstr "``a`` .. ``z`` (alphabet, lower case)"

msgid "``A`` .. ``Z`` (alphabet, upper case)"
msgstr "``A`` .. ``Z`` (alphabet, upper case)"

msgid "``#`` (hash)"
msgstr "``#`` (hash)"

msgid "``@`` (at mark)"
msgstr "``@`` (at mark)"

msgid "``-`` (hyphen)"
msgstr "``-`` (hyphen)"

msgid ""
"``_`` (underscore) (NOTE: Underscore can't be used as the first character.)"
msgstr ""
"``_`` (underscore) (NOTE: Underscore can't be used as the first character.)"

msgid ""
"You need to create a name with one or more the above characters. Note that "
"you can't use ``_`` as the first character such as ``_name``."
msgstr ""
"You need to create a name with one or more the above characters. Note that "
"you can't use ``_`` as the first character such as ``_name``."

msgid "``flags``"
msgstr "``flags``"

msgid "Specifies the column type and column customize options."
msgstr "Specifies the column type and column customize options."

msgid "Here are available flags:"
msgstr "Here are available flags:"

msgid "Flag"
msgstr "Flag"

msgid "Description"
msgstr "Description"

msgid "``COLUMN_SCALAR``"
msgstr "``COLUMN_SCALAR``"

msgid ""
"Scalar column. It can store one value. See also :doc:`/reference/columns/"
"scalar` or :ref:`column-create-scalar`."
msgstr ""
"Scalar column. It can store one value. See also :doc:`/reference/columns/"
"scalar` or :ref:`column-create-scalar`."

msgid "``COLUMN_VECTOR``"
msgstr "``COLUMN_VECTOR``"

msgid ""
"Vector column. It can store multiple values. See also :doc:`/reference/"
"columns/vector` or :ref:`column-create-vector`."
msgstr ""
"Vector column. It can store multiple values. See also :doc:`/reference/"
"columns/vector` or :ref:`column-create-vector`."

msgid "``COLUMN_INDEX``"
msgstr "``COLUMN_INDEX``"

msgid ""
"Index column. It stores data for fast search. See also :doc:`/reference/"
"columns/index` or :ref:`column-create-index`."
msgstr ""
"Index column. It stores data for fast search. See also :doc:`/reference/"
"columns/index` or :ref:`column-create-index`."

msgid "``COMPRESS_ZLIB``"
msgstr "``COMPRESS_ZLIB``"

msgid ""
"It enables column value compression by zlib. You need Groonga that enables "
"zlib support."
msgstr ""
"It enables column value compression by zlib. You need Groonga that enables "
"zlib support."

msgid ""
"Compression by zlib is higher space efficiency than compression by LZ4. But "
"compression by zlib is slower than compression by LZ4."
msgstr ""
"Compression by zlib is higher space efficiency than compression by LZ4. But "
"compression by zlib is slower than compression by LZ4."

msgid ""
"This flag is available only for ``COLUMN_SCALAR`` and ``COLUMN_VECTOR``."
msgstr ""
"This flag is available only for ``COLUMN_SCALAR`` and ``COLUMN_VECTOR``."

msgid "``COMPRESS_LZ4``"
msgstr "``COMPRESS_LZ4``"

msgid ""
"It enables column value compression by LZ4. You need Groonga that enables "
"LZ4 support."
msgstr ""
"It enables column value compression by LZ4. You need Groonga that enables "
"LZ4 support."

msgid ""
"Compression by LZ4 is faster than compression by zlib. But compression by "
"LZ4 is lower space efficiency than compression by zlib."
msgstr ""
"Compression by LZ4 is faster than compression by zlib. But compression by "
"LZ4 is lower space efficiency than compression by zlib."

msgid "``COMPRESS_ZSTD``"
msgstr "``COMPRESS_ZSTD``"

msgid ""
"It enables column value compression by Zstandard. You need Groonga that "
"enables Zstandard support."
msgstr ""
"It enables column value compression by Zstandard. You need Groonga that "
"enables Zstandard support."

msgid ""
"Compression by Zstandard is faster than compression by zlib and the same "
"space efficiency as zlib."
msgstr ""
"Compression by Zstandard is faster than compression by zlib and the same "
"space efficiency as zlib."

msgid "``WITH_SECTION``"
msgstr "``WITH_SECTION``"

msgid "It enables section support to index column."
msgstr "It enables section support to index column."

msgid ""
"If section support is enabled, you can support multiple documents in the "
"same index column."
msgstr ""
"If section support is enabled, you can support multiple documents in the "
"same index column."

msgid ""
"You must specify this flag to create a multiple columns index column. See "
"also :ref:`column-create-index-multiple-columns` for details."
msgstr ""
"You must specify this flag to create a multiple columns index column. See "
"also :ref:`column-create-index-multiple-columns` for details."

msgid ""
"Section support requires additional spaces. If you don't need section "
"support, you should not enable section support."
msgstr ""
"Section support requires additional spaces. If you don't need section "
"support, you should not enable section support."

msgid "This flag is available only for ``COLUMN_INDEX``."
msgstr "This flag is available only for ``COLUMN_INDEX``."

msgid "``WITH_WEIGHT``"
msgstr "``WITH_WEIGHT``"

msgid "It enables weight support to vector column or index column."
msgstr "It enables weight support to vector column or index column."

msgid ""
"If weight support is enabled for vector column, you can add weight for each "
"element. If weight support is enabled for index column, you can add weight "
"for each posting. They are useful to compute suitable search score."
msgstr ""
"If weight support is enabled for vector column, you can add weight for each "
"element. If weight support is enabled for index column, you can add weight "
"for each posting. They are useful to compute suitable search score."

msgid ""
"You must specify this flag to use :ref:`select-adjuster`. See also :ref:"
"`column-create-vector-weight` for details."
msgstr ""
"You must specify this flag to use :ref:`select-adjuster`. See also :ref:"
"`column-create-vector-weight` for details."

msgid ""
"Weight support requires additional spaces. If you don't need weight support, "
"you should not enable weight support."
msgstr ""
"Weight support requires additional spaces. If you don't need weight support, "
"you should not enable weight support."

msgid "This flag is available only for ``COLUMN_VECTOR`` or ``COLUMN_INDEX``."
msgstr "This flag is available only for ``COLUMN_VECTOR`` or ``COLUMN_INDEX``."

msgid "``WEIGHT_FLOAT32``"
msgstr "``WEIGHT_FLOAT32``"

msgid ""
"You can use 32bit floating point instead of 32bit unsigned integer for "
"weight value."
msgstr ""
"You can use 32bit floating point instead of 32bit unsigned integer for "
"weight value."

msgid "You also need to specify ``WITH_WEIGHT``."
msgstr "You also need to specify ``WITH_WEIGHT``."

msgid "``WITH_POSITION``"
msgstr "``WITH_POSITION``"

msgid ""
"It enables position support to index column. It means that the index column "
"is full inverted index. (Index column is implemented as inverted index.)"
msgstr ""
"It enables position support to index column. It means that the index column "
"is full inverted index. (Index column is implemented as inverted index.)"

msgid ""
"If position support is enabled, you can add position in the document for "
"each posting. It's required for phrase search. It means that index column "
"for full text search must enable position support because most full text "
"search uses phrase search."
msgstr ""
"If position support is enabled, you can add position in the document for "
"each posting. It's required for phrase search. It means that index column "
"for full text search must enable position support because most full text "
"search uses phrase search."

msgid ""
"You must specify this flag to create a full text search index column. See "
"also :ref:`column-create-index-full-text-search` for details."
msgstr ""
"You must specify this flag to create a full text search index column. See "
"also :ref:`column-create-index-full-text-search` for details."

msgid ""
"Position support requires additional spaces. If you don't need position "
"support, you should not enable position support."
msgstr ""
"Position support requires additional spaces. If you don't need position "
"support, you should not enable position support."

msgid "``INDEX_SMALL``"
msgstr "``INDEX_SMALL``"

msgid "It requires to create a small index column."
msgstr "It requires to create a small index column."

msgid ""
"If index target data are small, small index column is enough. Small index "
"column uses fewer memory than a normal index column or a medium index "
"column. See also :ref:`column-create-index-small` for knowing what are "
"\"small data\" and how to use this flag."
msgstr ""
"If index target data are small, small index column is enough. Small index "
"column uses fewer memory than a normal index column or a medium index "
"column. See also :ref:`column-create-index-small` for knowing what are "
"\"small data\" and how to use this flag."

msgid "``INDEX_MEDIUM``"
msgstr "``INDEX_MEDIUM``"

msgid "It requires to create a medium index column."
msgstr "It requires to create a medium index column."

msgid ""
"If index target data are medium, medium index column is enough. Medium index "
"column uses fewer memory than a normal index column. See also :ref:`column-"
"create-index-medium` for knowing what are \"medium data\" and how to use "
"this flag."
msgstr ""
"If index target data are medium, medium index column is enough. Medium index "
"column uses fewer memory than a normal index column. See also :ref:`column-"
"create-index-medium` for knowing what are \"medium data\" and how to use "
"this flag."

msgid "``INDEX_LARGE``"
msgstr "``INDEX_LARGE``"

msgid "It requires to create a large index column."
msgstr "It requires to create a large index column."

msgid ""
"If index target data are large, you need to use large index column. Large "
"index column uses more memory than a normal index column but accepts more "
"data than a normal index column. See also :ref:`column-create-index-large` "
"for knowing what are \"large data\" and how to use this flag."
msgstr ""
"If index target data are large, you need to use large index column. Large "
"index column uses more memory than a normal index column but accepts more "
"data than a normal index column. See also :ref:`column-create-index-large` "
"for knowing what are \"large data\" and how to use this flag."

msgid ""
"You must specify one of ``COLUMN_${TYPE}`` flags. You can't specify two or "
"more ``COLUMN_${TYPE}`` flags. For example, ``COLUMN_SCALAR|COLUMN_VECTOR`` "
"is invalid."
msgstr ""
"You must specify one of ``COLUMN_${TYPE}`` flags. You can't specify two or "
"more ``COLUMN_${TYPE}`` flags. For example, ``COLUMN_SCALAR|COLUMN_VECTOR`` "
"is invalid."

msgid ""
"You can combine flags with ``|`` (vertical bar) such as ``COLUMN_INDEX|"
"WITH_SECTION|WITH_POSITION``."
msgstr ""
"You can combine flags with ``|`` (vertical bar) such as ``COLUMN_INDEX|"
"WITH_SECTION|WITH_POSITION``."

msgid "``type``"
msgstr "``type``"

msgid "Specifies type of the column value."
msgstr "Specifies type of the column value."

msgid ""
"If the column is scalar column or vector column, here are available types:"
msgstr ""
"If the column is scalar column or vector column, here are available types:"

msgid "Builtin types described in :doc:`/reference/types`"
msgstr "Builtin types described in :doc:`/reference/types`"

msgid "Tables defined by users"
msgstr "Tables defined by users"

msgid "If the column is index column, here are available types:"
msgstr "If the column is index column, here are available types:"

msgid "See also the followings:"
msgstr "See also the followings:"

msgid "Optional parameters"
msgstr "Optional parameters"

msgid "There is an optional parameter."
msgstr "There is an optional parameter."

msgid "``source``"
msgstr "``source``"

msgid ""
"Specifies index target columns. You can specify one or more columns to the "
"``source`` parameter."
msgstr ""
"Specifies index target columns. You can specify one or more columns to the "
"``source`` parameter."

msgid "This parameter is only available for index column."
msgstr "This parameter is only available for index column."

msgid ""
"You can only specify columns of the table specified as :ref:`column-create-"
"type`. You can also use the ``_key`` pseudo column for specifying the table "
"key as index target."
msgstr ""
"You can only specify columns of the table specified as :ref:`column-create-"
"type`. You can also use the ``_key`` pseudo column for specifying the table "
"key as index target."

msgid ""
"If you specify multiple columns to the ``source`` parameter, separate "
"columns with ``,`` (comma) such as ``_key,roles``."
msgstr ""
"If you specify multiple columns to the ``source`` parameter, separate "
"columns with ``,`` (comma) such as ``_key,roles``."

msgid "``path``"
msgstr "``path``"

msgid "Specifies a path for storing a column."
msgstr "Specifies a path for storing a column."

msgid ""
"This option is useful if you want to store a column that you often use to "
"fast storage (e.g. SSD) and store it that you don't often use to slow "
"storage (e.g. HDD)."
msgstr ""
"This option is useful if you want to store a column that you often use to "
"fast storage (e.g. SSD) and store it that you don't often use to slow "
"storage (e.g. HDD)."

msgid ""
"You can use a relative path or an absolute path in this option. If you "
"specify a relative path, it is resolved from the current directory for the "
"``groonga`` process."
msgstr ""
"You can use a relative path or an absolute path in this option. If you "
"specify a relative path, it is resolved from the current directory for the "
"``groonga`` process."

msgid "The default value is none."
msgstr "The default value is none."

msgid "Return value"
msgstr "Return value"

msgid "``column_create`` returns ``true`` as body on success such as::"
msgstr "``column_create`` returns ``true`` as body on success such as::"

msgid ""
"If ``column_create`` fails, ``column_create`` returns ``false`` as body::"
msgstr ""
"If ``column_create`` fails, ``column_create`` returns ``false`` as body::"

msgid "Error details are in ``HEADER``."
msgstr "Error details are in ``HEADER``."

msgid "See :doc:`/reference/command/output_format` for ``HEADER``."
msgstr "See :doc:`/reference/command/output_format` for ``HEADER``."

msgid "See also"
msgstr "See also"

msgid ":doc:`/reference/column`"
msgstr ":doc:`/reference/column`"

msgid ":doc:`/reference/commands/table_create`"
msgstr ":doc:`/reference/commands/table_create`"

msgid ":doc:`/reference/command/output_format`"
msgstr ":doc:`/reference/command/output_format`"
