# -*- po -*-
# English translations for Groonga package.
# Copyright (C) 2009-2022 Groonga Project
# This file is distributed under the same license as the Groonga package.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Groonga 12.0.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-02-28 11:57+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "``select``"
msgstr "``select``"

msgid "Summary"
msgstr "Summary"

msgid ""
"``select`` searches records that are matched to specified conditions from a "
"table and then outputs them."
msgstr ""
"``select`` searches records that are matched to specified conditions from a "
"table and then outputs them."

msgid ""
"``select`` is the most important command in groonga. You need to understand "
"``select`` to use the full power of Groonga."
msgstr ""
"``select`` is the most important command in groonga. You need to understand "
"``select`` to use the full power of Groonga."

msgid "Syntax"
msgstr "Syntax"

msgid "This command takes many parameters."
msgstr "This command takes many parameters."

msgid ""
"The required parameter is only ``table``. Other parameters are optional::"
msgstr ""
"The required parameter is only ``table``. Other parameters are optional::"

msgid "This command has the following named parameters for dynamic columns:"
msgstr "This command has the following named parameters for dynamic columns:"

msgid "``columns[${NAME}].stage=null``"
msgstr "``columns[${NAME}].stage=null``"

msgid "``columns[${NAME}].flags=COLUMN_SCALAR``"
msgstr "``columns[${NAME}].flags=COLUMN_SCALAR``"

msgid "``columns[${NAME}].type=null``"
msgstr "``columns[${NAME}].type=null``"

msgid "``columns[${NAME}].value=null``"
msgstr "``columns[${NAME}].value=null``"

msgid "``columns[${NAME}].window.sort_keys=null``"
msgstr "``columns[${NAME}].window.sort_keys=null``"

msgid "``columns[${NAME}].window.group_keys=null``"
msgstr "``columns[${NAME}].window.group_keys=null``"

msgid ""
"You can use one or more alphabets, digits, ``_`` for ``${NAME}``. For "
"example, ``column1`` is a valid ``${NAME}``. This is the same rule as normal "
"column. See also :ref:`column-create-name`."
msgstr ""
"You can use one or more alphabets, digits, ``_`` for ``${NAME}``. For "
"example, ``column1`` is a valid ``${NAME}``. This is the same rule as normal "
"column. See also :ref:`column-create-name`."

msgid "Parameters that have the same ``${NAME}`` are grouped."
msgstr "Parameters that have the same ``${NAME}`` are grouped."

msgid "For example, the following parameters specify one dynamic column:"
msgstr "For example, the following parameters specify one dynamic column:"

msgid "``--columns[name].stage initial``"
msgstr "``--columns[name].stage initial``"

msgid "``--columns[name].type UInt32``"
msgstr "``--columns[name].type UInt32``"

msgid "``--columns[name].value 29``"
msgstr "``--columns[name].value 29``"

msgid "The following parameters specify two dynamic columns:"
msgstr "The following parameters specify two dynamic columns:"

msgid "``--columns[name1].stage initial``"
msgstr "``--columns[name1].stage initial``"

msgid "``--columns[name1].type UInt32``"
msgstr "``--columns[name1].type UInt32``"

msgid "``--columns[name1].value 29``"
msgstr "``--columns[name1].value 29``"

msgid "``--columns[name2].stage filtered``"
msgstr "``--columns[name2].stage filtered``"

msgid "``--columns[name2].type Float``"
msgstr "``--columns[name2].type Float``"

msgid "``--columns[name2].value '_score * 0.1'``"
msgstr "``--columns[name2].value '_score * 0.1'``"

msgid "This command has the following named parameters for advanced drilldown:"
msgstr ""
"This command has the following named parameters for advanced drilldown:"

msgid "``drilldowns[${LABEL}].keys=null``"
msgstr "``drilldowns[${LABEL}].keys=null``"

msgid "``drilldowns[${LABEL}].sort_keys=null``"
msgstr "``drilldowns[${LABEL}].sort_keys=null``"

msgid "``drilldowns[${LABEL}].output_columns=\"_key, _nsubrecs\"``"
msgstr "``drilldowns[${LABEL}].output_columns=\"_key, _nsubrecs\"``"

msgid "``drilldowns[${LABEL}].offset=0``"
msgstr "``drilldowns[${LABEL}].offset=0``"

msgid "``drilldowns[${LABEL}].limit=10``"
msgstr "``drilldowns[${LABEL}].limit=10``"

msgid "``drilldowns[${LABEL}].calc_types=NONE``"
msgstr "``drilldowns[${LABEL}].calc_types=NONE``"

msgid "``drilldowns[${LABEL}].calc_target=null``"
msgstr "``drilldowns[${LABEL}].calc_target=null``"

msgid "``drilldowns[${LABEL}].filter=null``"
msgstr "``drilldowns[${LABEL}].filter=null``"

msgid "``drilldowns[${LABEL}].max_n_target_records=-1``"
msgstr "``drilldowns[${LABEL}].max_n_target_records=-1``"

msgid "``drilldowns[${LABEL}].columns[${NAME}].stage=null``"
msgstr "``drilldowns[${LABEL}].columns[${NAME}].stage=null``"

msgid "``drilldowns[${LABEL}].columns[${NAME}].flags=COLUMN_SCALAR``"
msgstr "``drilldowns[${LABEL}].columns[${NAME}].flags=COLUMN_SCALAR``"

msgid "``drilldowns[${LABEL}].columns[${NAME}].type=null``"
msgstr "``drilldowns[${LABEL}].columns[${NAME}].type=null``"

msgid "``drilldowns[${LABEL}].columns[${NAME}].value=null``"
msgstr "``drilldowns[${LABEL}].columns[${NAME}].value=null``"

msgid "``drilldowns[${LABEL}].columns[${NAME}].window.sort_keys=null``"
msgstr "``drilldowns[${LABEL}].columns[${NAME}].window.sort_keys=null``"

msgid "``drilldowns[${LABEL}].columns[${NAME}].window.group_keys=null``"
msgstr "``drilldowns[${LABEL}].columns[${NAME}].window.group_keys=null``"

msgid ""
"``drilldown[...]`` syntax is deprecated, Use ``drilldowns[...]`` instead."
msgstr ""
"``drilldown[...]`` syntax is deprecated, Use ``drilldowns[...]`` instead."

msgid ""
"You can use one or more alphabets, digits, ``_`` and ``.`` for ``${LABEL}``. "
"For example, ``parent.sub1`` is a valid ``${LABEL}``."
msgstr ""
"You can use one or more alphabets, digits, ``_`` and ``.`` for ``${LABEL}``. "
"For example, ``parent.sub1`` is a valid ``${LABEL}``."

msgid "Parameters that have the same ``${LABEL}`` are grouped."
msgstr "Parameters that have the same ``${LABEL}`` are grouped."

msgid "For example, the following parameters specify one drilldown:"
msgstr "For example, the following parameters specify one drilldown:"

msgid "``--drilldowns[label].keys column``"
msgstr "``--drilldowns[label].keys column``"

msgid "``--drilldowns[label].sort_keys -_nsubrecs``"
msgstr "``--drilldowns[label].sort_keys -_nsubrecs``"

msgid "The following parameters specify two drilldowns:"
msgstr "The following parameters specify two drilldowns:"

msgid "``--drilldowns[label1].keys column1``"
msgstr "``--drilldowns[label1].keys column1``"

msgid "``--drilldowns[label1].sort_keys -_nsubrecs``"
msgstr "``--drilldowns[label1].sort_keys -_nsubrecs``"

msgid "``--drilldowns[label2].keys column2``"
msgstr "``--drilldowns[label2].keys column2``"

msgid "``--drilldowns[label2].sort_keys _key``"
msgstr "``--drilldowns[label2].sort_keys _key``"

msgid "Usage"
msgstr "Usage"

msgid ""
"Let's learn about ``select`` usage with examples. This section shows many "
"popular usages."
msgstr ""
"Let's learn about ``select`` usage with examples. This section shows many "
"popular usages."

msgid "Here are a schema definition and sample data to show usage."
msgstr "Here are a schema definition and sample data to show usage."

msgid "Execution example::"
msgstr "Execution example::"

msgid ""
"There is a table, ``Entries``, for blog entries. An entry has title, "
"content, the number of likes for the entry and tag. Title is key of "
"``Entries``. Content is value of ``Entries.content`` column. The number of "
"likes is value of ``Entries.n_likes`` column. Tag is value of ``Entries."
"tag`` column."
msgstr ""
"There is a table, ``Entries``, for blog entries. An entry has title, "
"content, the number of likes for the entry and tag. Title is key of "
"``Entries``. Content is value of ``Entries.content`` column. The number of "
"likes is value of ``Entries.n_likes`` column. Tag is value of ``Entries."
"tag`` column."

msgid ""
"``Entries._key`` column and ``Entries.content`` column are indexed using "
"``TokenBigram`` tokenizer. So both ``Entries._key`` and ``Entries.content`` "
"are fulltext search ready."
msgstr ""
"``Entries._key`` column and ``Entries.content`` column are indexed using "
"``TokenBigram`` tokenizer. So both ``Entries._key`` and ``Entries.content`` "
"are fulltext search ready."

msgid "OK. The schema and data for examples are ready."
msgstr "OK. The schema and data for examples are ready."

msgid "Simple usage"
msgstr "Simple usage"

msgid ""
"Here is the most simple usage with the above schema and data. It outputs all "
"records in ``Entries`` table."
msgstr ""
"Here is the most simple usage with the above schema and data. It outputs all "
"records in ``Entries`` table."

msgid ""
"Why does the command output all records? There are two reasons. The first "
"reason is that the command doesn't specify any search conditions. No search "
"condition means all records are matched. The second reason is that the "
"number of all records is 5. ``select`` command outputs 10 records at a "
"maximum by default. There are only 5 records. It is less than 10. So the "
"command outputs all records."
msgstr ""
"Why does the command output all records? There are two reasons. The first "
"reason is that the command doesn't specify any search conditions. No search "
"condition means all records are matched. The second reason is that the "
"number of all records is 5. ``select`` command outputs 10 records at a "
"maximum by default. There are only 5 records. It is less than 10. So the "
"command outputs all records."

msgid "Search conditions"
msgstr "Search conditions"

msgid ""
"Search conditions are specified by ``query`` or ``filter``. You can also "
"specify both ``query`` and ``filter``. It means that selected records must "
"be matched against both ``query`` and ``filter``."
msgstr ""
"Search conditions are specified by ``query`` or ``filter``. You can also "
"specify both ``query`` and ``filter``. It means that selected records must "
"be matched against both ``query`` and ``filter``."

msgid "Search condition: ``query``"
msgstr "Search condition: ``query``"

msgid ""
"``query`` is designed for search box in Web page. Imagine a search box in "
"google.com. You specify search conditions for ``query`` as space separated "
"keywords. For example, ``search engine`` means a matched record should "
"contain two words, ``search`` and ``engine``."
msgstr ""
"``query`` is designed for search box in Web page. Imagine a search box in "
"google.com. You specify search conditions for ``query`` as space separated "
"keywords. For example, ``search engine`` means a matched record should "
"contain two words, ``search`` and ``engine``."

msgid ""
"Normally, ``query`` parameter is used for specifying fulltext search "
"conditions. It can be used for non fulltext search conditions but ``filter`` "
"is used for the propose."
msgstr ""
"Normally, ``query`` parameter is used for specifying fulltext search "
"conditions. It can be used for non fulltext search conditions but ``filter`` "
"is used for the propose."

msgid ""
"``query`` parameter is used with ``match_columns`` parameter when ``query`` "
"parameter is used for specifying fulltext search conditions. "
"``match_columns`` specifies which columnes and indexes are matched against "
"``query``."
msgstr ""
"``query`` parameter is used with ``match_columns`` parameter when ``query`` "
"parameter is used for specifying fulltext search conditions. "
"``match_columns`` specifies which columnes and indexes are matched against "
"``query``."

msgid "Here is a simple ``query`` usage example."
msgstr "Here is a simple ``query`` usage example."

msgid ""
"The ``select`` command searches records that contain a word ``fast`` in "
"``content`` column value from ``Entries`` table."
msgstr ""
"The ``select`` command searches records that contain a word ``fast`` in "
"``content`` column value from ``Entries`` table."

msgid ""
"``query`` has query syntax but its deatils aren't described here. See :doc:`/"
"reference/grn_expr/query_syntax` for datails."
msgstr ""
"``query`` has query syntax but its deatils aren't described here. See :doc:`/"
"reference/grn_expr/query_syntax` for datails."

msgid "Search condition: ``filter``"
msgstr "Search condition: ``filter``"

msgid ""
"``filter`` is designed for complex search conditions. You specify search "
"conditions for ``filter`` as ECMAScript like syntax."
msgstr ""
"``filter`` is designed for complex search conditions. You specify search "
"conditions for ``filter`` as ECMAScript like syntax."

msgid "Here is a simple ``filter`` usage example."
msgstr "Here is a simple ``filter`` usage example."

msgid ""
"The ``select`` command searches records that contain a word ``fast`` in "
"``content`` column value and has ``Groonga`` as ``_key`` from ``Entries`` "
"table. There are three operators in the command, ``@``, ``&&`` and ``==``. "
"``@`` is fulltext search operator. ``&&`` and ``==`` are the same as "
"ECMAScript. ``&&`` is logical AND operator and ``==`` is equality operator."
msgstr ""
"The ``select`` command searches records that contain a word ``fast`` in "
"``content`` column value and has ``Groonga`` as ``_key`` from ``Entries`` "
"table. There are three operators in the command, ``@``, ``&&`` and ``==``. "
"``@`` is fulltext search operator. ``&&`` and ``==`` are the same as "
"ECMAScript. ``&&`` is logical AND operator and ``==`` is equality operator."

msgid ""
"``filter`` has more operators and syntax like grouping by ``(...)`` its "
"details aren't described here. See :doc:`/reference/grn_expr/script_syntax` "
"for datails."
msgstr ""
"``filter`` has more operators and syntax like grouping by ``(...)`` its "
"details aren't described here. See :doc:`/reference/grn_expr/script_syntax` "
"for datails."

msgid "Paging"
msgstr "Paging"

msgid ""
"You can specify range of outputted records by ``offset`` and ``limit``. Here "
"is an example to output only the 2nd record."
msgstr ""
"You can specify range of outputted records by ``offset`` and ``limit``. Here "
"is an example to output only the 2nd record."

msgid ""
"``offset`` is zero-based. ``--offset 1`` means output range is started from "
"the 2nd record."
msgstr ""
"``offset`` is zero-based. ``--offset 1`` means output range is started from "
"the 2nd record."

msgid ""
"``limit`` specifies the max number of output records. ``--limit 1`` means "
"the number of output records is 1 at a maximium. If no records are matched, "
"``select`` command outputs no records."
msgstr ""
"``limit`` specifies the max number of output records. ``--limit 1`` means "
"the number of output records is 1 at a maximium. If no records are matched, "
"``select`` command outputs no records."

msgid "The total number of records"
msgstr "The total number of records"

msgid ""
"You can use ``--limit 0`` to retrieve the total number of recrods without "
"any contents of records."
msgstr ""
"You can use ``--limit 0`` to retrieve the total number of recrods without "
"any contents of records."

msgid ""
"``--limit 0`` is also useful for retrieving only the number of matched "
"records."
msgstr ""
"``--limit 0`` is also useful for retrieving only the number of matched "
"records."

msgid "Drilldown"
msgstr "Drilldown"

msgid ""
"You can get additional grouped results against the search result in one "
"``select``. You need to use two or more ``SELECT`` s in SQL but ``select`` "
"in Groonga can do it in one ``select``."
msgstr ""
"You can get additional grouped results against the search result in one "
"``select``. You need to use two or more ``SELECT`` s in SQL but ``select`` "
"in Groonga can do it in one ``select``."

msgid ""
"This feature is called as `drilldown <http://en.wikipedia.org/wiki/"
"Drill_down>`_ in Groonga. It's also called as `faceted search <http://en."
"wikipedia.org/wiki/Faceted_search>`_ in other search engine."
msgstr ""
"This feature is called as `drilldown <http://en.wikipedia.org/wiki/"
"Drill_down>`_ in Groonga. It's also called as `faceted search <http://en."
"wikipedia.org/wiki/Faceted_search>`_ in other search engine."

msgid "For example, think about the following situation."
msgstr "For example, think about the following situation."

msgid "You search entries that has ``fast`` word:"
msgstr "You search entries that has ``fast`` word:"

msgid ""
"You want to use ``tag`` for additional search condition like ``--filter "
"'content @ \"fast\" && tag == \"???\"``. But you don't know suitable tag "
"until you see the result of ``content @ \"fast\"``."
msgstr ""
"You want to use ``tag`` for additional search condition like ``--filter "
"'content @ \"fast\" && tag == \"???\"``. But you don't know suitable tag "
"until you see the result of ``content @ \"fast\"``."

msgid ""
"If you know the number of matched records of each available tag, you can "
"choose suitable tag. You can use drilldown for the case:"
msgstr ""
"If you know the number of matched records of each available tag, you can "
"choose suitable tag. You can use drilldown for the case:"

msgid ""
"``--drilldown tag`` returns a list of pair of available tag and the number "
"of matched records. You can avoid \"no hit search\" case by choosing a tag "
"from the list. You can also avoid \"too many search results\" case by "
"choosing a tag that the number of matched records is few from the list."
msgstr ""
"``--drilldown tag`` returns a list of pair of available tag and the number "
"of matched records. You can avoid \"no hit search\" case by choosing a tag "
"from the list. You can also avoid \"too many search results\" case by "
"choosing a tag that the number of matched records is few from the list."

msgid "You can create the following UI with the drilldown results:"
msgstr "You can create the following UI with the drilldown results:"

msgid ""
"Links to narrow search results. (Users don't need to input a search query by "
"their keyboard. They just click a link.)"
msgstr ""
"Links to narrow search results. (Users don't need to input a search query by "
"their keyboard. They just click a link.)"

msgid "Most EC sites use the UI. See side menu at Amazon."
msgstr "Most EC sites use the UI. See side menu at Amazon."

msgid ""
"Groonga supports not only counting grouped records but also finding the "
"maximum and/or minimum value from grouped records, summing values in grouped "
"records and so on. See :ref:`select-drilldown-related-parameters` for "
"details."
msgstr ""
"Groonga supports not only counting grouped records but also finding the "
"maximum and/or minimum value from grouped records, summing values in grouped "
"records and so on. See :ref:`select-drilldown-related-parameters` for "
"details."

msgid "Dynamic column"
msgstr "Dynamic column"

msgid ""
"You can create zero or more columns dynamically while a ``select`` "
"execution. You can use them for drilldown by computed value, window function "
"and so on."
msgstr ""
"You can create zero or more columns dynamically while a ``select`` "
"execution. You can use them for drilldown by computed value, window function "
"and so on."

msgid ""
"Here is an example that uses dynamic column for drilldown by computed value. "
"This example creates a new column named ``n_likes_class``. ``n_likes_class`` "
"column has classified value of ``Entry.n_likes`` value. This example "
"classifies ``Entry.n_likes`` column value ``10`` step and the lowest number "
"in the class is the classified value. If a ``Entry.n_likes`` value is "
"between ``0`` and ``9`` such as ``3`` and ``5``, ``n_likes_class`` value "
"(classified value) is ``0``. If ``Entry.n_likes`` value is between ``10`` "
"and ``19`` such as ``10`` and ``15``, ``n_likes_class`` value (classified "
"value) is ``10``."
msgstr ""
"Here is an example that uses dynamic column for drilldown by computed value. "
"This example creates a new column named ``n_likes_class``. ``n_likes_class`` "
"column has classified value of ``Entry.n_likes`` value. This example "
"classifies ``Entry.n_likes`` column value ``10`` step and the lowest number "
"in the class is the classified value. If a ``Entry.n_likes`` value is "
"between ``0`` and ``9`` such as ``3`` and ``5``, ``n_likes_class`` value "
"(classified value) is ``0``. If ``Entry.n_likes`` value is between ``10`` "
"and ``19`` such as ``10`` and ``15``, ``n_likes_class`` value (classified "
"value) is ``10``."

msgid ""
"You can use :doc:`/reference/functions/number_classify` function for the "
"classification. You need to register ``functions/number`` plugin by :doc:"
"`plugin_register` command to use :doc:`/reference/functions/number_classify` "
"function."
msgstr ""
"You can use :doc:`/reference/functions/number_classify` function for the "
"classification. You need to register ``functions/number`` plugin by :doc:"
"`plugin_register` command to use :doc:`/reference/functions/number_classify` "
"function."

msgid ""
"This example does drilldown by ``n_likes_class`` value. The drilldown result "
"will help you to know data trend."
msgstr ""
"This example does drilldown by ``n_likes_class`` value. The drilldown result "
"will help you to know data trend."

msgid "See :ref:`select-dynamic-column-related-parameters` for details."
msgstr "See :ref:`select-dynamic-column-related-parameters` for details."

msgid "Window function"
msgstr "Window function"

msgid ""
"You can compute each record value from values of grouped records. For "
"example, you can compute sums of each group and puts sums to each record. "
"The difference against drilldown is drilldown can compute sums of each group "
"but it puts sums to each group not record."
msgstr ""
"You can compute each record value from values of grouped records. For "
"example, you can compute sums of each group and puts sums to each record. "
"The difference against drilldown is drilldown can compute sums of each group "
"but it puts sums to each group not record."

msgid "Here is the result with window function. Each record has sum:"
msgstr "Here is the result with window function. Each record has sum:"

msgid "Group No."
msgstr "Group No."

msgid "Target value"
msgstr "Target value"

msgid "Sum result"
msgstr "Sum result"

msgid "1"
msgstr "1"

msgid "5"
msgstr "5"

msgid "2"
msgstr "2"

msgid "10"
msgstr "10"

msgid "25"
msgstr "25"

msgid "15"
msgstr "15"

msgid "3"
msgstr "3"

msgid "8"
msgstr "8"

msgid "Here is the result with drilldown. Each group has sum:"
msgstr "Here is the result with drilldown. Each group has sum:"

msgid "Target values"
msgstr "Target values"

msgid "10, 15"
msgstr "10, 15"

msgid "3, 5"
msgstr "3, 5"

msgid "Window function is useful for data analysis."
msgstr "Window function is useful for data analysis."

msgid "Here is an example that sums ``Entries.n_likes`` per ``Entries.tag``:"
msgstr "Here is an example that sums ``Entries.n_likes`` per ``Entries.tag``:"

msgid "See :ref:`select-window-function-related-parameters` for details."
msgstr "See :ref:`select-window-function-related-parameters` for details."

msgid "Parameters"
msgstr "Parameters"

msgid "This section describes all parameters. Parameters are categorized."
msgstr "This section describes all parameters. Parameters are categorized."

msgid "Required parameters"
msgstr "Required parameters"

msgid "There is a required parameter, ``table``."
msgstr "There is a required parameter, ``table``."

msgid "``table``"
msgstr "``table``"

msgid "Specifies a table to be searched. ``table`` must be specified."
msgstr "Specifies a table to be searched. ``table`` must be specified."

msgid "If nonexistent table is specified, an error is returned."
msgstr "If nonexistent table is specified, an error is returned."

msgid "Search related parameters"
msgstr "Search related parameters"

msgid ""
"There are search related parameters. Typically, ``match_columns`` and "
"``query`` parameters are used for implementing a search box. ``filter`` "
"parameters is used for implementing complex search feature."
msgstr ""
"There are search related parameters. Typically, ``match_columns`` and "
"``query`` parameters are used for implementing a search box. ``filter`` "
"parameters is used for implementing complex search feature."

msgid ""
"If both ``query`` and ``filter`` are specified, selected records must be "
"matched against both ``query`` and ``filter``. If both ``query`` and "
"``filter`` aren't specified, all records are selected."
msgstr ""
"If both ``query`` and ``filter`` are specified, selected records must be "
"matched against both ``query`` and ``filter``. If both ``query`` and "
"``filter`` aren't specified, all records are selected."

msgid "``match_columns``"
msgstr "``match_columns``"

msgid ""
"Specifies the default target column for fulltext search by ``query`` "
"parameter value. A target column for fulltext search can be specified in "
"``query`` parameter. The difference between ``match_columns`` and ``query`` "
"is whether weight and score function are supported or not. ``match_columns`` "
"supports them but ``query`` doesn't."
msgstr ""
"Specifies the default target column for fulltext search by ``query`` "
"parameter value. A target column for fulltext search can be specified in "
"``query`` parameter. The difference between ``match_columns`` and ``query`` "
"is whether weight and score function are supported or not. ``match_columns`` "
"supports them but ``query`` doesn't."

msgid ""
"Weight is relative importance of target column. A higher weight target "
"column gets more hit score rather than a lower weight target column when a "
"record is matched by fulltext search. The default weight is 1."
msgstr ""
"Weight is relative importance of target column. A higher weight target "
"column gets more hit score rather than a lower weight target column when a "
"record is matched by fulltext search. The default weight is 1."

msgid "Here is a simple ``match_columns`` usage example."
msgstr "Here is a simple ``match_columns`` usage example."

msgid ""
"``--match_columns content`` means the default target column for fulltext "
"search is ``content`` column and its weight is 1. ``--output_columns '_key, "
"_score'`` means that the ``select`` command outputs ``_key`` value and "
"``_score`` value for matched records."
msgstr ""
"``--match_columns content`` means the default target column for fulltext "
"search is ``content`` column and its weight is 1. ``--output_columns '_key, "
"_score'`` means that the ``select`` command outputs ``_key`` value and "
"``_score`` value for matched records."

msgid ""
"Pay attention to ``_score`` value. ``_score`` value is the number of matched "
"counts against ``query`` parameter value. In the example, ``query`` "
"parameter value is ``fast``. The fact that ``_score`` value is 1 means that "
"``fast`` appers in ``content`` column only once.  The fact that ``_score`` "
"value is 2 means that ``fast`` appears in ``content`` column twice."
msgstr ""
"Pay attention to ``_score`` value. ``_score`` value is the number of matched "
"counts against ``query`` parameter value. In the example, ``query`` "
"parameter value is ``fast``. The fact that ``_score`` value is 1 means that "
"``fast`` appers in ``content`` column only once.  The fact that ``_score`` "
"value is 2 means that ``fast`` appears in ``content`` column twice."

msgid ""
"To specify weight, ``column * weight`` syntax is used. Here is a weight "
"usage example."
msgstr ""
"To specify weight, ``column * weight`` syntax is used. Here is a weight "
"usage example."

msgid ""
"``--match_columns 'content * 2'`` means the default target column for "
"fulltext search is ``content`` column and its weight is 2."
msgstr ""
"``--match_columns 'content * 2'`` means the default target column for "
"fulltext search is ``content`` column and its weight is 2."

msgid ""
"Pay attention to ``_score`` value. ``_score`` value is doubled because "
"weight is 2."
msgstr ""
"Pay attention to ``_score`` value. ``_score`` value is doubled because "
"weight is 2."

msgid ""
"You can specify one or more columns as the default target columns for "
"fulltext search. If one or more columns are specified, fulltext search is "
"done for all columns and scores are accumulated. If one of the columns is "
"matched against ``query`` parameter value, the record is treated as matched."
msgstr ""
"You can specify one or more columns as the default target columns for "
"fulltext search. If one or more columns are specified, fulltext search is "
"done for all columns and scores are accumulated. If one of the columns is "
"matched against ``query`` parameter value, the record is treated as matched."

msgid ""
"To specify one or more columns, ``column1 * weight1 || column2 * weight2 "
"|| ...`` syntax is used. ``* weight`` can be omitted. If it is omitted, 1 is "
"used for weight. Here is a one or more columns usage example."
msgstr ""
"To specify one or more columns, ``column1 * weight1 || column2 * weight2 "
"|| ...`` syntax is used. ``* weight`` can be omitted. If it is omitted, 1 is "
"used for weight. Here is a one or more columns usage example."

msgid ""
"``--match_columns '_key * 10 || content'`` means the default target columns "
"for fulltext search are ``_key`` and ``content`` columns and ``_key`` "
"column's weight is 10 and ``content`` column's weight is 1. This weight "
"allocation means ``_key`` column value is more important rather than "
"``content`` column value. In this example, title of blog entry is more "
"important rather thatn content of blog entry."
msgstr ""
"``--match_columns '_key * 10 || content'`` means the default target columns "
"for fulltext search are ``_key`` and ``content`` columns and ``_key`` "
"column's weight is 10 and ``content`` column's weight is 1. This weight "
"allocation means ``_key`` column value is more important rather than "
"``content`` column value. In this example, title of blog entry is more "
"important rather thatn content of blog entry."

msgid ""
"You can also specify score function. See :doc:`/reference/scorer` for "
"details."
msgstr ""
"You can also specify score function. See :doc:`/reference/scorer` for "
"details."

msgid ""
"Note that score function isn't related to :ref:`select-scorer` parameter."
msgstr ""
"Note that score function isn't related to :ref:`select-scorer` parameter."

msgid ""
"You can also specify index columns to ``--match_columns`` parameter. In such "
"a case, you can control what index column should be used and what data "
"column should be searched explicitly."
msgstr ""
"You can also specify index columns to ``--match_columns`` parameter. In such "
"a case, you can control what index column should be used and what data "
"column should be searched explicitly."

msgid ""
"If data column is specified to ``--match_columns``, Groonga searches related "
"index column automatically, but it is not defined as a spec that which index "
"column is actually selected. Thus, if multiple index columns are created "
"against one data column, there is no way to know which index column will be "
"selected in advance. (In most cases, latest created index column will be "
"selected, but it is undocumented behavior.)"
msgstr ""
"If data column is specified to ``--match_columns``, Groonga searches related "
"index column automatically, but it is not defined as a spec that which index "
"column is actually selected. Thus, if multiple index columns are created "
"against one data column, there is no way to know which index column will be "
"selected in advance. (In most cases, latest created index column will be "
"selected, but it is undocumented behavior.)"

msgid "Here is a use case how to specify index column."
msgstr "Here is a use case how to specify index column."

msgid "index column for one data column"
msgstr "index column for one data column"

msgid "index column for multiple data column"
msgstr "index column for multiple data column"

msgid ""
"If you use index column for one data column, index column which corresponds "
"to data column is paired. Thus, ``TERMS_TABLE.INDEX_COLUMN`` should be "
"specified. On the otherhand, if you use index column for multiple data "
"column, all data column is searched by default. If you want to use specific "
"multiple index column to search specific data column, Specify index column "
"with data column name such as ``TERMS_TABLE.INDEX_COLUMN.DATA_COLUMN``. See "
"example use case :ref:`full-text-search-with-specific-index-name` for "
"details."
msgstr ""
"If you use index column for one data column, index column which corresponds "
"to data column is paired. Thus, ``TERMS_TABLE.INDEX_COLUMN`` should be "
"specified. On the otherhand, if you use index column for multiple data "
"column, all data column is searched by default. If you want to use specific "
"multiple index column to search specific data column, Specify index column "
"with data column name such as ``TERMS_TABLE.INDEX_COLUMN.DATA_COLUMN``. See "
"example use case :ref:`full-text-search-with-specific-index-name` for "
"details."

msgid "``query``"
msgstr "``query``"

msgid ""
"Specifies the query text. Normally, it is used for fulltext search with "
"``match_columns`` parameter. ``query`` parameter is designed for a fulltext "
"search form in a Web page. A query text should be formatted in :doc:`/"
"reference/grn_expr/query_syntax`. The syntax is similar to common search "
"form like Google's search form. For example, ``word1 word2`` means that "
"groonga searches records that contain both ``word1`` and ``word2``. ``word1 "
"OR word2`` means that groonga searches records that contain either ``word1`` "
"or ``word2``."
msgstr ""
"Specifies the query text. Normally, it is used for fulltext search with "
"``match_columns`` parameter. ``query`` parameter is designed for a fulltext "
"search form in a Web page. A query text should be formatted in :doc:`/"
"reference/grn_expr/query_syntax`. The syntax is similar to common search "
"form like Google's search form. For example, ``word1 word2`` means that "
"groonga searches records that contain both ``word1`` and ``word2``. ``word1 "
"OR word2`` means that groonga searches records that contain either ``word1`` "
"or ``word2``."

msgid "Here is a simple logical and search example."
msgstr "Here is a simple logical and search example."

msgid ""
"The ``select`` command searches records that contain two words ``fast`` and "
"``groonga`` in ``content`` column value from ``Entries`` table."
msgstr ""
"The ``select`` command searches records that contain two words ``fast`` and "
"``groonga`` in ``content`` column value from ``Entries`` table."

msgid "Here is a simple logical or search example."
msgstr "Here is a simple logical or search example."

msgid ""
"The ``select`` command searches records that contain one of two words "
"``groonga`` or ``mroonga`` in ``content`` column value from ``Entries`` "
"table."
msgstr ""
"The ``select`` command searches records that contain one of two words "
"``groonga`` or ``mroonga`` in ``content`` column value from ``Entries`` "
"table."

msgid "See :doc:`/reference/grn_expr/query_syntax` for other syntax."
msgstr "See :doc:`/reference/grn_expr/query_syntax` for other syntax."

msgid ""
"It can be used for not only fulltext search but also other conditions. For "
"example, ``column:value`` means the value of ``column`` column is equal to "
"``value``. ``column:<value`` means the value of ``column`` column is less "
"than ``value``."
msgstr ""
"It can be used for not only fulltext search but also other conditions. For "
"example, ``column:value`` means the value of ``column`` column is equal to "
"``value``. ``column:<value`` means the value of ``column`` column is less "
"than ``value``."

msgid "Here is a simple equality operator search example."
msgstr "Here is a simple equality operator search example."

msgid ""
"The ``select`` command searches records that ``_key`` column value is "
"``Groonga`` from ``Entries`` table."
msgstr ""
"The ``select`` command searches records that ``_key`` column value is "
"``Groonga`` from ``Entries`` table."

msgid "Here is a simple less than operator search example."
msgstr "Here is a simple less than operator search example."

msgid ""
"The ``select`` command searches records that ``n_likes`` column value is "
"less than ``11`` from ``Entries`` table."
msgstr ""
"The ``select`` command searches records that ``n_likes`` column value is "
"less than ``11`` from ``Entries`` table."

msgid "See :doc:`/reference/grn_expr/query_syntax` for other operations."
msgstr "See :doc:`/reference/grn_expr/query_syntax` for other operations."

msgid "``filter``"
msgstr "``filter``"

msgid ""
"Specifies the filter text. Normally, it is used for complex search "
"conditions. ``filter`` can be used with ``query`` parameter. If both "
"``filter`` and ``query`` are specified, there are conbined with logical and. "
"It means that matched records should be matched against both ``filter`` and "
"``query``."
msgstr ""
"Specifies the filter text. Normally, it is used for complex search "
"conditions. ``filter`` can be used with ``query`` parameter. If both "
"``filter`` and ``query`` are specified, there are conbined with logical and. "
"It means that matched records should be matched against both ``filter`` and "
"``query``."

msgid ""
"``filter`` parameter is designed for complex conditions. A filter text "
"should be formatted in :doc:`/reference/grn_expr/script_syntax`. The syntax "
"is similar to ECMAScript. For example, ``column == \"value\"`` means that "
"the value of ``column`` column is equal to ``\"value\"``. ``column < value`` "
"means that the value of ``column`` column is less than ``value``."
msgstr ""
"``filter`` parameter is designed for complex conditions. A filter text "
"should be formatted in :doc:`/reference/grn_expr/script_syntax`. The syntax "
"is similar to ECMAScript. For example, ``column == \"value\"`` means that "
"the value of ``column`` column is equal to ``\"value\"``. ``column < value`` "
"means that the value of ``column`` column is less than ``value``."

msgid "See :doc:`/reference/grn_expr/script_syntax` for other operators."
msgstr "See :doc:`/reference/grn_expr/script_syntax` for other operators."

msgid "``load_table``"
msgstr "``load_table``"

msgid ""
"You can store specified a table a result of ``select`` with ``--"
"load_table``, ``--load-columns`` and ``--load_values`` arguments. ``--"
"load_table`` specifies a table name for storing a result of ``select``."
msgstr ""
"You can store specified a table a result of ``select`` with ``--"
"load_table``, ``--load-columns`` and ``--load_values`` arguments. ``--"
"load_table`` specifies a table name for storing a result of ``select``."

msgid "You must specify a table that already exists."
msgstr "You must specify a table that already exists."

msgid ""
"This argument must use with :ref:`select-load-columns` and :ref:`select-load-"
"values`."
msgstr ""
"This argument must use with :ref:`select-load-columns` and :ref:`select-load-"
"values`."

msgid ""
"Here is an example that can store ``_id`` and ``timestamp`` that a result of "
"``select`` in a Logs table specified by ``--load_table``."
msgstr ""
"Here is an example that can store ``_id`` and ``timestamp`` that a result of "
"``select`` in a Logs table specified by ``--load_table``."

msgid "``load_columns``"
msgstr "``load_columns``"

msgid ""
"Specifies columns of a table that specifying ``--load-table``. Stores value "
"of columns that specified with :ref:`select-load-values` in columns that "
"specified with this argument. You must specify columns that already exists."
msgstr ""
"Specifies columns of a table that specifying ``--load-table``. Stores value "
"of columns that specified with :ref:`select-load-values` in columns that "
"specified with this argument. You must specify columns that already exists."

msgid ""
"This argument must use with :ref:`select-load-table` and :ref:`select-load-"
"values`."
msgstr ""
"This argument must use with :ref:`select-load-table` and :ref:`select-load-"
"values`."

msgid "See example of ``--load_table`` for how to use this argument."
msgstr "See example of ``--load_table`` for how to use this argument."

msgid "``load_values``"
msgstr "``load_values``"

msgid ""
"Specifies columns of result of ``select``. Specifies columns for storing "
"values into columns that specified with :ref:`select-load-columns`. You must "
"specify columns that already exists."
msgstr ""
"Specifies columns of result of ``select``. Specifies columns for storing "
"values into columns that specified with :ref:`select-load-columns`. You must "
"specify columns that already exists."

msgid ""
"This argument must use with :ref:`select-load-table` and :ref:`select-load-"
"columns`."
msgstr ""
"This argument must use with :ref:`select-load-table` and :ref:`select-load-"
"columns`."

msgid "Advanced search parameters"
msgstr "Advanced search parameters"

msgid "``match_escalation_threshold``"
msgstr "``match_escalation_threshold``"

msgid ""
"Specifies threshold to determine whether search storategy escalation is used "
"or not. The threshold is compared against the number of matched records. If "
"the number of matched records is equal to or less than the threshold, the "
"search storategy escalation is used. See :doc:`/spec/search` about the "
"search storategy escalation."
msgstr ""
"Specifies threshold to determine whether search storategy escalation is used "
"or not. The threshold is compared against the number of matched records. If "
"the number of matched records is equal to or less than the threshold, the "
"search storategy escalation is used. See :doc:`/spec/search` about the "
"search storategy escalation."

msgid ""
"The default threshold is 0. It means that search storategy escalation is "
"used only when no records are matched."
msgstr ""
"The default threshold is 0. It means that search storategy escalation is "
"used only when no records are matched."

msgid "The default threshold can be customized by one of the followings."
msgstr "The default threshold can be customized by one of the followings."

msgid "``--with-match-escalation-threshold`` option of configure"
msgstr "``--with-match-escalation-threshold`` option of configure"

msgid "``--match-escalation-threshold`` option of groonga command"
msgstr "``--match-escalation-threshold`` option of groonga command"

msgid "``match-escalation-threshold`` configuration item in configuration file"
msgstr ""
"``match-escalation-threshold`` configuration item in configuration file"

msgid ""
"Here is a simple ``match_escalation_threshold`` usage example. The first "
"``select`` doesn't have ``match_escalation_threshold`` parameter. The second "
"``select`` has ``match_escalation_threshold`` parameter."
msgstr ""
"Here is a simple ``match_escalation_threshold`` usage example. The first "
"``select`` doesn't have ``match_escalation_threshold`` parameter. The second "
"``select`` has ``match_escalation_threshold`` parameter."

msgid ""
"The first ``select`` command searches records that contain a word ``groo`` "
"in ``content`` column value from ``Entries`` table. But no records are "
"matched because the ``TokenBigram`` tokenizer tokenizes ``groonga`` to "
"``groonga`` not ``gr|ro|oo|on|ng|ga``. (The ``TokenBigramSplitSymbolAlpha`` "
"tokenizer tokenizes ``groonga`` to ``gr|ro|oo|on|ng|ga``. See :doc:`/"
"reference/tokenizers` for details.) It means that ``groonga`` is indexed but "
"``groo`` isn't indexed. So no records are matched against ``groo`` by exact "
"match. In the case, the search storategy escalation is used because the "
"number of matched records (0) is equal to ``match_escalation_threshold`` "
"(0). One record is matched against ``groo`` by unsplit search."
msgstr ""
"The first ``select`` command searches records that contain a word ``groo`` "
"in ``content`` column value from ``Entries`` table. But no records are "
"matched because the ``TokenBigram`` tokenizer tokenizes ``groonga`` to "
"``groonga`` not ``gr|ro|oo|on|ng|ga``. (The ``TokenBigramSplitSymbolAlpha`` "
"tokenizer tokenizes ``groonga`` to ``gr|ro|oo|on|ng|ga``. See :doc:`/"
"reference/tokenizers` for details.) It means that ``groonga`` is indexed but "
"``groo`` isn't indexed. So no records are matched against ``groo`` by exact "
"match. In the case, the search storategy escalation is used because the "
"number of matched records (0) is equal to ``match_escalation_threshold`` "
"(0). One record is matched against ``groo`` by unsplit search."

msgid ""
"The second ``select`` command also searches records that contain a word "
"``groo`` in ``content`` column value from ``Entries`` table. And it also "
"doesn't find matched records. In this case, the search storategy escalation "
"is not used because the number of matched records (0) is larger than "
"``match_escalation_threshold`` (-1). So no more searches aren't executed. "
"And no records are matched."
msgstr ""
"The second ``select`` command also searches records that contain a word "
"``groo`` in ``content`` column value from ``Entries`` table. And it also "
"doesn't find matched records. In this case, the search storategy escalation "
"is not used because the number of matched records (0) is larger than "
"``match_escalation_threshold`` (-1). So no more searches aren't executed. "
"And no records are matched."

msgid "``match_escalation``"
msgstr "``match_escalation``"

msgid ""
"Specifies how to use match escalation. See also :ref:`select-match-"
"escalation` and :doc:`/spec/search` about the match escalation."
msgstr ""
"Specifies how to use match escalation. See also :ref:`select-match-"
"escalation` and :doc:`/spec/search` about the match escalation."

msgid "Here are available values:"
msgstr "Here are available values:"

msgid "Value"
msgstr "Value"

msgid "Description"
msgstr "Description"

msgid "``auto``"
msgstr "``auto``"

msgid ""
"Groonga uses :ref:`select-match-escalation-threshold` to determine whether "
"match escalation is used or not."
msgstr ""
"Groonga uses :ref:`select-match-escalation-threshold` to determine whether "
"match escalation is used or not."

msgid "This is the default."
msgstr "This is the default."

msgid "``yes``"
msgstr "``yes``"

msgid "Groonga always uses match escalation."
msgstr "Groonga always uses match escalation."

msgid "``no``"
msgstr "``no``"

msgid "Groonga never use match escalation."
msgstr "Groonga never use match escalation."

msgid ""
"``--match_escalation yes`` is stronger than ``--match_escalation_threshold "
"9999...999``. ``--filter 'true && column @ \"query\"`` with ``--"
"match_escalation yes`` uses match escalation. ``--filter 'true && column @ "
"\"query\"`` with ``--match_escalation_threshold 9999...999`` doesn't use "
"match escalation."
msgstr ""
"``--match_escalation yes`` is stronger than ``--match_escalation_threshold "
"9999...999``. ``--filter 'true && column @ \"query\"`` with ``--"
"match_escalation yes`` uses match escalation. ``--filter 'true && column @ "
"\"query\"`` with ``--match_escalation_threshold 9999...999`` doesn't use "
"match escalation."

msgid ""
"Here is a simple ``match_escalation`` usage example. The first ``select`` "
"doesn't have ``match_escalation`` parameter. The second ``select`` has "
"``match_escalation`` parameter."
msgstr ""
"Here is a simple ``match_escalation`` usage example. The first ``select`` "
"doesn't have ``match_escalation`` parameter. The second ``select`` has "
"``match_escalation`` parameter."

msgid ""
"The first ``select`` command searches records that contain a word ``groo`` "
"in ``content`` column value from ``Entries`` table. But no records are "
"matched because the ``TokenBigram`` tokenizer tokenizes ``groonga`` to "
"``groonga`` not ``gr|ro|oo|on|ng|ga``."
msgstr ""
"The first ``select`` command searches records that contain a word ``groo`` "
"in ``content`` column value from ``Entries`` table. But no records are "
"matched because the ``TokenBigram`` tokenizer tokenizes ``groonga`` to "
"``groonga`` not ``gr|ro|oo|on|ng|ga``."

msgid ""
"The second ``select`` command also searches records that contain a word "
"``groo`` in ``content`` column value from ``Entries`` table. And it uses "
"match escalation. So it can find matched records."
msgstr ""
"The second ``select`` command also searches records that contain a word "
"``groo`` in ``content`` column value from ``Entries`` table. And it uses "
"match escalation. So it can find matched records."

msgid "``query_expansion``"
msgstr "``query_expansion``"

msgid "Use :ref:`select-query-expander` instead."
msgstr "Use :ref:`select-query-expander` instead."

msgid "``query_flags``"
msgstr "``query_flags``"

msgid ""
"It customs ``query`` parameter syntax. You cannot update column value by "
"``query`` parameter by default. But if you specify ``ALLOW_COLUMN|"
"ALLOW_UPDATE`` as ``query_flags``, you can update column value by ``query``."
msgstr ""
"It customs ``query`` parameter syntax. You cannot update column value by "
"``query`` parameter by default. But if you specify ``ALLOW_COLUMN|"
"ALLOW_UPDATE`` as ``query_flags``, you can update column value by ``query``."

msgid "``ALLOW_PRAGMA``"
msgstr "``ALLOW_PRAGMA``"

msgid "``ALLOW_COLUMN``"
msgstr "``ALLOW_COLUMN``"

msgid "``ALLOW_UPDATE``"
msgstr "``ALLOW_UPDATE``"

msgid "``ALLOW_LEADING_NOT``"
msgstr "``ALLOW_LEADING_NOT``"

msgid "``QUERY_NO_SYNTAX_ERROR``"
msgstr "``QUERY_NO_SYNTAX_ERROR``"

msgid "``NONE``"
msgstr "``NONE``"

msgid ""
"``ALLOW_PRAGMA`` enables pragma at the head of ``query``. This is not "
"implemented yet."
msgstr ""
"``ALLOW_PRAGMA`` enables pragma at the head of ``query``. This is not "
"implemented yet."

msgid ""
"``ALLOW_COLUMN`` enables search againt columns that are not included in "
"``match_columns``. To specify column, there are ``COLUMN:...`` syntaxes."
msgstr ""
"``ALLOW_COLUMN`` enables search againt columns that are not included in "
"``match_columns``. To specify column, there are ``COLUMN:...`` syntaxes."

msgid ""
"``ALLOW_UPDATE`` enables column update by ``query`` with ``COLUMN:"
"=NEW_VALUE`` syntax. ``ALLOW_COLUMN`` is also required to update column "
"because the column update syntax specifies column."
msgstr ""
"``ALLOW_UPDATE`` enables column update by ``query`` with ``COLUMN:"
"=NEW_VALUE`` syntax. ``ALLOW_COLUMN`` is also required to update column "
"because the column update syntax specifies column."

msgid ""
"``ALLOW_LEADING_NOT`` enables leading NOT condition with ``-WORD`` syntax. "
"The query searches records that doesn't match ``WORD``. Leading NOT "
"condition query is heavy query in many cases because it matches many "
"records. So this flag is disabled by default. Be careful about it when you "
"use the flag."
msgstr ""
"``ALLOW_LEADING_NOT`` enables leading NOT condition with ``-WORD`` syntax. "
"The query searches records that doesn't match ``WORD``. Leading NOT "
"condition query is heavy query in many cases because it matches many "
"records. So this flag is disabled by default. Be careful about it when you "
"use the flag."

msgid ""
"``QUERY_NO_SYNTAX_ERROR`` enables never causes syntax error for query. This "
"flag is useful when an application uses user input directly and doesn't want "
"to show syntax error to the user and in a log. This flag is disabled by "
"default."
msgstr ""
"``QUERY_NO_SYNTAX_ERROR`` enables never causes syntax error for query. This "
"flag is useful when an application uses user input directly and doesn't want "
"to show syntax error to the user and in a log. This flag is disabled by "
"default."

msgid "``NONE`` is just ignores. You can use ``NONE`` for specifying no flags."
msgstr ""
"``NONE`` is just ignores. You can use ``NONE`` for specifying no flags."

msgid ""
"They can be combined by separated ``|`` such as ``ALLOW_COLUMN|"
"ALLOW_UPDATE``."
msgstr ""
"They can be combined by separated ``|`` such as ``ALLOW_COLUMN|"
"ALLOW_UPDATE``."

msgid "The default value is ``ALLOW_PRAGMA|ALLOW_COLUMN``."
msgstr "The default value is ``ALLOW_PRAGMA|ALLOW_COLUMN``."

msgid "Here is a usage example of ``ALLOW_COLUMN``."
msgstr "Here is a usage example of ``ALLOW_COLUMN``."

msgid ""
"The ``select`` command searches records that contain ``mroonga`` in "
"``content`` column value from ``Entries`` table."
msgstr ""
"The ``select`` command searches records that contain ``mroonga`` in "
"``content`` column value from ``Entries`` table."

msgid "Here is a usage example of ``ALLOW_UPDATE``."
msgstr "Here is a usage example of ``ALLOW_UPDATE``."

msgid ""
"The first ``select`` command sets ``age`` column value of all records to "
"``19``. The second ``select`` command outputs updated ``age`` column values."
msgstr ""
"The first ``select`` command sets ``age`` column value of all records to "
"``19``. The second ``select`` command outputs updated ``age`` column values."

msgid "Here is a usage example of ``ALLOW_LEADING_NOT``."
msgstr "Here is a usage example of ``ALLOW_LEADING_NOT``."

msgid ""
"The ``select`` command searches records that don't contain ``mroonga`` in "
"``content`` column value from ``Entries`` table."
msgstr ""
"The ``select`` command searches records that don't contain ``mroonga`` in "
"``content`` column value from ``Entries`` table."

msgid "Here are a schema definition and sample data to describe other flags:"
msgstr "Here are a schema definition and sample data to describe other flags:"

msgid "Here is an example of ``QUERY_NO_SYNTAX_ERROR``:"
msgstr "Here is an example of ``QUERY_NO_SYNTAX_ERROR``:"

msgid ""
"If you don't specify this flag, the quey causes a syntax error as below."
msgstr ""
"If you don't specify this flag, the quey causes a syntax error as below."

msgid "Here is a usage example of ``NONE``."
msgstr "Here is a usage example of ``NONE``."

msgid ""
"The ``select`` command searches records that contain one of two words "
"``mroonga`` or ``_key:Groonga`` in ``content`` from ``Entries`` table. Note "
"that ``_key:Groonga`` doesn't mean that the value of ``_key`` column is "
"equal to ``Groonga``. Because ``ALLOW_COLUMN`` flag is not specified."
msgstr ""
"The ``select`` command searches records that contain one of two words "
"``mroonga`` or ``_key:Groonga`` in ``content`` from ``Entries`` table. Note "
"that ``_key:Groonga`` doesn't mean that the value of ``_key`` column is "
"equal to ``Groonga``. Because ``ALLOW_COLUMN`` flag is not specified."

msgid "See also :doc:`/reference/grn_expr/query_syntax`."
msgstr "See also :doc:`/reference/grn_expr/query_syntax`."

msgid "``query_expander``"
msgstr "``query_expander``"

msgid ""
"It's for query expansion. Query expansion substitutes specific words to "
"another words in query. Nomally, it's used for synonym search."
msgstr ""
"It's for query expansion. Query expansion substitutes specific words to "
"another words in query. Nomally, it's used for synonym search."

msgid ""
"It specifies a column that is used to substitute ``query`` parameter value. "
"The format of this parameter value is \"``${TABLE}.${COLUMN}``\". For "
"example, \"``Terms.synonym``\" specifies ``synonym`` column in ``Terms`` "
"table."
msgstr ""
"It specifies a column that is used to substitute ``query`` parameter value. "
"The format of this parameter value is \"``${TABLE}.${COLUMN}``\". For "
"example, \"``Terms.synonym``\" specifies ``synonym`` column in ``Terms`` "
"table."

msgid ""
"Table for query expansion is called \"substitution table\". Substitution "
"table's key must be ``ShortText``. So array table (``TABLE_NO_KEY``) can't "
"be used for query expansion. Because array table doesn't have key."
msgstr ""
"Table for query expansion is called \"substitution table\". Substitution "
"table's key must be ``ShortText``. So array table (``TABLE_NO_KEY``) can't "
"be used for query expansion. Because array table doesn't have key."

msgid ""
"Column for query expansion is called \"substitution column\". Substitution "
"column's value type must be ``ShortText``. Column type must be vector "
"(``COLUMN_VECTOR``)."
msgstr ""
"Column for query expansion is called \"substitution column\". Substitution "
"column's value type must be ``ShortText``. Column type must be vector "
"(``COLUMN_VECTOR``)."

msgid ""
"Query expansion substitutes key of substitution table in query with values "
"in substitution column. If a word in ``query`` is a key of substitution "
"table, the word is substituted with substitution column value that is "
"associated with the key. Substition isn't performed recursively. It means "
"that substitution target words in substituted query aren't substituted."
msgstr ""
"Query expansion substitutes key of substitution table in query with values "
"in substitution column. If a word in ``query`` is a key of substitution "
"table, the word is substituted with substitution column value that is "
"associated with the key. Substition isn't performed recursively. It means "
"that substitution target words in substituted query aren't substituted."

msgid ""
"Here is a sample substitution table to show a simple ``query_expander`` "
"usage example."
msgstr ""
"Here is a sample substitution table to show a simple ``query_expander`` "
"usage example."

msgid ""
"``Thesaurus`` substitution table has two synonyms, ``\"mroonga\"`` and "
"``\"groonga\"``. If an user searches with ``\"mroonga\"``, Groonga searches "
"with ``\"((mroonga) OR (tritonn) OR (groonga mysql))\"``. If an user "
"searches with ``\"groonga\"``, Groonga searches with ``\"((groonga) OR "
"(senna))\"``."
msgstr ""
"``Thesaurus`` substitution table has two synonyms, ``\"mroonga\"`` and "
"``\"groonga\"``. If an user searches with ``\"mroonga\"``, Groonga searches "
"with ``\"((mroonga) OR (tritonn) OR (groonga mysql))\"``. If an user "
"searches with ``\"groonga\"``, Groonga searches with ``\"((groonga) OR "
"(senna))\"``."

msgid ""
"Normally, it's good idea that substitution table uses a normalizer. For "
"example, if normalizer is used, substitute target word is matched in case "
"insensitive manner. See :doc:`/reference/normalizers` for available "
"normalizers."
msgstr ""
"Normally, it's good idea that substitution table uses a normalizer. For "
"example, if normalizer is used, substitute target word is matched in case "
"insensitive manner. See :doc:`/reference/normalizers` for available "
"normalizers."

msgid ""
"Note that those synonym values include the key value such as ``\"mroonga\"`` "
"and ``\"groonga\"``. It's recommended that you include the key value. If you "
"don't include key value, substituted value doesn't include the original "
"substitute target value. Normally, including the original value is better "
"search result. If you have a word that you don't want to be searched, you "
"should not include the original word. For example, you can implement \"stop "
"words\" by an empty vector value."
msgstr ""
"Note that those synonym values include the key value such as ``\"mroonga\"`` "
"and ``\"groonga\"``. It's recommended that you include the key value. If you "
"don't include key value, substituted value doesn't include the original "
"substitute target value. Normally, including the original value is better "
"search result. If you have a word that you don't want to be searched, you "
"should not include the original word. For example, you can implement \"stop "
"words\" by an empty vector value."

msgid "Here is a simple ``query_expander`` usage example."
msgstr "Here is a simple ``query_expander`` usage example."

msgid ""
"The first ``select`` command doesn't use query expansion. So a record that "
"has ``\"tritonn\"`` isn't found. The second ``select`` command uses query "
"expansion. So a record that has ``\"tritonn\"`` is found. The third "
"``select`` command doesn't use query expansion but it is same as the second "
"``select`` command. The third one uses expanded query."
msgstr ""
"The first ``select`` command doesn't use query expansion. So a record that "
"has ``\"tritonn\"`` isn't found. The second ``select`` command uses query "
"expansion. So a record that has ``\"tritonn\"`` is found. The third "
"``select`` command doesn't use query expansion but it is same as the second "
"``select`` command. The third one uses expanded query."

msgid ""
"Each substitute value can contain any :doc:`/reference/grn_expr/"
"query_syntax` syntax such as ``(...)`` and ``OR``. You can use complex "
"substitution by using those syntax."
msgstr ""
"Each substitute value can contain any :doc:`/reference/grn_expr/"
"query_syntax` syntax such as ``(...)`` and ``OR``. You can use complex "
"substitution by using those syntax."

msgid "Here is a complex substitution usage example that uses query syntax."
msgstr "Here is a complex substitution usage example that uses query syntax."

msgid ""
"The ``load`` command registers a new synonym ``\"popular\"``. It is "
"substituted with ``((popular) OR (n_likes:>=10))``. The substituted query "
"means that \"popular\" is containing the word \"popular\" or 10 or more "
"liked entries."
msgstr ""
"The ``load`` command registers a new synonym ``\"popular\"``. It is "
"substituted with ``((popular) OR (n_likes:>=10))``. The substituted query "
"means that \"popular\" is containing the word \"popular\" or 10 or more "
"liked entries."

msgid ""
"The ``select`` command outputs records that ``n_likes`` column value is "
"equal to or more than ``10`` from ``Entries`` table."
msgstr ""
"The ``select`` command outputs records that ``n_likes`` column value is "
"equal to or more than ``10`` from ``Entries`` table."

msgid "Output related parameters"
msgstr "Output related parameters"

msgid "``output_columns``"
msgstr "``output_columns``"

msgid "Specifies output columns separated by ``,``."
msgstr "Specifies output columns separated by ``,``."

msgid "Here is a simple ``output_columns`` usage example."
msgstr "Here is a simple ``output_columns`` usage example."

msgid "The ``select`` command just outputs ``_id`` and ``_key`` column values."
msgstr ""
"The ``select`` command just outputs ``_id`` and ``_key`` column values."

msgid ""
"``*`` is a special value. It means that all columns that are not :doc:`/"
"reference/columns/pseudo`."
msgstr ""
"``*`` is a special value. It means that all columns that are not :doc:`/"
"reference/columns/pseudo`."

msgid "Here is a ``*`` usage example."
msgstr "Here is a ``*`` usage example."

msgid ""
"The ``select`` command outputs ``_key`` pseudo column, ``content`` column "
"and ``n_likes`` column values but doesn't output ``_id`` pseudo column value."
msgstr ""
"The ``select`` command outputs ``_key`` pseudo column, ``content`` column "
"and ``n_likes`` column values but doesn't output ``_id`` pseudo column value."

msgid ""
"The default value is ``_id, _key, *``. It means that all column values "
"except ``_score`` are outputted."
msgstr ""
"The default value is ``_id, _key, *``. It means that all column values "
"except ``_score`` are outputted."

msgid "``sortby``"
msgstr "``sortby``"

msgid "Use :ref:`select-sort-keys` instead."
msgstr "Use :ref:`select-sort-keys` instead."

msgid "``sort_keys``"
msgstr "``sort_keys``"

msgid "Specifies sort keys separated by ``,``. Each sort key is column name."
msgstr "Specifies sort keys separated by ``,``. Each sort key is column name."

msgid "Here is a simple ``sort_keys`` usage example."
msgstr "Here is a simple ``sort_keys`` usage example."

msgid ""
"The ``select`` command sorts by ``n_likes`` column value in ascending order. "
"For records that has the same ``n_likes`` are sorted by ``_id`` in ascending "
"order. ``\"Good-bye Senna\"`` and ``\"Good-bye Tritonn\"`` are the case."
msgstr ""
"The ``select`` command sorts by ``n_likes`` column value in ascending order. "
"For records that has the same ``n_likes`` are sorted by ``_id`` in ascending "
"order. ``\"Good-bye Senna\"`` and ``\"Good-bye Tritonn\"`` are the case."

msgid "If you want to sort in descending order, add ``-`` before column name."
msgstr "If you want to sort in descending order, add ``-`` before column name."

msgid "Here is a descending order ``sort_keys`` usage example."
msgstr "Here is a descending order ``sort_keys`` usage example."

msgid ""
"The ``select`` command sorts by ``n_likes`` column value in descending "
"order. But ascending order is used for sorting by ``_id``."
msgstr ""
"The ``select`` command sorts by ``n_likes`` column value in descending "
"order. But ascending order is used for sorting by ``_id``."

msgid ""
"You can use ``_score`` pseudo column in ``sort_keys`` if you use ``query`` "
"or ``filter`` parameter."
msgstr ""
"You can use ``_score`` pseudo column in ``sort_keys`` if you use ``query`` "
"or ``filter`` parameter."

msgid ""
"The ``select`` command sorts matched records by hit score in descending "
"order and outputs record key and hit score."
msgstr ""
"The ``select`` command sorts matched records by hit score in descending "
"order and outputs record key and hit score."

msgid ""
"If you use ``_score`` without ``query`` nor ``filter`` parameters, it's just "
"ignored but get a warning in log file."
msgstr ""
"If you use ``_score`` without ``query`` nor ``filter`` parameters, it's just "
"ignored but get a warning in log file."

msgid "``offset``"
msgstr "``offset``"

msgid ""
"Specifies offset to determine output records range. Offset is zero-based. "
"``--offset 1`` means output range is started from the 2nd record."
msgstr ""
"Specifies offset to determine output records range. Offset is zero-based. "
"``--offset 1`` means output range is started from the 2nd record."

msgid "The ``select`` command outputs from the 4th record."
msgstr "The ``select`` command outputs from the 4th record."

msgid ""
"You can specify negative value. It means that ``the number of matched "
"records + offset``. If you have 3 matched records and specify ``--offset "
"-2``, you get records from the 2nd (``3 + -2 = 1``. ``1`` means 2nd. "
"Remember that offset is zero-based.) record to the 3rd record."
msgstr ""
"You can specify negative value. It means that ``the number of matched "
"records + offset``. If you have 3 matched records and specify ``--offset "
"-2``, you get records from the 2nd (``3 + -2 = 1``. ``1`` means 2nd. "
"Remember that offset is zero-based.) record to the 3rd record."

msgid ""
"The ``select`` command outputs from the 4th record because the total number "
"of records is ``5``."
msgstr ""
"The ``select`` command outputs from the 4th record because the total number "
"of records is ``5``."

msgid "The default value is ``0``."
msgstr "The default value is ``0``."

msgid "``limit``"
msgstr "``limit``"

msgid ""
"Specifies the max number of output records. If the number of matched records "
"is less than ``limit``, all records are outputted."
msgstr ""
"Specifies the max number of output records. If the number of matched records "
"is less than ``limit``, all records are outputted."

msgid "Here is a simple ``limit`` usage example."
msgstr "Here is a simple ``limit`` usage example."

msgid "The ``select`` command outputs the 3rd, the 4th and the 5th records."
msgstr "The ``select`` command outputs the 3rd, the 4th and the 5th records."

msgid ""
"You can specify negative value. It means that ``the number of matched "
"records + limit + 1``. For example, ``--limit -1`` outputs all records. It's "
"very useful value to show all records."
msgstr ""
"You can specify negative value. It means that ``the number of matched "
"records + limit + 1``. For example, ``--limit -1`` outputs all records. It's "
"very useful value to show all records."

msgid "Here is a simple negative ``limit`` value usage example."
msgstr "Here is a simple negative ``limit`` value usage example."

msgid "The ``select`` command outputs all records."
msgstr "The ``select`` command outputs all records."

msgid "The default value is ``10``."
msgstr "The default value is ``10``."

msgid "``scorer``"
msgstr "``scorer``"

msgid "TODO: write in English and add example."
msgstr "TODO: write in English and add example."

msgid ""
"検索条件にマッチする全てのレコードに対して適用するgrn_exprをscript形式で指定"
"します。"
msgstr ""
"検索条件にマッチする全てのレコードに対して適用するgrn_exprをscript形式で指定"
"します。"

msgid ""
"scorerは、検索処理が完了し、ソート処理が実行される前に呼び出されます。従っ"
"て、各レコードのスコアを操作する式を指定しておけば、検索結果のソート順序をカ"
"スタマイズできるようになります。"
msgstr ""
"scorerは、検索処理が完了し、ソート処理が実行される前に呼び出されます。従っ"
"て、各レコードのスコアを操作する式を指定しておけば、検索結果のソート順序をカ"
"スタマイズできるようになります。"

msgid "Dynamic column related parameters"
msgstr "Dynamic column related parameters"

msgid ""
"This section describes dynamic column related parameters. You can use "
"dynamic column for window function but this section doesn't describe window "
"function. See :ref:`select-window-function-related-parameters` for window "
"function."
msgstr ""
"This section describes dynamic column related parameters. You can use "
"dynamic column for window function but this section doesn't describe window "
"function. See :ref:`select-window-function-related-parameters` for window "
"function."

msgid ""
"You can create zero or more columns and fill values into these columns while "
"a ``select`` execution. These columns are called as \"dynamic columns\". You "
"can use dynamic columns as same as normal columns after dynamic columns are "
"created."
msgstr ""
"You can create zero or more columns and fill values into these columns while "
"a ``select`` execution. These columns are called as \"dynamic columns\". You "
"can use dynamic columns as same as normal columns after dynamic columns are "
"created."

msgid ""
"Dynamic column has performance merit because its values are computed at once "
"and reused computed values."
msgstr ""
"Dynamic column has performance merit because its values are computed at once "
"and reused computed values."

msgid ""
"Dynamic column increases memory usage because its values are kept while the "
"``select`` execution."
msgstr ""
"Dynamic column increases memory usage because its values are kept while the "
"``select`` execution."

msgid "You need to use dynamic column in the following cases:"
msgstr "You need to use dynamic column in the following cases:"

msgid "You want to name values like ``AS`` in SQL."
msgstr "You want to name values like ``AS`` in SQL."

msgid ""
"You want to use computed values for drilldown. Groonga doesn't support "
"drilldown target value computation in drilldown."
msgstr ""
"You want to use computed values for drilldown. Groonga doesn't support "
"drilldown target value computation in drilldown."

msgid "You want to use window function."
msgstr "You want to use window function."

msgid ""
"There are some points to create dynamic columns. You must specify ``stage`` "
"to each dynamic column to control dynamic columns creation points. It's "
"important that you choose proper point to get better performance."
msgstr ""
"There are some points to create dynamic columns. You must specify ``stage`` "
"to each dynamic column to control dynamic columns creation points. It's "
"important that you choose proper point to get better performance."

msgid ""
"For example, it's not a good idea that you create a dynamic column that is "
"only used for output for all records. The number of output records will be a "
"little even if there are many records in a table. Because you will filter, "
"sort and limit all records and output only the limited records in many cases."
msgstr ""
"For example, it's not a good idea that you create a dynamic column that is "
"only used for output for all records. The number of output records will be a "
"little even if there are many records in a table. Because you will filter, "
"sort and limit all records and output only the limited records in many cases."

msgid "See :ref:`select-columns-name-stage` for ``stage`` detail."
msgstr "See :ref:`select-columns-name-stage` for ``stage`` detail."

msgid ""
"Here are parameters for dynamic column. They don't include window function "
"related parameters. See :ref:`select-window-function-related-parameters` for "
"window function related parameters:"
msgstr ""
"Here are parameters for dynamic column. They don't include window function "
"related parameters. See :ref:`select-window-function-related-parameters` for "
"window function related parameters:"

msgid "Name"
msgstr "Name"

msgid "Default value"
msgstr "Default value"

msgid "Required or optional"
msgstr "Required or optional"

msgid "``columns[${NAME}].stage``"
msgstr "``columns[${NAME}].stage``"

msgid "``null``"
msgstr "``null``"

msgid "Required"
msgstr "Required"

msgid "``columns[${NAME}].flags``"
msgstr "``columns[${NAME}].flags``"

msgid "``COLUMN_SCALAR``"
msgstr "``COLUMN_SCALAR``"

msgid "Optional"
msgstr "Optional"

msgid "``columns[${NAME}].type``"
msgstr "``columns[${NAME}].type``"

msgid "``columns[${NAME}].value``"
msgstr "``columns[${NAME}].value``"

msgid ""
"You need to specify multiple parameters for a dynamic column. ``${NAME}`` is "
"the name for each dynamic column. Parameters that use the same ``${NAME}`` "
"are treated as parameters for the same dynamic column. Here is an example to "
"specify parameters for 2 dynamic columns (``name1`` and ``name2``)::"
msgstr ""
"You need to specify multiple parameters for a dynamic column. ``${NAME}`` is "
"the name for each dynamic column. Parameters that use the same ``${NAME}`` "
"are treated as parameters for the same dynamic column. Here is an example to "
"specify parameters for 2 dynamic columns (``name1`` and ``name2``)::"

msgid ""
"Specifies when the dynamic column is created. This is a required parameter "
"to create a dynamic column."
msgstr ""
"Specifies when the dynamic column is created. This is a required parameter "
"to create a dynamic column."

msgid "Here are available stages:"
msgstr "Here are available stages:"

msgid "``initial``"
msgstr "``initial``"

msgid "Dynamic column is created at first."
msgstr "Dynamic column is created at first."

msgid "``filtered``"
msgstr "``filtered``"

msgid ""
"Dynamic column is created after :ref:`select-query` and :ref:`select-filter` "
"are evaluated."
msgstr ""
"Dynamic column is created after :ref:`select-query` and :ref:`select-filter` "
"are evaluated."

msgid "``output``"
msgstr "``output``"

msgid ""
"Dynamic column is created before :ref:`select-output-columns` is evaluated."
msgstr ""
"Dynamic column is created before :ref:`select-output-columns` is evaluated."

msgid ""
"Here is the ``select`` process flow with dynamic column creation points. You "
"should choose stage as late as possible:"
msgstr ""
"Here is the ``select`` process flow with dynamic column creation points. You "
"should choose stage as late as possible:"

msgid ""
"Creates dynamic columns for ``initial`` stage. All records have these "
"dynamic columns."
msgstr ""
"Creates dynamic columns for ``initial`` stage. All records have these "
"dynamic columns."

msgid ""
"Evaluates :ref:`select-query` and :ref:`select-filter`. You can use dynamic "
"columns created in ``initial`` stage."
msgstr ""
"Evaluates :ref:`select-query` and :ref:`select-filter`. You can use dynamic "
"columns created in ``initial`` stage."

msgid ""
"Creates dynamic columns for ``filtered`` stage. Only filtered records have "
"these dynamic columns."
msgstr ""
"Creates dynamic columns for ``filtered`` stage. Only filtered records have "
"these dynamic columns."

msgid ""
"Evaluates :ref:`select-adjuster`. You can use dynamic columns created in "
"``initial`` stage and ``filtered`` stage."
msgstr ""
"Evaluates :ref:`select-adjuster`. You can use dynamic columns created in "
"``initial`` stage and ``filtered`` stage."

msgid ""
"Evaluates :ref:`select-scorer`. You can use dynamic columns created in "
"``initial`` stage and ``filtered`` stage."
msgstr ""
"Evaluates :ref:`select-scorer`. You can use dynamic columns created in "
"``initial`` stage and ``filtered`` stage."

msgid ""
"Evaluates :ref:`select-sort-keys`, :ref:`select-offset` and :ref:`select-"
"limit`. You can use dynamic columns created in ``initial`` stage and "
"``filtered`` stage."
msgstr ""
"Evaluates :ref:`select-sort-keys`, :ref:`select-offset` and :ref:`select-"
"limit`. You can use dynamic columns created in ``initial`` stage and "
"``filtered`` stage."

msgid ""
"Evaluates :ref:`select-slice-related-parameters`. You can use dynamic "
"columns created in ``initial`` stage and ``filtered`` stage."
msgstr ""
"Evaluates :ref:`select-slice-related-parameters`. You can use dynamic "
"columns created in ``initial`` stage and ``filtered`` stage."

msgid ""
"Evaluates :ref:`select-drilldown-related-parameters` and :ref:`select-"
"advanced-drilldown-related-parameters`. You can use dynamic columns created "
"in ``initial`` stage and ``filtered`` stage. Note that you can create "
"dynamic columns in each drilldown."
msgstr ""
"Evaluates :ref:`select-drilldown-related-parameters` and :ref:`select-"
"advanced-drilldown-related-parameters`. You can use dynamic columns created "
"in ``initial`` stage and ``filtered`` stage. Note that you can create "
"dynamic columns in each drilldown."

msgid ""
"Creates dynamic columns for ``output`` stage. Only :ref:`select-limit` "
"records have these dynamic columns."
msgstr ""
"Creates dynamic columns for ``output`` stage. Only :ref:`select-limit` "
"records have these dynamic columns."

msgid ""
"Evaluates :ref:`select-output-columns`. You can use dynamic columns created "
"in ``initial`` stage, ``filtered`` stage and ``output`` stage."
msgstr ""
"Evaluates :ref:`select-output-columns`. You can use dynamic columns created "
"in ``initial`` stage, ``filtered`` stage and ``output`` stage."

msgid ""
"Here is an example that creates ``is_popular`` column at ``initial`` stage. "
"You can use ``is_popular`` in all parameters such as ``filter`` and "
"``output_columns``:"
msgstr ""
"Here is an example that creates ``is_popular`` column at ``initial`` stage. "
"You can use ``is_popular`` in all parameters such as ``filter`` and "
"``output_columns``:"

msgid ""
"Specifies flags for the dynamic column. It's the same as ``flags`` parameter "
"for :doc:`column_create`. See :ref:`column-create-flags` for available flags."
msgstr ""
"Specifies flags for the dynamic column. It's the same as ``flags`` parameter "
"for :doc:`column_create`. See :ref:`column-create-flags` for available flags."

msgid "The default value is ``COLUMN_SCALAR``."
msgstr "The default value is ``COLUMN_SCALAR``."

msgid ""
"Here is a ``columns[${NAME}].flags`` example. It creates a vector column by "
"``COLUMN_VECTOR`` flags. ``plugin_register functions/vector`` is for using :"
"doc:`/reference/functions/vector_new` function:"
msgstr ""
"Here is a ``columns[${NAME}].flags`` example. It creates a vector column by "
"``COLUMN_VECTOR`` flags. ``plugin_register functions/vector`` is for using :"
"doc:`/reference/functions/vector_new` function:"

msgid ""
"Specifies value type for the dynamic column. It's the same as ``type`` "
"parameter for :doc:`column_create`. See :ref:`column-create-type` for "
"available types."
msgstr ""
"Specifies value type for the dynamic column. It's the same as ``type`` "
"parameter for :doc:`column_create`. See :ref:`column-create-type` for "
"available types."

msgid "This is a required parameter."
msgstr "This is a required parameter."

msgid ""
"Here is an example that creates a ``ShortText`` type column. Stored value is "
"casted to ``ShortText`` automatically. In this example, number is casted to "
"``ShortText``:"
msgstr ""
"Here is an example that creates a ``ShortText`` type column. Stored value is "
"casted to ``ShortText`` automatically. In this example, number is casted to "
"``ShortText``:"

msgid ""
"Specifies expression that generates values for the dynamic column. The "
"expression uses :doc:`/reference/grn_expr/script_syntax`. It's the same "
"syntax in :ref:`select-filter`. For example, ``1 + 1``, "
"``string_length(\"Hello\")``, ``column * 1.08`` and so on are valid "
"expressions."
msgstr ""
"Specifies expression that generates values for the dynamic column. The "
"expression uses :doc:`/reference/grn_expr/script_syntax`. It's the same "
"syntax in :ref:`select-filter`. For example, ``1 + 1``, "
"``string_length(\"Hello\")``, ``column * 1.08`` and so on are valid "
"expressions."

msgid ""
"You need to specify :doc:`/reference/window_function` as ``value`` value and "
"other window function related parameters when you use window function. See :"
"ref:`select-window-function-related-parameters` for details."
msgstr ""
"You need to specify :doc:`/reference/window_function` as ``value`` value and "
"other window function related parameters when you use window function. See :"
"ref:`select-window-function-related-parameters` for details."

msgid ""
"Here is an example that creates a new dynamic column that stores the number "
"of characters of content. This example uses :doc:`/reference/functions/"
"string_length` function in ``functions/string`` plugin to compute the number "
"of characters in a string. :doc:`plugin_register` is used to register "
"``functions/string`` plugin:"
msgstr ""
"Here is an example that creates a new dynamic column that stores the number "
"of characters of content. This example uses :doc:`/reference/functions/"
"string_length` function in ``functions/string`` plugin to compute the number "
"of characters in a string. :doc:`plugin_register` is used to register "
"``functions/string`` plugin:"

msgid "Window function related parameters"
msgstr "Window function related parameters"

msgid ""
"This section describes window function related parameters. You need to use "
"dynamic column for using window function. See :ref:`select-dynamic-column-"
"related-parameters` for dynamic column."
msgstr ""
"This section describes window function related parameters. You need to use "
"dynamic column for using window function. See :ref:`select-dynamic-column-"
"related-parameters` for dynamic column."

msgid ""
"Window function in Groonga is similar to window function in SQL. Normal "
"function computes its result with only the current record. On the other "
"hand, window function computes its result with multiple records. Window "
"function is useful to data analysis because it can process multiple records."
msgstr ""
"Window function in Groonga is similar to window function in SQL. Normal "
"function computes its result with only the current record. On the other "
"hand, window function computes its result with multiple records. Window "
"function is useful to data analysis because it can process multiple records."

msgid ""
"You can find supported window functions at :doc:`/reference/"
"window_function`. For example, :doc:`/reference/window_functions/window_sum` "
"is a window function. It sums numbers in the target records."
msgstr ""
"You can find supported window functions at :doc:`/reference/"
"window_function`. For example, :doc:`/reference/window_functions/window_sum` "
"is a window function. It sums numbers in the target records."

msgid ""
"Window function processes records that are grouped by the specified group "
"keys. For example, window function processes three groups (``Hello`` group, "
"``Groonga`` group and ``Senna`` group) in the following case. :doc:`/"
"reference/window_functions/window_sum` sums ``n_likes`` values in each group:"
msgstr ""
"Window function processes records that are grouped by the specified group "
"keys. For example, window function processes three groups (``Hello`` group, "
"``Groonga`` group and ``Senna`` group) in the following case. :doc:`/"
"reference/window_functions/window_sum` sums ``n_likes`` values in each group:"

msgid "Group key value"
msgstr "Group key value"

msgid "``n_likes`` value"
msgstr "``n_likes`` value"

msgid ":doc:`/reference/window_functions/window_sum` result"
msgstr ":doc:`/reference/window_functions/window_sum` result"

msgid "``Hello``"
msgstr "``Hello``"

msgid "``Groonga``"
msgstr "``Groonga``"

msgid "``Senna``"
msgstr "``Senna``"

msgid "6"
msgstr "6"

msgid ""
"You can specify no group keys. In the case, window function processes only "
"one group that includes all records. :doc:`/reference/window_functions/"
"window_sum` sums all ``n_likes`` values in the following case:"
msgstr ""
"You can specify no group keys. In the case, window function processes only "
"one group that includes all records. :doc:`/reference/window_functions/"
"window_sum` sums all ``n_likes`` values in the following case:"

msgid "36"
msgstr "36"

msgid ""
"Window function processes records in each group in the specified order. You "
"can specify no sort keys like the above group keys example."
msgstr ""
"Window function processes records in each group in the specified order. You "
"can specify no sort keys like the above group keys example."

msgid ""
"The behavior when you specify no sort keys depends on each window function "
"specification. For example, :doc:`/reference/window_functions/window_sum` "
"uses different behavior whether sort keys are specified or not. If you "
"specify not sort keys, :doc:`/reference/window_functions/window_sum` sums "
"values of all records in the group and puts it to all target records like "
"the above group keys example. If you specify sort keys, :doc:`/reference/"
"window_functions/window_sum` behaves as cumulative sum. :doc:`/reference/"
"window_functions/window_sum` sums values of all records in the group in "
"sequence and puts the current sum to the current record like the following:"
msgstr ""
"The behavior when you specify no sort keys depends on each window function "
"specification. For example, :doc:`/reference/window_functions/window_sum` "
"uses different behavior whether sort keys are specified or not. If you "
"specify not sort keys, :doc:`/reference/window_functions/window_sum` sums "
"values of all records in the group and puts it to all target records like "
"the above group keys example. If you specify sort keys, :doc:`/reference/"
"window_functions/window_sum` behaves as cumulative sum. :doc:`/reference/"
"window_functions/window_sum` sums values of all records in the group in "
"sequence and puts the current sum to the current record like the following:"

msgid "Sort key value"
msgstr "Sort key value"

msgid "Note"
msgstr "Note"

msgid "The first record in group No. 1. (``5 = 5``)"
msgstr "The first record in group No. 1. (``5 = 5``)"

msgid "90"
msgstr "90"

msgid "The first record in group No. 2. (``10 = 10``)"
msgstr "The first record in group No. 2. (``10 = 10``)"

msgid "91"
msgstr "91"

msgid "The second record in group No. 2. (``10 + 15 = 25``)"
msgstr "The second record in group No. 2. (``10 + 15 = 25``)"

msgid "200"
msgstr "200"

msgid "The second record in group No. 3. (``5 + 3 = 8``)"
msgstr "The second record in group No. 3. (``5 + 3 = 8``)"

msgid "100"
msgstr "100"

msgid "The first record in group No. 3. (``5 = 5``)"
msgstr "The first record in group No. 3. (``5 = 5``)"

msgid ""
"Here are parameters for window function. You need to specify both window "
"function related parameters and required dynamic columns parameters. Because "
"window function is implemented based on dynamic column. See :ref:`select-"
"dynamic-column-related-parameters` for dynamic column related parameters:"
msgstr ""
"Here are parameters for window function. You need to specify both window "
"function related parameters and required dynamic columns parameters. Because "
"window function is implemented based on dynamic column. See :ref:`select-"
"dynamic-column-related-parameters` for dynamic column related parameters:"

msgid "Use :doc:`/reference/window_function`."
msgstr "Use :doc:`/reference/window_function`."

msgid "``columns[${NAME}].window.sort_keys``"
msgstr "``columns[${NAME}].window.sort_keys``"

msgid "Required if ``columns[${NAME}].window.group_keys`` isn't specified."
msgstr "Required if ``columns[${NAME}].window.group_keys`` isn't specified."

msgid "``columns[${NAME}].window.group_keys``"
msgstr "``columns[${NAME}].window.group_keys``"

msgid "Required if ``columns[${NAME}].window.sort_keys`` isn't specified."
msgstr "Required if ``columns[${NAME}].window.sort_keys`` isn't specified."

msgid ""
"Specifies sort keys in each group. Window function processes records in each "
"group in the specified order."
msgstr ""
"Specifies sort keys in each group. Window function processes records in each "
"group in the specified order."

msgid ""
"Sort keys are separated by ``,``. Each sort key is column name. It's the "
"same as :ref:`select-sort-keys`."
msgstr ""
"Sort keys are separated by ``,``. Each sort key is column name. It's the "
"same as :ref:`select-sort-keys`."

msgid ""
"You must specify :ref:`select-columns-name-window-sort-keys` or :ref:`select-"
"columns-name-window-group-keys` to use window function."
msgstr ""
"You must specify :ref:`select-columns-name-window-sort-keys` or :ref:`select-"
"columns-name-window-group-keys` to use window function."

msgid ""
"Here is an example that computes cumulative sum per ``Entries.tag``. Each "
"group is sorted by ``Entries._key``:"
msgstr ""
"Here is an example that computes cumulative sum per ``Entries.tag``. Each "
"group is sorted by ``Entries._key``:"

msgid ""
"Specifies group keys. Window function processes records in each group. If "
"you specify no group keys, window function processes one group that includes "
"all records."
msgstr ""
"Specifies group keys. Window function processes records in each group. If "
"you specify no group keys, window function processes one group that includes "
"all records."

msgid ""
"Group keys are separated by ``,``. Each group key is column name. It's the "
"same as :ref:`select-drilldown`."
msgstr ""
"Group keys are separated by ``,``. Each group key is column name. It's the "
"same as :ref:`select-drilldown`."

msgid "Here is an example that computes sum per ``Entries.tag``:"
msgstr "Here is an example that computes sum per ``Entries.tag``:"

msgid "Drilldown related parameters"
msgstr "Drilldown related parameters"

msgid ""
"This section describes basic drilldown related parameters. Advanced "
"drilldown related parameters are described in another section."
msgstr ""
"This section describes basic drilldown related parameters. Advanced "
"drilldown related parameters are described in another section."

msgid "``drilldown``"
msgstr "``drilldown``"

msgid "Specifies keys for grouping separated by ``,``."
msgstr "Specifies keys for grouping separated by ``,``."

msgid ""
"Matched records by specified search conditions are grouped by each key. If "
"you specify no search condition, all records are grouped by each key."
msgstr ""
"Matched records by specified search conditions are grouped by each key. If "
"you specify no search condition, all records are grouped by each key."

msgid "Here is a simple ``drilldown`` example:"
msgstr "Here is a simple ``drilldown`` example:"

msgid "The ``select`` command outputs the following information:"
msgstr "The ``select`` command outputs the following information:"

msgid "There is one record that has \"Hello\" tag."
msgstr "There is one record that has \"Hello\" tag."

msgid "There is two records that has \"Groonga\" tag."
msgstr "There is two records that has \"Groonga\" tag."

msgid "There is two records that has \"Senna\" tag."
msgstr "There is two records that has \"Senna\" tag."

msgid "Here is a ``drilldown`` with search condition example:"
msgstr "Here is a ``drilldown`` with search condition example:"

msgid "In records that have 5 or larger as ``n_likes`` value:"
msgstr "In records that have 5 or larger as ``n_likes`` value:"

msgid "Here is a ``drilldown`` with multiple group keys example:"
msgstr "Here is a ``drilldown`` with multiple group keys example:"

msgid "About ``tag``:"
msgstr "About ``tag``:"

msgid "About ``n_likes``:"
msgstr "About ``n_likes``:"

msgid "``drilldown_sortby``"
msgstr "``drilldown_sortby``"

msgid "Use :ref:`select-drilldown-sort-keys` instead."
msgstr "Use :ref:`select-drilldown-sort-keys` instead."

msgid "``drilldown_sort_keys``"
msgstr "``drilldown_sort_keys``"

msgid ""
"Specifies sort keys for drilldown outputs separated by ``,``. Each sort key "
"is column name."
msgstr ""
"Specifies sort keys for drilldown outputs separated by ``,``. Each sort key "
"is column name."

msgid ""
"You can refer the number of grouped records by ``_nsubrecs`` :doc:`/"
"reference/columns/pseudo`."
msgstr ""
"You can refer the number of grouped records by ``_nsubrecs`` :doc:`/"
"reference/columns/pseudo`."

msgid "Here is a simple ``drilldown_sort_keys`` example:"
msgstr "Here is a simple ``drilldown_sort_keys`` example:"

msgid ""
"Drilldown result is sorted by the number of grouped records (= "
"``_nsubrecs`` ) in descending order. If there are grouped results that the "
"number of records in the group are the same, these grouped results are "
"sorted by grouped key (= ``_key`` ) in ascending order."
msgstr ""
"Drilldown result is sorted by the number of grouped records (= "
"``_nsubrecs`` ) in descending order. If there are grouped results that the "
"number of records in the group are the same, these grouped results are "
"sorted by grouped key (= ``_key`` ) in ascending order."

msgid "The sort keys are used in all group keys specified in ``drilldown``:"
msgstr "The sort keys are used in all group keys specified in ``drilldown``:"

msgid ""
"The same sort keys are used in ``tag`` drilldown and ``n_likes`` drilldown."
msgstr ""
"The same sort keys are used in ``tag`` drilldown and ``n_likes`` drilldown."

msgid ""
"If you want to use different sort keys for each drilldown, use :ref:`select-"
"advanced-drilldown-related-parameters`."
msgstr ""
"If you want to use different sort keys for each drilldown, use :ref:`select-"
"advanced-drilldown-related-parameters`."

msgid "``drilldown_output_columns``"
msgstr "``drilldown_output_columns``"

msgid "Specifies output columns for drilldown separated by ``,``."
msgstr "Specifies output columns for drilldown separated by ``,``."

msgid "Here is a ``drilldown_output_columns`` example:"
msgstr "Here is a ``drilldown_output_columns`` example:"

msgid "The ``select`` command just outputs grouped key."
msgstr "The ``select`` command just outputs grouped key."

msgid ""
"If grouped key is a referenced type column (= column that its type is a "
"table), you can access column of the table referenced by the referenced type "
"column."
msgstr ""
"If grouped key is a referenced type column (= column that its type is a "
"table), you can access column of the table referenced by the referenced type "
"column."

msgid ""
"Here are a schema definition and sample data to show drilldown against "
"referenced type column:"
msgstr ""
"Here are a schema definition and sample data to show drilldown against "
"referenced type column:"

msgid ""
"``Tags`` table is a referenced table. ``Items.tag`` is a referenced type "
"column."
msgstr ""
"``Tags`` table is a referenced table. ``Items.tag`` is a referenced type "
"column."

msgid ""
"You can refer ``Tags.label`` by ``label`` in ``drilldown_output_columns``:"
msgstr ""
"You can refer ``Tags.label`` by ``label`` in ``drilldown_output_columns``:"

msgid ""
"You can use ``*`` to refer all columns in referenced table (= ``Tags``):"
msgstr ""
"You can use ``*`` to refer all columns in referenced table (= ``Tags``):"

msgid "``*`` is expanded to ``label, priority``."
msgstr "``*`` is expanded to ``label, priority``."

msgid ""
"The default value of ``drilldown_output_columns`` is ``_key, _nsubrecs``. It "
"means that grouped key and the number of records in the group are output."
msgstr ""
"The default value of ``drilldown_output_columns`` is ``_key, _nsubrecs``. It "
"means that grouped key and the number of records in the group are output."

msgid ""
"You can use more :doc:`/reference/columns/pseudo` in "
"``drilldown_output_columns`` such as ``_max``, ``_min``, ``_sum`` and "
"``_avg`` when you use :ref:`select-drilldown-calc-types`. See "
"``drilldown_calc_types`` document for details."
msgstr ""
"You can use more :doc:`/reference/columns/pseudo` in "
"``drilldown_output_columns`` such as ``_max``, ``_min``, ``_sum`` and "
"``_avg`` when you use :ref:`select-drilldown-calc-types`. See "
"``drilldown_calc_types`` document for details."

msgid "``drilldown_offset``"
msgstr "``drilldown_offset``"

msgid ""
"Specifies offset to determine range of drilldown output records. Offset is "
"zero-based. ``--drilldown_offset 1`` means output range is started from the "
"2nd record."
msgstr ""
"Specifies offset to determine range of drilldown output records. Offset is "
"zero-based. ``--drilldown_offset 1`` means output range is started from the "
"2nd record."

msgid "Here is a ``drilldown_offset`` example:"
msgstr "Here is a ``drilldown_offset`` example:"

msgid "The ``select`` command outputs from the 2nd record."
msgstr "The ``select`` command outputs from the 2nd record."

msgid ""
"You can specify negative value. It means that ``the number of grouped "
"results + offset``. If you have 3 grouped results and specify ``--"
"drilldown_offset -2``, you get grouped results from the 2st (``3 + -2 = 1``. "
"``1`` means 2nd. Remember that offset is zero-based.) grouped result to the "
"3rd grouped result."
msgstr ""
"You can specify negative value. It means that ``the number of grouped "
"results + offset``. If you have 3 grouped results and specify ``--"
"drilldown_offset -2``, you get grouped results from the 2st (``3 + -2 = 1``. "
"``1`` means 2nd. Remember that offset is zero-based.) grouped result to the "
"3rd grouped result."

msgid ""
"The ``select`` command outputs from the 2nd grouped result because the total "
"number of grouped results is ``3``."
msgstr ""
"The ``select`` command outputs from the 2nd grouped result because the total "
"number of grouped results is ``3``."

msgid "The default value of ``drilldown_offset`` is ``0``."
msgstr "The default value of ``drilldown_offset`` is ``0``."

msgid "``drilldown_limit``"
msgstr "``drilldown_limit``"

msgid ""
"Specifies the max number of groups in a drilldown. If the number of groups "
"is less than ``drilldown_limit``, all groups are outputted."
msgstr ""
"Specifies the max number of groups in a drilldown. If the number of groups "
"is less than ``drilldown_limit``, all groups are outputted."

msgid "Here is a ``drilldown_limit`` example:"
msgstr "Here is a ``drilldown_limit`` example:"

msgid "The ``select`` command outputs the 2rd and the 3rd groups."
msgstr "The ``select`` command outputs the 2rd and the 3rd groups."

msgid ""
"You can specify negative value. It means that ``the number of groups + "
"drilldown_limit + 1``. For example, ``--drilldown_limit -1`` outputs all "
"groups. It's very useful value to show all groups."
msgstr ""
"You can specify negative value. It means that ``the number of groups + "
"drilldown_limit + 1``. For example, ``--drilldown_limit -1`` outputs all "
"groups. It's very useful value to show all groups."

msgid "Here is a negative ``drilldown_limit`` value example."
msgstr "Here is a negative ``drilldown_limit`` value example."

msgid "The ``select`` command outputs all groups."
msgstr "The ``select`` command outputs all groups."

msgid "The default value of ``drilldown_limit`` is ``10``."
msgstr "The default value of ``drilldown_limit`` is ``10``."

msgid "``drilldown_calc_types``"
msgstr "``drilldown_calc_types``"

msgid ""
"Specifies how to calculate (aggregate) values in grouped records by a "
"drilldown. You can specify multiple calculation types separated by \"``,"
"``\". For example, ``MAX,MIN``."
msgstr ""
"Specifies how to calculate (aggregate) values in grouped records by a "
"drilldown. You can specify multiple calculation types separated by \"``,"
"``\". For example, ``MAX,MIN``."

msgid ""
"Calculation target values are read from a column of grouped records. The "
"column is specified by :ref:`select-drilldown-calc-target`."
msgstr ""
"Calculation target values are read from a column of grouped records. The "
"column is specified by :ref:`select-drilldown-calc-target`."

msgid ""
"You can read calculated value by :doc:`/reference/columns/pseudo` such as "
"``_max`` and ``_min`` in :ref:`select-drilldown-output-columns`."
msgstr ""
"You can read calculated value by :doc:`/reference/columns/pseudo` such as "
"``_max`` and ``_min`` in :ref:`select-drilldown-output-columns`."

msgid "You can use the following calculation types:"
msgstr "You can use the following calculation types:"

msgid "Type name"
msgstr "Type name"

msgid ":doc:`/reference/columns/pseudo` name"
msgstr ":doc:`/reference/columns/pseudo` name"

msgid "Need :ref:`select-drilldown-calc-target`"
msgstr "Need :ref:`select-drilldown-calc-target`"

msgid "Nothing."
msgstr "Nothing."

msgid "Not needs."
msgstr "Not needs."

msgid "Just ignored."
msgstr "Just ignored."

msgid "``COUNT``"
msgstr "``COUNT``"

msgid "``_nsubrecs``"
msgstr "``_nsubrecs``"

msgid ""
"Counting grouped records. It's always enabled. So you don't need to specify "
"it."
msgstr ""
"Counting grouped records. It's always enabled. So you don't need to specify "
"it."

msgid "``MAX``"
msgstr "``MAX``"

msgid "``_max``"
msgstr "``_max``"

msgid "Needs."
msgstr "Needs."

msgid ""
"Finding the maximum integer value from integer values in grouped records."
msgstr ""
"Finding the maximum integer value from integer values in grouped records."

msgid "``MIN``"
msgstr "``MIN``"

msgid "``_min``"
msgstr "``_min``"

msgid ""
"Finding the minimum integer value from integer values in grouped records."
msgstr ""
"Finding the minimum integer value from integer values in grouped records."

msgid "``SUM``"
msgstr "``SUM``"

msgid "``_sum``"
msgstr "``_sum``"

msgid "Summing integer values in grouped records."
msgstr "Summing integer values in grouped records."

msgid "``AVG``"
msgstr "``AVG``"

msgid "``_avg``"
msgstr "``_avg``"

msgid "Averaging integer/float values in grouped records."
msgstr "Averaging integer/float values in grouped records."

msgid "Here is a ``MAX`` example:"
msgstr "Here is a ``MAX`` example:"

msgid ""
"The ``select`` command groups all records by ``tag`` column value, finding "
"the maximum ``n_likes`` column value for each group and outputs pairs of "
"grouped key and the maximum ``n_likes`` column value for the group. It uses "
"``_max`` :doc:`/reference/columns/pseudo` to read the maximum ``n_likes`` "
"column value."
msgstr ""
"The ``select`` command groups all records by ``tag`` column value, finding "
"the maximum ``n_likes`` column value for each group and outputs pairs of "
"grouped key and the maximum ``n_likes`` column value for the group. It uses "
"``_max`` :doc:`/reference/columns/pseudo` to read the maximum ``n_likes`` "
"column value."

msgid "Here is a ``MIN`` example:"
msgstr "Here is a ``MIN`` example:"

msgid ""
"The ``select`` command groups all records by ``tag`` column value, finding "
"the minimum ``n_likes`` column value for each group and outputs pairs of "
"grouped key and the minimum ``n_likes`` column value for the group. It uses "
"``_min`` :doc:`/reference/columns/pseudo` to read the minimum ``n_likes`` "
"column value."
msgstr ""
"The ``select`` command groups all records by ``tag`` column value, finding "
"the minimum ``n_likes`` column value for each group and outputs pairs of "
"grouped key and the minimum ``n_likes`` column value for the group. It uses "
"``_min`` :doc:`/reference/columns/pseudo` to read the minimum ``n_likes`` "
"column value."

msgid "Here is a ``SUM`` example:"
msgstr "Here is a ``SUM`` example:"

msgid ""
"The ``select`` command groups all records by ``tag`` column value, sums all "
"``n_likes`` column values for each group and outputs pairs of grouped key "
"and the summed ``n_likes`` column values for the group. It uses ``_sum`` :"
"doc:`/reference/columns/pseudo` to read the summed ``n_likes`` column values."
msgstr ""
"The ``select`` command groups all records by ``tag`` column value, sums all "
"``n_likes`` column values for each group and outputs pairs of grouped key "
"and the summed ``n_likes`` column values for the group. It uses ``_sum`` :"
"doc:`/reference/columns/pseudo` to read the summed ``n_likes`` column values."

msgid "Here is a ``AVG`` example:"
msgstr "Here is a ``AVG`` example:"

msgid ""
"The ``select`` command groups all records by ``tag`` column value, averages "
"all ``n_likes`` column values for each group and outputs pairs of grouped "
"key and the averaged ``n_likes`` column values for the group. It uses "
"``_avg`` :doc:`/reference/columns/pseudo` to read the averaged ``n_likes`` "
"column values."
msgstr ""
"The ``select`` command groups all records by ``tag`` column value, averages "
"all ``n_likes`` column values for each group and outputs pairs of grouped "
"key and the averaged ``n_likes`` column values for the group. It uses "
"``_avg`` :doc:`/reference/columns/pseudo` to read the averaged ``n_likes`` "
"column values."

msgid "Here is an example that uses all calculation types:"
msgstr "Here is an example that uses all calculation types:"

msgid ""
"The ``select`` command specifies multiple calculation types separated by "
"\"``,``\" like ``MAX,MIN,SUM,AVG``. You can use ``_nsubrecs`` :doc:`/"
"reference/columns/pseudo` in :ref:`select-drilldown-output-columns` without "
"specifying ``COUNT`` in ``drilldown_calc_types``. Because ``COUNT`` is "
"always enabled."
msgstr ""
"The ``select`` command specifies multiple calculation types separated by "
"\"``,``\" like ``MAX,MIN,SUM,AVG``. You can use ``_nsubrecs`` :doc:`/"
"reference/columns/pseudo` in :ref:`select-drilldown-output-columns` without "
"specifying ``COUNT`` in ``drilldown_calc_types``. Because ``COUNT`` is "
"always enabled."

msgid ""
"The default value of ``drilldown_calc_types`` is ``NONE``. It means that "
"only ``COUNT`` is enabled. Because ``NONE`` is just ignored and ``COUNT`` is "
"always enabled."
msgstr ""
"The default value of ``drilldown_calc_types`` is ``NONE``. It means that "
"only ``COUNT`` is enabled. Because ``NONE`` is just ignored and ``COUNT`` is "
"always enabled."

msgid "``drilldown_calc_target``"
msgstr "``drilldown_calc_target``"

msgid "Specifies the target column for :ref:`select-drilldown-calc-types`."
msgstr "Specifies the target column for :ref:`select-drilldown-calc-types`."

msgid ""
"If you specify a calculation type that needs a target column such as ``MAX`` "
"in :ref:`select-drilldown-calc-types` but you omit "
"``drilldown_calc_target``, the calculation result is always ``0``."
msgstr ""
"If you specify a calculation type that needs a target column such as ``MAX`` "
"in :ref:`select-drilldown-calc-types` but you omit "
"``drilldown_calc_target``, the calculation result is always ``0``."

msgid ""
"You can specify only one column name like ``--drilldown_calc_target "
"n_likes``. You can't specify multiple column name like ``--"
"drilldown_calc_target _key,n_likes``."
msgstr ""
"You can specify only one column name like ``--drilldown_calc_target "
"n_likes``. You can't specify multiple column name like ``--"
"drilldown_calc_target _key,n_likes``."

msgid ""
"You can use referenced value from the target record by combining \"``.``\" "
"like ``--drilldown_calc_target reference_column.nested_reference_column."
"value``."
msgstr ""
"You can use referenced value from the target record by combining \"``.``\" "
"like ``--drilldown_calc_target reference_column.nested_reference_column."
"value``."

msgid ""
"See :ref:`select-drilldown-calc-types` to know how to use "
"``drilldown_calc_target``."
msgstr ""
"See :ref:`select-drilldown-calc-types` to know how to use "
"``drilldown_calc_target``."

msgid ""
"The default value of ``drilldown_calc_target`` is ``null``. It means that no "
"calculation target column is specified."
msgstr ""
"The default value of ``drilldown_calc_target`` is ``null``. It means that no "
"calculation target column is specified."

msgid "``drilldown_filter``"
msgstr "``drilldown_filter``"

msgid "Specifies the filter condition against the drilled down result."
msgstr "Specifies the filter condition against the drilled down result."

msgid ""
"The syntax is :doc:`/reference/grn_expr/script_syntax`. It's the same as :"
"ref:`select-filter`."
msgstr ""
"The syntax is :doc:`/reference/grn_expr/script_syntax`. It's the same as :"
"ref:`select-filter`."

msgid "Here is an example to suppress tags that are occurred only once:"
msgstr "Here is an example to suppress tags that are occurred only once:"

msgid "``drilldown_max_n_target_records``"
msgstr "``drilldown_max_n_target_records``"

msgid ""
"Specifies the max number of records of the drilldown target table (filtered "
"result) to use drilldown. If the number of filtered result is larger than "
"the specified value, some records in filtered result aren't used for "
"drilldown."
msgstr ""
"Specifies the max number of records of the drilldown target table (filtered "
"result) to use drilldown. If the number of filtered result is larger than "
"the specified value, some records in filtered result aren't used for "
"drilldown."

msgid ""
"If the specified value is negative, it's processed same as :ref:`select-"
"limit`. For example, ``-1`` uses all records. The default value is ``-1``. "
"It means that all filtered records are used by default."
msgstr ""
"If the specified value is negative, it's processed same as :ref:`select-"
"limit`. For example, ``-1`` uses all records. The default value is ``-1``. "
"It means that all filtered records are used by default."

msgid ""
"This feature is useful when filtered result may be very large. A drilldown "
"against large filtered result may be slow. You can limit the max number of "
"records to be used for drilldown by this feature."
msgstr ""
"This feature is useful when filtered result may be very large. A drilldown "
"against large filtered result may be slow. You can limit the max number of "
"records to be used for drilldown by this feature."

msgid ""
"Here is an example to limit the max number of records to be used for "
"drilldown. The last 2 records, ``{\"_id\": 4, \"tag\": \"Senna\"}`` and "
"``{\"_id\": 5, \"tag\": \"Senna\"}``, aren't used:"
msgstr ""
"Here is an example to limit the max number of records to be used for "
"drilldown. The last 2 records, ``{\"_id\": 4, \"tag\": \"Senna\"}`` and "
"``{\"_id\": 5, \"tag\": \"Senna\"}``, aren't used:"

msgid "Advanced drilldown related parameters"
msgstr "Advanced drilldown related parameters"

msgid ""
"You can get multiple drilldown results by specifying multiple group keys by :"
"ref:`select-drilldown`. But you need to use the same configuration for all "
"drilldowns. For example, :ref:`select-drilldown-output-columns` is used by "
"all drilldowns."
msgstr ""
"You can get multiple drilldown results by specifying multiple group keys by :"
"ref:`select-drilldown`. But you need to use the same configuration for all "
"drilldowns. For example, :ref:`select-drilldown-output-columns` is used by "
"all drilldowns."

msgid ""
"You can use a configuration for each drilldown by the following parameters:"
msgstr ""
"You can use a configuration for each drilldown by the following parameters:"

msgid "``drilldowns[${LABEL}].keys``"
msgstr "``drilldowns[${LABEL}].keys``"

msgid "``drilldowns[${LABEL}].sort_keys``"
msgstr "``drilldowns[${LABEL}].sort_keys``"

msgid "``drilldowns[${LABEL}].output_columns``"
msgstr "``drilldowns[${LABEL}].output_columns``"

msgid "``drilldowns[${LABEL}].offset``"
msgstr "``drilldowns[${LABEL}].offset``"

msgid "``drilldowns[${LABEL}].limit``"
msgstr "``drilldowns[${LABEL}].limit``"

msgid "``drilldowns[${LABEL}].calc_types``"
msgstr "``drilldowns[${LABEL}].calc_types``"

msgid "``drilldowns[${LABEL}].calc_target``"
msgstr "``drilldowns[${LABEL}].calc_target``"

msgid "``drilldowns[${LABEL}].filter``"
msgstr "``drilldowns[${LABEL}].filter``"

msgid "``drilldowns[${LABEL}].max_n_target_records``"
msgstr "``drilldowns[${LABEL}].max_n_target_records``"

msgid ""
"``${LABEL}`` is a variable. You can use the following characters for "
"``${LABEL}``:"
msgstr ""
"``${LABEL}`` is a variable. You can use the following characters for "
"``${LABEL}``:"

msgid "Alphabets"
msgstr "Alphabets"

msgid "Digits"
msgstr "Digits"

msgid "``.``"
msgstr "``.``"

msgid "``_``"
msgstr "``_``"

msgid ""
"``${NAME}`` is a variable. You can use the following characters for ``${NAME}"
"``:"
msgstr ""
"``${NAME}`` is a variable. You can use the following characters for ``${NAME}"
"``:"

msgid ""
"You can use more characters but it's better that you use only these "
"characters."
msgstr ""
"You can use more characters but it's better that you use only these "
"characters."

msgid ""
"Parameters that has the same ``${LABEL}`` value are grouped. Grouped "
"parameters are used for one drilldown."
msgstr ""
"Parameters that has the same ``${LABEL}`` value are grouped. Grouped "
"parameters are used for one drilldown."

msgid "For example, there are 2 groups for the following parameters:"
msgstr "For example, there are 2 groups for the following parameters:"

msgid "``--drilldowns[label1].keys _key``"
msgstr "``--drilldowns[label1].keys _key``"

msgid "``--drilldowns[label1].output_columns _nsubrecs``"
msgstr "``--drilldowns[label1].output_columns _nsubrecs``"

msgid "``--drilldowns[label2].keys tag``"
msgstr "``--drilldowns[label2].keys tag``"

msgid "``--drilldowns[label2].output_columns _key,_nsubrecs``"
msgstr "``--drilldowns[label2].output_columns _key,_nsubrecs``"

msgid ""
"``drilldowns[label1].keys`` and ``drilldowns[label1].output_columns`` are "
"grouped. ``drilldowns[label2].keys`` and ``drilldowns[label2]."
"output_columns`` are also grouped."
msgstr ""
"``drilldowns[label1].keys`` and ``drilldowns[label1].output_columns`` are "
"grouped. ``drilldowns[label2].keys`` and ``drilldowns[label2]."
"output_columns`` are also grouped."

msgid ""
"In ``label1`` group, ``_key`` is used for group key and ``_nsubrecs`` is "
"used for output columns."
msgstr ""
"In ``label1`` group, ``_key`` is used for group key and ``_nsubrecs`` is "
"used for output columns."

msgid ""
"In ``label2`` group, ``tag`` is used for group key and ``_key,_nsubrecs`` is "
"used for output columns."
msgstr ""
"In ``label2`` group, ``tag`` is used for group key and ``_key,_nsubrecs`` is "
"used for output columns."

msgid ""
"See document for corresponding ``drilldown_XXX`` parameter to know how to "
"use it for the following parameters:"
msgstr ""
"See document for corresponding ``drilldown_XXX`` parameter to know how to "
"use it for the following parameters:"

msgid "``drilldowns[${LABEL}].sort_keys``: :ref:`select-drilldown-sort-keys`"
msgstr "``drilldowns[${LABEL}].sort_keys``: :ref:`select-drilldown-sort-keys`"

msgid "``drilldowns[${LABEL}].offset``: :ref:`select-drilldown-offset`"
msgstr "``drilldowns[${LABEL}].offset``: :ref:`select-drilldown-offset`"

msgid "``drilldowns[${LABEL}].limit``: :ref:`select-drilldown-limit`"
msgstr "``drilldowns[${LABEL}].limit``: :ref:`select-drilldown-limit`"

msgid "``drilldowns[${LABEL}].calc_types``: :ref:`select-drilldown-calc-types`"
msgstr ""
"``drilldowns[${LABEL}].calc_types``: :ref:`select-drilldown-calc-types`"

msgid ""
"``drilldowns[${LABEL}].calc_target``: :ref:`select-drilldown-calc-target`"
msgstr ""
"``drilldowns[${LABEL}].calc_target``: :ref:`select-drilldown-calc-target`"

msgid "``drilldowns[${LABEL}].filter``: :ref:`select-drilldown-filter`"
msgstr "``drilldowns[${LABEL}].filter``: :ref:`select-drilldown-filter`"

msgid ""
"``drilldowns[${LABEL}].max_n_target_records``: :ref:`select-drilldown-max-n-"
"target-records`"
msgstr ""
"``drilldowns[${LABEL}].max_n_target_records``: :ref:`select-drilldown-max-n-"
"target-records`"

msgid ""
"See document for corresponding ``columns[${NAME}].XXX`` parameter to know "
"how to use it for the following parameters:"
msgstr ""
"See document for corresponding ``columns[${NAME}].XXX`` parameter to know "
"how to use it for the following parameters:"

msgid ""
"``drilldowns[${LABEL}].columns[${NAME}].flags=COLUMN_SCALAR``: :ref:`select-"
"columns-name-flags`"
msgstr ""
"``drilldowns[${LABEL}].columns[${NAME}].flags=COLUMN_SCALAR``: :ref:`select-"
"columns-name-flags`"

msgid ""
"``drilldowns[${LABEL}].columns[${NAME}].type=null``: :ref:`select-columns-"
"name-type`"
msgstr ""
"``drilldowns[${LABEL}].columns[${NAME}].type=null``: :ref:`select-columns-"
"name-type`"

msgid ""
"``drilldowns[${LABEL}].columns[${NAME}].value=null``: :ref:`select-columns-"
"name-value`"
msgstr ""
"``drilldowns[${LABEL}].columns[${NAME}].value=null``: :ref:`select-columns-"
"name-value`"

msgid ""
"``drilldowns[${LABEL}].columns[${NAME}].window.sort_keys=null``: :ref:"
"`select-columns-name-window-sort-keys`"
msgstr ""
"``drilldowns[${LABEL}].columns[${NAME}].window.sort_keys=null``: :ref:"
"`select-columns-name-window-sort-keys`"

msgid ""
"``drilldowns[${LABEL}].columns[${NAME}].window.group_keys=null``: :ref:"
"`select-columns-name-window-group-keys`"
msgstr ""
"``drilldowns[${LABEL}].columns[${NAME}].window.group_keys=null``: :ref:"
"`select-columns-name-window-group-keys`"

msgid "The following parameters are needed more description:"
msgstr "The following parameters are needed more description:"

msgid "Output format is different a bit. It's also needed more description."
msgstr "Output format is different a bit. It's also needed more description."

msgid ""
":ref:`select-drilldown` can specify multiple keys for multiple drilldowns. "
"But it can't specify multiple keys for one drilldown."
msgstr ""
":ref:`select-drilldown` can specify multiple keys for multiple drilldowns. "
"But it can't specify multiple keys for one drilldown."

msgid ""
"``drilldowns[${LABEL}].keys`` can't specify multiple keys for multiple "
"drilldowns. But it can specify multiple keys for one drilldown."
msgstr ""
"``drilldowns[${LABEL}].keys`` can't specify multiple keys for multiple "
"drilldowns. But it can specify multiple keys for one drilldown."

msgid "You can specify multiple keys separated by \"``,``\"."
msgstr "You can specify multiple keys separated by \"``,``\"."

msgid ""
"Here is an example to group by multiple keys, ``tag`` and ``n_likes`` column "
"values:"
msgstr ""
"Here is an example to group by multiple keys, ``tag`` and ``n_likes`` column "
"values:"

msgid ""
"``tag.n_likes`` is used as the label for the drilldown parameters group. You "
"can refer grouped keys by ``_value.${KEY_NAME}`` syntax in :ref:`select-"
"drilldowns-label-output-columns`. ``${KEY_NAME}`` is a column name to be "
"used by group key. ``tag`` and ``n_likes`` are ``${KEY_NAME}`` in this case."
msgstr ""
"``tag.n_likes`` is used as the label for the drilldown parameters group. You "
"can refer grouped keys by ``_value.${KEY_NAME}`` syntax in :ref:`select-"
"drilldowns-label-output-columns`. ``${KEY_NAME}`` is a column name to be "
"used by group key. ``tag`` and ``n_likes`` are ``${KEY_NAME}`` in this case."

msgid ""
"Note that you can't use ``_value.${KEY_NAME}`` syntax when you just specify "
"one key as ``drilldowns[${LABEL}].keys`` like ``--drilldowns[tag].keys "
"tag``. You should use ``_key`` for the case. It's the same rule in :ref:"
"`select-drilldown-output-columns`."
msgstr ""
"Note that you can't use ``_value.${KEY_NAME}`` syntax when you just specify "
"one key as ``drilldowns[${LABEL}].keys`` like ``--drilldowns[tag].keys "
"tag``. You should use ``_key`` for the case. It's the same rule in :ref:"
"`select-drilldown-output-columns`."

msgid ""
"It's almost same as :ref:`select-drilldown-output-columns`. The difference "
"between :ref:`select-drilldown-output-columns` and ``drilldowns[${LABEL}]."
"output_columns`` is how to refer group keys."
msgstr ""
"It's almost same as :ref:`select-drilldown-output-columns`. The difference "
"between :ref:`select-drilldown-output-columns` and ``drilldowns[${LABEL}]."
"output_columns`` is how to refer group keys."

msgid ""
":ref:`select-drilldown-output-columns` uses ``_key`` :doc:`/reference/"
"columns/pseudo` to refer group key. ``drilldowns[${LABEL}].output_columns`` "
"also uses ``_key`` :doc:`/reference/columns/pseudo` to refer group key when "
"you specify only one group key by :ref:`select-drilldowns-label-keys`."
msgstr ""
":ref:`select-drilldown-output-columns` uses ``_key`` :doc:`/reference/"
"columns/pseudo` to refer group key. ``drilldowns[${LABEL}].output_columns`` "
"also uses ``_key`` :doc:`/reference/columns/pseudo` to refer group key when "
"you specify only one group key by :ref:`select-drilldowns-label-keys`."

msgid ""
"Here is an example to refer single group key by ``_key`` :doc:`/reference/"
"columns/pseudo`:"
msgstr ""
"Here is an example to refer single group key by ``_key`` :doc:`/reference/"
"columns/pseudo`:"

msgid ""
"But you can't refer each group key by ``_key`` :doc:`/reference/columns/"
"pseudo` in ``drilldowns[${LABEL}].output_columns``. You need to use ``_value."
"${KEY_NAME}`` syntax. ``${KEY_NAME}`` is a column name that is used for "
"group key in :ref:`select-drilldowns-label-keys`."
msgstr ""
"But you can't refer each group key by ``_key`` :doc:`/reference/columns/"
"pseudo` in ``drilldowns[${LABEL}].output_columns``. You need to use ``_value."
"${KEY_NAME}`` syntax. ``${KEY_NAME}`` is a column name that is used for "
"group key in :ref:`select-drilldowns-label-keys`."

msgid ""
"Here is an example to refer each group key in multiple group keys by "
"``_value.${KEY_NAME}`` syntax:"
msgstr ""
"Here is an example to refer each group key in multiple group keys by "
"``_value.${KEY_NAME}`` syntax:"

msgid "Why ``_value.${KEY_NAME}`` syntax?"
msgstr "Why ``_value.${KEY_NAME}`` syntax?"

msgid "It's implementation specific information."
msgstr "It's implementation specific information."

msgid ""
"``_key`` is a vector value. The vector value is consists of all group keys. "
"You can see byte sequence of the vector value by referring ``_key`` in "
"``drilldowns[${LABEL}].output_columns``."
msgstr ""
"``_key`` is a vector value. The vector value is consists of all group keys. "
"You can see byte sequence of the vector value by referring ``_key`` in "
"``drilldowns[${LABEL}].output_columns``."

msgid ""
"There is one grouped record in ``_value`` to refer each grouped values when "
"you specify multiple group keys to :ref:`select-drilldowns-label-keys`. So "
"you can refer each group key by ``_value.${KEY_NAME}`` syntax."
msgstr ""
"There is one grouped record in ``_value`` to refer each grouped values when "
"you specify multiple group keys to :ref:`select-drilldowns-label-keys`. So "
"you can refer each group key by ``_value.${KEY_NAME}`` syntax."

msgid ""
"On the other hand, there is no grouped record in ``_value`` when you specify "
"only one group key to :ref:`select-drilldowns-label-keys`. So you can't "
"refer group key by ``_value.${KEY_NAME}`` syntax."
msgstr ""
"On the other hand, there is no grouped record in ``_value`` when you specify "
"only one group key to :ref:`select-drilldowns-label-keys`. So you can't "
"refer group key by ``_value.${KEY_NAME}`` syntax."

msgid "``drilldowns[${LABEL}].columns[${NAME}].stage``"
msgstr "``drilldowns[${LABEL}].columns[${NAME}].stage``"

msgid ""
"Dynamic column is created after ``drilldowns[${LABEL}].filter`` is evaluated."
msgstr ""
"Dynamic column is created after ``drilldowns[${LABEL}].filter`` is evaluated."

msgid ""
"Dynamic column is created before :ref:`select-drilldowns-label-output-"
"columns` is evaluated."
msgstr ""
"Dynamic column is created before :ref:`select-drilldowns-label-output-"
"columns` is evaluated."

msgid ""
"``filtered`` stage and ``output`` stage will be able to use from 10.0.3 or "
"later."
msgstr ""
"``filtered`` stage and ``output`` stage will be able to use from 10.0.3 or "
"later."

msgid ""
"Here is one drilldown process flow with dynamic column creation points. You "
"should choose stage as late as possible:"
msgstr ""
"Here is one drilldown process flow with dynamic column creation points. You "
"should choose stage as late as possible:"

msgid ""
"Evaluates :ref:`select-drilldowns-label-keys`, ``drilldowns[${LABEL}]."
"calc_types`` and ``drilldowns[${LABEL}].calc_target``."
msgstr ""
"Evaluates :ref:`select-drilldowns-label-keys`, ``drilldowns[${LABEL}]."
"calc_types`` and ``drilldowns[${LABEL}].calc_target``."

msgid ""
"Creates dynamic columns for ``initial`` stage. All drilldown result records "
"have these dynamic columns."
msgstr ""
"Creates dynamic columns for ``initial`` stage. All drilldown result records "
"have these dynamic columns."

msgid ""
"Evaluates ``drilldowns[${LABEL}].filter``. You can use dynamic columns "
"created in ``initial`` stage."
msgstr ""
"Evaluates ``drilldowns[${LABEL}].filter``. You can use dynamic columns "
"created in ``initial`` stage."

msgid ""
"Evaluates ``drilldowns[${LABEL}].sort_keys``, ``drilldowns[${LABEL}]."
"offset`` and ``drilldowns[${LABEL}].limit``. You can use dynamic columns "
"created in ``initial`` stage and ``filtered`` stage."
msgstr ""
"Evaluates ``drilldowns[${LABEL}].sort_keys``, ``drilldowns[${LABEL}]."
"offset`` and ``drilldowns[${LABEL}].limit``. You can use dynamic columns "
"created in ``initial`` stage and ``filtered`` stage."

msgid ""
"Creates dynamic columns for ``output`` stage. Only ``drilldowns[${LABEL}]."
"limit`` records have these dynamic columns."
msgstr ""
"Creates dynamic columns for ``output`` stage. Only ``drilldowns[${LABEL}]."
"limit`` records have these dynamic columns."

msgid ""
"Evaluates :ref:`select-drilldowns-label-output-columns`. You can use dynamic "
"columns created in ``initial`` stage, ``filtered`` stage, and ``output`` "
"stage."
msgstr ""
"Evaluates :ref:`select-drilldowns-label-output-columns`. You can use dynamic "
"columns created in ``initial`` stage, ``filtered`` stage, and ``output`` "
"stage."

msgid ""
"Here is a ``drilldowns[${LABEL}].columns[${NAME}].stage`` example. It "
"creates ``is_popular`` column at ``initial`` stage. You can use "
"``is_popular`` in all parameters such as ``drilldowns[${LABEL}].filter`` and "
"``drilldowns[${LABEL}].output_columns``:"
msgstr ""
"Here is a ``drilldowns[${LABEL}].columns[${NAME}].stage`` example. It "
"creates ``is_popular`` column at ``initial`` stage. You can use "
"``is_popular`` in all parameters such as ``drilldowns[${LABEL}].filter`` and "
"``drilldowns[${LABEL}].output_columns``:"

msgid "Output format for ``drilldowns[${LABEL}]`` style"
msgstr "Output format for ``drilldowns[${LABEL}]`` style"

msgid ""
"There is a difference in output format between :ref:`select-drilldown` and :"
"ref:`select-drilldowns-label-keys`. :ref:`select-drilldown` uses array to "
"output multiple drilldown results. :ref:`select-drilldowns-label-keys` uses "
"pairs of label and drilldown result."
msgstr ""
"There is a difference in output format between :ref:`select-drilldown` and :"
"ref:`select-drilldowns-label-keys`. :ref:`select-drilldown` uses array to "
"output multiple drilldown results. :ref:`select-drilldowns-label-keys` uses "
"pairs of label and drilldown result."

msgid ":ref:`select-drilldown` uses the following output format::"
msgstr ":ref:`select-drilldown` uses the following output format::"

msgid ":ref:`select-drilldowns-label-keys` uses the following output format::"
msgstr ":ref:`select-drilldowns-label-keys` uses the following output format::"

msgid "Slice related parameters"
msgstr "Slice related parameters"

msgid "This section describes slice related parameters."
msgstr "This section describes slice related parameters."

msgid "TODO"
msgstr "TODO"

msgid "Here are parameters for slice:"
msgstr "Here are parameters for slice:"

msgid "``--slices[${LABEL}].match_columns``"
msgstr "``--slices[${LABEL}].match_columns``"

msgid "``--slices[${LABEL}].query``"
msgstr "``--slices[${LABEL}].query``"

msgid "Required if ``--slices[${LABEL}].filter`` isn't specified."
msgstr "Required if ``--slices[${LABEL}].filter`` isn't specified."

msgid "``--slices[${LABEL}].filter``"
msgstr "``--slices[${LABEL}].filter``"

msgid "Required if ``--slices[${LABEL}].query`` isn't specified."
msgstr "Required if ``--slices[${LABEL}].query`` isn't specified."

msgid "``--slices[${LABEL}].query_expander``"
msgstr "``--slices[${LABEL}].query_expander``"

msgid "``--slices[${LABEL}].query_flags``"
msgstr "``--slices[${LABEL}].query_flags``"

msgid "``--slices[${LABEL}].sort_keys``"
msgstr "``--slices[${LABEL}].sort_keys``"

msgid "``--slices[${LABEL}].output_columns``"
msgstr "``--slices[${LABEL}].output_columns``"

msgid "``--slices[${LABEL}].offset``"
msgstr "``--slices[${LABEL}].offset``"

msgid "``--slices[${LABEL}].limit``"
msgstr "``--slices[${LABEL}].limit``"

msgid "``--slices[${LABEL}].table``"
msgstr "``--slices[${LABEL}].table``"

msgid "``slices[${LABEL}].match_columns``"
msgstr "``slices[${LABEL}].match_columns``"

msgid "``slices[${LABEL}].query``"
msgstr "``slices[${LABEL}].query``"

msgid "``slices[${LABEL}].filter``"
msgstr "``slices[${LABEL}].filter``"

msgid "``slices[${LABEL}].query_expander``"
msgstr "``slices[${LABEL}].query_expander``"

msgid "``slices[${LABEL}].query_flags``"
msgstr "``slices[${LABEL}].query_flags``"

msgid "``slices[${LABEL}].sort_keys``"
msgstr "``slices[${LABEL}].sort_keys``"

msgid "``slices[${LABEL}].output_columns``"
msgstr "``slices[${LABEL}].output_columns``"

msgid "``slices[${LABEL}].offset``"
msgstr "``slices[${LABEL}].offset``"

msgid "``slices[${LABEL}].limit``"
msgstr "``slices[${LABEL}].limit``"

msgid "``slices[${LABEL}].table``"
msgstr "``slices[${LABEL}].table``"

msgid "Cache related parameter"
msgstr "Cache related parameter"

msgid "``cache``"
msgstr "``cache``"

msgid "Specifies whether caching the result of this query or not."
msgstr "Specifies whether caching the result of this query or not."

msgid ""
"If the result of this query is cached, the next same query returns response "
"quickly by using the cache."
msgstr ""
"If the result of this query is cached, the next same query returns response "
"quickly by using the cache."

msgid "It doesn't control whether existing cached result is used or not."
msgstr "It doesn't control whether existing cached result is used or not."

msgid "Don't cache the output of this query."
msgstr "Don't cache the output of this query."

msgid "Cache the output of this query. It's the default value."
msgstr "Cache the output of this query. It's the default value."

msgid "Here is an example to disable caching the result of this query:"
msgstr "Here is an example to disable caching the result of this query:"

msgid "The default value is ``yes``."
msgstr "The default value is ``yes``."

msgid "Score related parameters"
msgstr "Score related parameters"

msgid "There is a score related parameter, ``adjuster``."
msgstr "There is a score related parameter, ``adjuster``."

msgid "``adjuster``"
msgstr "``adjuster``"

msgid ""
"Specifies one or more score adjust expressions. You need to use ``adjuster`` "
"with ``query`` or ``filter``. ``adjuster`` doesn't work with not searched "
"request."
msgstr ""
"Specifies one or more score adjust expressions. You need to use ``adjuster`` "
"with ``query`` or ``filter``. ``adjuster`` doesn't work with not searched "
"request."

msgid ""
"You can increase score of specific records by ``adjuster``. You can use "
"``adjuster`` to set high score for important records."
msgstr ""
"You can increase score of specific records by ``adjuster``. You can use "
"``adjuster`` to set high score for important records."

msgid ""
"For example, you can use ``adjuster`` to increase score of records that have "
"``groonga`` tag."
msgstr ""
"For example, you can use ``adjuster`` to increase score of records that have "
"``groonga`` tag."

msgid "Here is the syntax::"
msgstr "Here is the syntax::"

msgid "Here is the ``SCORE_ADJUST_EXPRESSION`` syntax::"
msgstr "Here is the ``SCORE_ADJUST_EXPRESSION`` syntax::"

msgid "Note the following:"
msgstr "Note the following:"

msgid "``COLUMN`` must be indexed."
msgstr "``COLUMN`` must be indexed."

msgid "``\"KEYWORD\"`` must be a string."
msgstr "``\"KEYWORD\"`` must be a string."

msgid "``FACTOR`` must be a positive integer."
msgstr "``FACTOR`` must be a positive integer."

msgid ""
"Here is a sample ``adjuster`` usage example that uses just one "
"``SCORE_ADJUST_EXPRESSION``:"
msgstr ""
"Here is a sample ``adjuster`` usage example that uses just one "
"``SCORE_ADJUST_EXPRESSION``:"

msgid ""
"The ``select`` command matches all records. Then it applies ``adjuster``. "
"The adjuster increases score of records that have ``\"groonga\"`` in "
"``Entries.content`` column by 5. There is only one record that has "
"``\"groonga\"`` in ``Entries.content`` column.  So the record that its key "
"is ``\"Groonga\"`` has score 6 (``= 1 + 5``)."
msgstr ""
"The ``select`` command matches all records. Then it applies ``adjuster``. "
"The adjuster increases score of records that have ``\"groonga\"`` in "
"``Entries.content`` column by 5. There is only one record that has "
"``\"groonga\"`` in ``Entries.content`` column.  So the record that its key "
"is ``\"Groonga\"`` has score 6 (``= 1 + 5``)."

msgid "You can omit ``FACTOR``. If you omit ``FACTOR``, it is treated as 1."
msgstr "You can omit ``FACTOR``. If you omit ``FACTOR``, it is treated as 1."

msgid "Here is a sample ``adjuster`` usage example that omits ``FACTOR``:"
msgstr "Here is a sample ``adjuster`` usage example that omits ``FACTOR``:"

msgid ""
"The ``adjuster`` in the ``select`` command doesn't have ``FACTOR``. So the "
"factor is treated as 1. There is only one record that has ``\"groonga\"`` in "
"``Entries.content`` column. So the record that its key is ``\"Groonga\"`` "
"has score 2 (``= 1 + 1``)."
msgstr ""
"The ``adjuster`` in the ``select`` command doesn't have ``FACTOR``. So the "
"factor is treated as 1. There is only one record that has ``\"groonga\"`` in "
"``Entries.content`` column. So the record that its key is ``\"Groonga\"`` "
"has score 2 (``= 1 + 1``)."

msgid ""
"Here is a sample ``adjuster`` usage example that uses multiple "
"``SCORE_ADJUST_EXPRESSION``:"
msgstr ""
"Here is a sample ``adjuster`` usage example that uses multiple "
"``SCORE_ADJUST_EXPRESSION``:"

msgid ""
"The ``adjuster`` in the ``select`` command has two "
"``SCORE_ADJUST_EXPRESSION`` s. The final increased score is sum of scores of "
"these ``SCORE_ADJUST_EXPRESSION`` s. All ``SCORE_ADJUST_EXPRESSION`` s in "
"the ``select`` command are applied to a record that its key is "
"``\"Groonga\"``. So the final increased score of the record is sum of scores "
"of all ``SCORE_ADJUST_EXPRESSION`` s."
msgstr ""
"The ``adjuster`` in the ``select`` command has two "
"``SCORE_ADJUST_EXPRESSION`` s. The final increased score is sum of scores of "
"these ``SCORE_ADJUST_EXPRESSION`` s. All ``SCORE_ADJUST_EXPRESSION`` s in "
"the ``select`` command are applied to a record that its key is "
"``\"Groonga\"``. So the final increased score of the record is sum of scores "
"of all ``SCORE_ADJUST_EXPRESSION`` s."

msgid ""
"The first ``SCORE_ADJUST_EXPRESSION`` is ``content @ \"groonga\" * 5``. It "
"increases score by 5."
msgstr ""
"The first ``SCORE_ADJUST_EXPRESSION`` is ``content @ \"groonga\" * 5``. It "
"increases score by 5."

msgid ""
"The second ``SCORE_ADJUST_EXPRESSION`` is ``content @ \"started\" * 3``. It "
"increases score by 3."
msgstr ""
"The second ``SCORE_ADJUST_EXPRESSION`` is ``content @ \"started\" * 3``. It "
"increases score by 3."

msgid "The final increased score is 9 (``= 1 + 5 + 3``)."
msgstr "The final increased score is 9 (``= 1 + 5 + 3``)."

msgid ""
"A ``SCORE_ADJUST_EXPRESSION`` has a factor for ``\"KEYWORD\"``. This means "
"that increased scores of all records that has ``\"KEYWORD\"`` are the same "
"value. You can change increase score for each record that has the same "
"``\"KEYWORD\"``. It is useful to tune search score. See :ref:`weight-vector-"
"column` for details."
msgstr ""
"A ``SCORE_ADJUST_EXPRESSION`` has a factor for ``\"KEYWORD\"``. This means "
"that increased scores of all records that has ``\"KEYWORD\"`` are the same "
"value. You can change increase score for each record that has the same "
"``\"KEYWORD\"``. It is useful to tune search score. See :ref:`weight-vector-"
"column` for details."

msgid "Return value"
msgstr "Return value"

msgid "The command returns a response with the following format::"
msgstr "The command returns a response with the following format::"

msgid "If the command fails, error details are in ``HEADER``."
msgstr "If the command fails, error details are in ``HEADER``."

msgid "See :doc:`/reference/command/output_format` for ``HEADER``."
msgstr "See :doc:`/reference/command/output_format` for ``HEADER``."

msgid ""
"There are zero or more ``DRILLDOWN_RESULT``. If no ``drilldown`` and "
"``drilldowns[${LABEL}].keys`` are specified, they are omitted like the "
"following::"
msgstr ""
"There are zero or more ``DRILLDOWN_RESULT``. If no ``drilldown`` and "
"``drilldowns[${LABEL}].keys`` are specified, they are omitted like the "
"following::"

msgid ""
"If ``drilldown`` has two or more keys like ``--drilldown \"_key, column1, "
"column2\"``, multiple ``DRILLDOWN_RESULT`` exist::"
msgstr ""
"If ``drilldown`` has two or more keys like ``--drilldown \"_key, column1, "
"column2\"``, multiple ``DRILLDOWN_RESULT`` exist::"

msgid ""
"If ``drilldowns[${LABEL}].keys`` is used, only one ``DRILLDOWN_RESULT`` "
"exist::"
msgstr ""
"If ``drilldowns[${LABEL}].keys`` is used, only one ``DRILLDOWN_RESULT`` "
"exist::"

msgid ""
"``DRILLDOWN_RESULT`` format is different between ``drilldown`` and "
"``drilldowns[${LABEL}].keys``. It's described later."
msgstr ""
"``DRILLDOWN_RESULT`` format is different between ``drilldown`` and "
"``drilldowns[${LABEL}].keys``. It's described later."

msgid "``SEARCH_RESULT`` is the following format::"
msgstr "``SEARCH_RESULT`` is the following format::"

msgid "See :ref:`select-simple-usage` for concrete example of the format."
msgstr "See :ref:`select-simple-usage` for concrete example of the format."

msgid ""
"``N_HITS`` is the number of matched records before :ref:`select-limit` is "
"applied."
msgstr ""
"``N_HITS`` is the number of matched records before :ref:`select-limit` is "
"applied."

msgid ""
"``COLUMNS`` describes about output columns specified by :ref:`select-output-"
"columns`. It uses the following format::"
msgstr ""
"``COLUMNS`` describes about output columns specified by :ref:`select-output-"
"columns`. It uses the following format::"

msgid ""
"``COLUMNS`` includes one or more output column information. Each output "
"column information includes the followings:"
msgstr ""
"``COLUMNS`` includes one or more output column information. Each output "
"column information includes the followings:"

msgid "Column name as string"
msgstr "Column name as string"

msgid "Column type as string or ``null``"
msgstr "Column type as string or ``null``"

msgid ""
"Column name is extracted from value specified as :ref:`select-output-"
"columns`."
msgstr ""
"Column name is extracted from value specified as :ref:`select-output-"
"columns`."

msgid ""
"Column type is Groonga's type name or ``null``. It doesn't describe whether "
"the column value is vector or scalar. You need to determine it by whether "
"real column value is array or not."
msgstr ""
"Column type is Groonga's type name or ``null``. It doesn't describe whether "
"the column value is vector or scalar. You need to determine it by whether "
"real column value is array or not."

msgid "See :doc:`/reference/types` for type details."
msgstr "See :doc:`/reference/types` for type details."

msgid ""
"``null`` is used when column value type isn't determined. For example, "
"function call in :ref:`select-output-columns` such as ``--output_columns "
"\"snippet_html(content)\"`` uses ``null``."
msgstr ""
"``null`` is used when column value type isn't determined. For example, "
"function call in :ref:`select-output-columns` such as ``--output_columns "
"\"snippet_html(content)\"`` uses ``null``."

msgid "Here is an example of ``COLUMNS``::"
msgstr "Here is an example of ``COLUMNS``::"

msgid ""
"``RECORDS`` includes column values for each matched record. Included records "
"are selected by :ref:`select-offset` and :ref:`select-limit`. It uses the "
"following format::"
msgstr ""
"``RECORDS`` includes column values for each matched record. Included records "
"are selected by :ref:`select-offset` and :ref:`select-limit`. It uses the "
"following format::"

msgid "Here is an example ``RECORDS``::"
msgstr "Here is an example ``RECORDS``::"

msgid ""
"``DRILLDOWN_RESULT`` format is different between ``drilldown`` and "
"``drilldowns[${LABEL}].keys``."
msgstr ""
"``DRILLDOWN_RESULT`` format is different between ``drilldown`` and "
"``drilldowns[${LABEL}].keys``."

msgid "``drilldown`` uses the same format as ``SEARCH_RESULT``::"
msgstr "``drilldown`` uses the same format as ``SEARCH_RESULT``::"

msgid ""
"And ``drilldown`` generates one or more ``DRILLDOWN_RESULT`` when :ref:"
"`select-drilldown` has one ore more keys."
msgstr ""
"And ``drilldown`` generates one or more ``DRILLDOWN_RESULT`` when :ref:"
"`select-drilldown` has one ore more keys."

msgid ""
"``drilldowns[${LABEL}].keys`` uses the following format. Multiple "
"``drilldowns[${LABEL}].keys`` are mapped to one object (key-value pairs)::"
msgstr ""
"``drilldowns[${LABEL}].keys`` uses the following format. Multiple "
"``drilldowns[${LABEL}].keys`` are mapped to one object (key-value pairs)::"

msgid "Each ``drilldowns[${LABEL}].keys`` corresponds to the following::"
msgstr "Each ``drilldowns[${LABEL}].keys`` corresponds to the following::"

msgid "The following value part is the same format as ``SEARCH_RESULT``::"
msgstr "The following value part is the same format as ``SEARCH_RESULT``::"

msgid ""
"See also :ref:`select-drilldowns-label-output-format` for "
"``drilldowns[${LABEL}]`` style drilldown output format."
msgstr ""
"See also :ref:`select-drilldowns-label-output-format` for "
"``drilldowns[${LABEL}]`` style drilldown output format."

msgid "See also"
msgstr "See also"

msgid ":doc:`/reference/grn_expr/query_syntax`"
msgstr ":doc:`/reference/grn_expr/query_syntax`"

msgid ":doc:`/reference/grn_expr/script_syntax`"
msgstr ":doc:`/reference/grn_expr/script_syntax`"
