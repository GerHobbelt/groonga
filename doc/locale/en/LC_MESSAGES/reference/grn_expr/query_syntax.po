# -*- po -*-
# English translations for Groonga package.
# Copyright (C) 2009-2022 Groonga Project
# This file is distributed under the same license as the Groonga package.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Groonga 12.0.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-02-28 11:57+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Query syntax"
msgstr "Query syntax"

msgid ""
"Query syntax is a syntax to specify search condition for common Web search "
"form. It is similar to the syntax of Google's search form. For example, "
"``word1 word2`` means that groonga searches records that contain both "
"``word1`` and ``word2``. ``word1 OR word2`` means that groonga searches "
"records that contain either ``word1`` or ``word2``."
msgstr ""
"Query syntax is a syntax to specify search condition for common Web search "
"form. It is similar to the syntax of Google's search form. For example, "
"``word1 word2`` means that groonga searches records that contain both "
"``word1`` and ``word2``. ``word1 OR word2`` means that groonga searches "
"records that contain either ``word1`` or ``word2``."

msgid ""
"Query syntax consists of ``conditional expression``, ``combind expression`` "
"and ``assignment expression``. Nomrally ``assignment expression`` can be "
"ignored. Because ``assignment expression`` is disabled in ``--query`` option "
"of :doc:`/reference/commands/select`. You can use it if you use groonga as "
"library and customize query syntax parser options."
msgstr ""
"Query syntax consists of ``conditional expression``, ``combind expression`` "
"and ``assignment expression``. Nomrally ``assignment expression`` can be "
"ignored. Because ``assignment expression`` is disabled in ``--query`` option "
"of :doc:`/reference/commands/select`. You can use it if you use groonga as "
"library and customize query syntax parser options."

msgid ""
"``Conditional expression`` specifies an condition. ``Combinded expression`` "
"consists of one or more ``conditional expression``, ``combined expression`` "
"or ``assignment expression``. ``Assignment expression`` can assigns a column "
"to a value."
msgstr ""
"``Conditional expression`` specifies an condition. ``Combinded expression`` "
"consists of one or more ``conditional expression``, ``combined expression`` "
"or ``assignment expression``. ``Assignment expression`` can assigns a column "
"to a value."

msgid "Sample data"
msgstr "Sample data"

msgid "Here are a schema definition and sample data to show usage."
msgstr "Here are a schema definition and sample data to show usage."

msgid "Execution example::"
msgstr "Execution example::"

msgid ""
"There is a table, ``Entries``, for blog entries. An entry has title, content "
"and the number of likes for the entry. Title is key of ``Entries``. Content "
"is value of ``Entries.content`` column. The number of likes is value of "
"``Entries.n_likes`` column."
msgstr ""
"There is a table, ``Entries``, for blog entries. An entry has title, content "
"and the number of likes for the entry. Title is key of ``Entries``. Content "
"is value of ``Entries.content`` column. The number of likes is value of "
"``Entries.n_likes`` column."

msgid ""
"``Entries._key`` column and ``Entries.content`` column are indexed using "
"``TokenBigram`` tokenizer. So both ``Entries._key`` and ``Entries.content`` "
"are fulltext search ready."
msgstr ""
"``Entries._key`` column and ``Entries.content`` column are indexed using "
"``TokenBigram`` tokenizer. So both ``Entries._key`` and ``Entries.content`` "
"are fulltext search ready."

msgid "OK. The schema and data for examples are ready."
msgstr "OK. The schema and data for examples are ready."

msgid "Escape"
msgstr "Escape"

msgid ""
"There are special characters in query syntax. To use a special character as "
"itself, it should be escaped by prepending ``\\``. For example, ``\"`` is a "
"special character. It is escaped as ``\\\"``."
msgstr ""
"There are special characters in query syntax. To use a special character as "
"itself, it should be escaped by prepending ``\\``. For example, ``\"`` is a "
"special character. It is escaped as ``\\\"``."

msgid "Here is a special character list:"
msgstr "Here is a special character list:"

msgid ""
"``[space]`` (escaped as ``[backslash][space]``) (You should substitute "
"``[space]`` with a white space character that is 0x20 in ASCII and "
"``[backslash]`` with ``\\\\``.)"
msgstr ""
"``[space]`` (escaped as ``[backslash][space]``) (You should substitute "
"``[space]`` with a white space character that is 0x20 in ASCII and "
"``[backslash]`` with ``\\\\``.)"

msgid "``\"`` (escaped as ``\\\"``)"
msgstr "``\"`` (escaped as ``\\\"``)"

msgid "``(`` (escaped as ``\\(``)"
msgstr "``(`` (escaped as ``\\(``)"

msgid "``)`` (escaped as ``\\)``)"
msgstr "``)`` (escaped as ``\\)``)"

msgid "``\\`` (escaped as ``\\\\``)"
msgstr "``\\`` (escaped as ``\\\\``)"

msgid ""
"You can use quote instead of escape special characters except ``\\`` "
"(backslash). You need to use backslash for escaping backslash like ``\\\\`` "
"in quote."
msgstr ""
"You can use quote instead of escape special characters except ``\\`` "
"(backslash). You need to use backslash for escaping backslash like ``\\\\`` "
"in quote."

msgid ""
"Quote syntax is ``\"...\"``. You need escape ``\"`` as ``\\\"`` in ``\"..."
"\"`` quote syntax. For example, ``You say \"Hello Alice!\"`` can be quoted "
"``\"You say \\\"Hello Alice!\\\"\"``."
msgstr ""
"Quote syntax is ``\"...\"``. You need escape ``\"`` as ``\\\"`` in ``\"..."
"\"`` quote syntax. For example, ``You say \"Hello Alice!\"`` can be quoted "
"``\"You say \\\"Hello Alice!\\\"\"``."

msgid "In addition ``'...'`` isn't  available in query syntax."
msgstr "In addition ``'...'`` isn't  available in query syntax."

msgid ""
"There is an important point which you have to care. The ``\\`` (backslash) "
"character is interpreted by command line shell. So if you want to search "
"``(`` itself for example, you need to escape twice (``\\\\(``) in command "
"line shell.  The command line shell interprets ``\\\\(`` as ``\\(``, then "
"pass such a literal to Groonga. Groonga regards ``\\(`` as ``(``, then "
"search ``(`` itself from database. If you can't do intended search by "
"Groonga, confirm whether special character is escaped properly."
msgstr ""
"There is an important point which you have to care. The ``\\`` (backslash) "
"character is interpreted by command line shell. So if you want to search "
"``(`` itself for example, you need to escape twice (``\\\\(``) in command "
"line shell.  The command line shell interprets ``\\\\(`` as ``\\(``, then "
"pass such a literal to Groonga. Groonga regards ``\\(`` as ``(``, then "
"search ``(`` itself from database. If you can't do intended search by "
"Groonga, confirm whether special character is escaped properly."

msgid "Conditional expression"
msgstr "Conditional expression"

msgid "Here is available conditional expression list."
msgstr "Here is available conditional expression list."

msgid "Full text search condition"
msgstr "Full text search condition"

msgid "Its syntax is ``keyword``."
msgstr "Its syntax is ``keyword``."

msgid ""
"``Full text search condition`` specifies a full text search condition "
"against the default match columns. Match columns are full text search target "
"columns."
msgstr ""
"``Full text search condition`` specifies a full text search condition "
"against the default match columns. Match columns are full text search target "
"columns."

msgid ""
"You should specify the default match columns for full text search. They can "
"be specified by ``--match_columns`` option of :doc:`/reference/commands/"
"select`. If you don't specify the default match columns, this conditional "
"expression fails."
msgstr ""
"You should specify the default match columns for full text search. They can "
"be specified by ``--match_columns`` option of :doc:`/reference/commands/"
"select`. If you don't specify the default match columns, this conditional "
"expression fails."

msgid ""
"This conditional expression does full text search with ``keyword``. "
"``keyword`` should not contain any spaces. If ``keyword`` contains a space "
"such as ``search keyword``, it means two full text search conditions; "
"``search`` and ``keyword``. If you want to specifies a keyword that contains "
"one or more spaces, you can use ``phrase search condition`` that is "
"described below."
msgstr ""
"This conditional expression does full text search with ``keyword``. "
"``keyword`` should not contain any spaces. If ``keyword`` contains a space "
"such as ``search keyword``, it means two full text search conditions; "
"``search`` and ``keyword``. If you want to specifies a keyword that contains "
"one or more spaces, you can use ``phrase search condition`` that is "
"described below."

msgid "Here is a simple example:"
msgstr "Here is a simple example:"

msgid ""
"The expression matches records that contain a word ``fast`` in ``content`` "
"column value."
msgstr ""
"The expression matches records that contain a word ``fast`` in ``content`` "
"column value."

msgid "``content`` column is the default match column."
msgstr "``content`` column is the default match column."

msgid "Phrase search condition"
msgstr "Phrase search condition"

msgid "Its syntax is ``\"search keyword\"``."
msgstr "Its syntax is ``\"search keyword\"``."

msgid ""
"``Phrase search condition`` specifies a phrase search condition against the "
"default match columns."
msgstr ""
"``Phrase search condition`` specifies a phrase search condition against the "
"default match columns."

msgid ""
"This conditional expression does phrase search with ``search keyword``. "
"Phrase search searches records that contain ``search`` and ``keyword`` and "
"those terms are appeared in the same order and adjacent. Thus, ``Put a "
"search keyword in the form`` is matched but ``Search by the keyword`` and "
"``There is a keyword. Search by it!`` aren't matched."
msgstr ""
"This conditional expression does phrase search with ``search keyword``. "
"Phrase search searches records that contain ``search`` and ``keyword`` and "
"those terms are appeared in the same order and adjacent. Thus, ``Put a "
"search keyword in the form`` is matched but ``Search by the keyword`` and "
"``There is a keyword. Search by it!`` aren't matched."

msgid ""
"The expression matches records that contain a phrase ``I started`` in "
"``content`` column value. ``I also started`` isn't matched because ``I`` and "
"``started`` aren't adjacent."
msgstr ""
"The expression matches records that contain a phrase ``I started`` in "
"``content`` column value. ``I also started`` isn't matched because ``I`` and "
"``started`` aren't adjacent."

msgid "Full text search condition (with explicit match column)"
msgstr "Full text search condition (with explicit match column)"

msgid "Its syntax is ``column:@keyword``."
msgstr "Its syntax is ``column:@keyword``."

msgid ""
"It's similar to ``full text search condition`` but it doesn't require the "
"default match columns. You need to specify match column for the full text "
"search condition by ``column:`` instead of ``--match_columns`` option of :"
"doc:`/reference/commands/select`."
msgstr ""
"It's similar to ``full text search condition`` but it doesn't require the "
"default match columns. You need to specify match column for the full text "
"search condition by ``column:`` instead of ``--match_columns`` option of :"
"doc:`/reference/commands/select`."

msgid ""
"This condtional expression is useful when you want to use two or more full "
"text search against different columns. The default match columns specified "
"by ``--match_columns`` option can't be specified multiple times. You need to "
"specify the second match column by this conditional expression."
msgstr ""
"This condtional expression is useful when you want to use two or more full "
"text search against different columns. The default match columns specified "
"by ``--match_columns`` option can't be specified multiple times. You need to "
"specify the second match column by this conditional expression."

msgid ""
"The different between ``full text search condition`` and ``full text search "
"condition (with explicit match column)`` is whether advanced match columns "
"are supported or not. ``Full text search condition`` supports advanced match "
"columns but ``full text search condition (with explicit match column)`` "
"isn't supported. Advanced match columns has the following features:"
msgstr ""
"The different between ``full text search condition`` and ``full text search "
"condition (with explicit match column)`` is whether advanced match columns "
"are supported or not. ``Full text search condition`` supports advanced match "
"columns but ``full text search condition (with explicit match column)`` "
"isn't supported. Advanced match columns has the following features:"

msgid "Weight is supported."
msgstr "Weight is supported."

msgid "Using multiple columns are supported."
msgstr "Using multiple columns are supported."

msgid "Using index column as a match column is supported."
msgstr "Using index column as a match column is supported."

msgid ""
"See description of ``--match_columns`` option of :doc:`/reference/commands/"
"select` about them."
msgstr ""
"See description of ``--match_columns`` option of :doc:`/reference/commands/"
"select` about them."

msgid "Phrase search condition (with explicit match column)"
msgstr "Phrase search condition (with explicit match column)"

msgid "Its syntax is ``column:@\"search keyword\"``."
msgstr "Its syntax is ``column:@\"search keyword\"``."

msgid ""
"It's similar to ``phrase search condition`` but it doesn't require the "
"default match columns. You need to specify match column for the phrase "
"search condition by ``column:`` instead of ``--match_columns`` option of :"
"doc:`/reference/commands/select`."
msgstr ""
"It's similar to ``phrase search condition`` but it doesn't require the "
"default match columns. You need to specify match column for the phrase "
"search condition by ``column:`` instead of ``--match_columns`` option of :"
"doc:`/reference/commands/select`."

msgid ""
"The different between ``phrase search condition`` and ``phrase search "
"condition (with explicit match column)`` is similar to between ``full text "
"search condition`` and ``full text search condition (with explicit match "
"column)``. ``Phrase search condition`` supports advanced match columns but "
"``phrase search condition (with explicit match column)`` isn't supported. "
"See description of ``full text search condition (with explicit match "
"column)`` about advanced match columns."
msgstr ""
"The different between ``phrase search condition`` and ``phrase search "
"condition (with explicit match column)`` is similar to between ``full text "
"search condition`` and ``full text search condition (with explicit match "
"column)``. ``Phrase search condition`` supports advanced match columns but "
"``phrase search condition (with explicit match column)`` isn't supported. "
"See description of ``full text search condition (with explicit match "
"column)`` about advanced match columns."

msgid "Prefix search condition"
msgstr "Prefix search condition"

msgid "Its syntax is ``column:^value`` or ``value*``."
msgstr "Its syntax is ``column:^value`` or ``value*``."

msgid ""
"This conditional expression does prefix search with ``value``. Prefix search "
"searches records that contain a word that starts with ``value``."
msgstr ""
"This conditional expression does prefix search with ``value``. Prefix search "
"searches records that contain a word that starts with ``value``."

msgid ""
"You can use fast prefix search against a column. The column must be indexed "
"and index table must be patricia trie table (``TABLE_PAT_KEY``) or double "
"array trie table (``TABLE_DAT_KEY``). You can also use fast prefix search "
"against ``_key`` pseudo column of patricia trie table or double array trie "
"table. You don't need to index ``_key``."
msgstr ""
"You can use fast prefix search against a column. The column must be indexed "
"and index table must be patricia trie table (``TABLE_PAT_KEY``) or double "
"array trie table (``TABLE_DAT_KEY``). You can also use fast prefix search "
"against ``_key`` pseudo column of patricia trie table or double array trie "
"table. You don't need to index ``_key``."

msgid ""
"Prefix search can be used with other table types but it causes all records "
"scan. It's not problem for small records but it spends more time for large "
"records."
msgstr ""
"Prefix search can be used with other table types but it causes all records "
"scan. It's not problem for small records but it spends more time for large "
"records."

msgid ""
"It doesn't require the default match columns such as ``full text search "
"condition`` and ``phrase search condition``."
msgstr ""
"It doesn't require the default match columns such as ``full text search "
"condition`` and ``phrase search condition``."

msgid ""
"The expression matches records that contain a word that starts with ``Goo`` "
"in ``_key`` pseudo column value. ``Good-bye Senna`` and ``Good-bye Tritonn`` "
"are matched with the expression."
msgstr ""
"The expression matches records that contain a word that starts with ``Goo`` "
"in ``_key`` pseudo column value. ``Good-bye Senna`` and ``Good-bye Tritonn`` "
"are matched with the expression."

msgid "Suffix search condition"
msgstr "Suffix search condition"

msgid "Its syntax is ``column:$value``."
msgstr "Its syntax is ``column:$value``."

msgid ""
"This conditional expression does suffix search with ``value``. Suffix search "
"searches records that contain a word that ends with ``value``."
msgstr ""
"This conditional expression does suffix search with ``value``. Suffix search "
"searches records that contain a word that ends with ``value``."

msgid ""
"You can use fast suffix search against a column. The column must be indexed "
"and index table must be patricia trie table (``TABLE_PAT_KEY``) with "
"``KEY_WITH_SIS`` flag. You can also use fast suffix search against ``_key`` "
"pseudo column of patricia trie table (``TABLE_PAT_KEY``) with "
"``KEY_WITH_SIS`` flag. You don't need to index ``_key``. We recommended that "
"you use index column based fast suffix search instead of ``_key`` based fast "
"suffix search. ``_key`` based fast suffix search returns automatically "
"registered substrings. (TODO: write document about suffix search and link to "
"it from here.)"
msgstr ""
"You can use fast suffix search against a column. The column must be indexed "
"and index table must be patricia trie table (``TABLE_PAT_KEY``) with "
"``KEY_WITH_SIS`` flag. You can also use fast suffix search against ``_key`` "
"pseudo column of patricia trie table (``TABLE_PAT_KEY``) with "
"``KEY_WITH_SIS`` flag. You don't need to index ``_key``. We recommended that "
"you use index column based fast suffix search instead of ``_key`` based fast "
"suffix search. ``_key`` based fast suffix search returns automatically "
"registered substrings. (TODO: write document about suffix search and link to "
"it from here.)"

msgid ""
"Fast suffix search can be used only for non-ASCII characters such as "
"hiragana in Japanese. You cannot use fast suffix search for ASCII character."
msgstr ""
"Fast suffix search can be used only for non-ASCII characters such as "
"hiragana in Japanese. You cannot use fast suffix search for ASCII character."

msgid ""
"Suffix search can be used with other table types or patricia trie table "
"without ``KEY_WITH_SIS`` flag but it causes all records scan. It's not "
"problem for small records but it spends more time for large records."
msgstr ""
"Suffix search can be used with other table types or patricia trie table "
"without ``KEY_WITH_SIS`` flag but it causes all records scan. It's not "
"problem for small records but it spends more time for large records."

msgid ""
"Here is a simple example. It uses fast suffix search for hiragana in "
"Japanese that is one of non-ASCII characters."
msgstr ""
"Here is a simple example. It uses fast suffix search for hiragana in "
"Japanese that is one of non-ASCII characters."

msgid ""
"The expression matches records that have value that ends with ``んが`` in "
"``content`` column value. ``ぐるんが`` and ``むるんが`` are matched with the "
"expression."
msgstr ""
"The expression matches records that have value that ends with ``んが`` in "
"``content`` column value. ``ぐるんが`` and ``むるんが`` are matched with the "
"expression."

msgid "Near search condition"
msgstr "Near search condition"

msgid "Its syntax is ``*N\"token1 token2 ...\"``."
msgstr "Its syntax is ``*N\"token1 token2 ...\"``."

msgid ""
"This conditional expression does near search with ``token1``, ``token2`` and "
"``...``. Near search searches records that contain the all specified tokens "
"and there are at most 10 tokens between them. For example, ``*N\"a b c\"`` "
"matches ``a 1 2 3 4 5 b 6 7 8 9 10 c`` but doesn't match ``a 1 2 3 4 5 b 6 7 "
"8 9 10 11 c``:"
msgstr ""
"This conditional expression does near search with ``token1``, ``token2`` and "
"``...``. Near search searches records that contain the all specified tokens "
"and there are at most 10 tokens between them. For example, ``*N\"a b c\"`` "
"matches ``a 1 2 3 4 5 b 6 7 8 9 10 c`` but doesn't match ``a 1 2 3 4 5 b 6 7 "
"8 9 10 11 c``:"

msgid ""
"Note that you must specify ``WITH_POSITION`` to an index column that is used "
"for near search. If you don't specify ``WITH_POSITION``, near search can't "
"count distance correctly."
msgstr ""
"Note that you must specify ``WITH_POSITION`` to an index column that is used "
"for near search. If you don't specify ``WITH_POSITION``, near search can't "
"count distance correctly."

msgid ""
"You can customize the max interval of the given tokens (``10`` by default) "
"by specifying a number after ``*N``. Here is an example that uses ``2`` as "
"the max interval of the given tokens::"
msgstr ""
"You can customize the max interval of the given tokens (``10`` by default) "
"by specifying a number after ``*N``. Here is an example that uses ``2`` as "
"the max interval of the given tokens::"

msgid "Here is an example to customize the max interval of the given tokens:"
msgstr "Here is an example to customize the max interval of the given tokens:"

msgid ""
"To be precious, you can specify a word instead of a token for near search. "
"Because the passed text is tokenized before near search. A word consists of "
"one or more tokens. If you specify a word, it may not work as you expected. "
"For example, ``*N\"a1b2c3d\"`` matches both ``a 1 b 2 c 3 d`` and ``a b c d "
"1 2 3``:"
msgstr ""
"To be precious, you can specify a word instead of a token for near search. "
"Because the passed text is tokenized before near search. A word consists of "
"one or more tokens. If you specify a word, it may not work as you expected. "
"For example, ``*N\"a1b2c3d\"`` matches both ``a 1 b 2 c 3 d`` and ``a b c d "
"1 2 3``:"

msgid "Because ``*N\"a1b2c3d\"`` equals to ``*N\"a 1 b 2 c 3 d\"``."
msgstr "Because ``*N\"a1b2c3d\"`` equals to ``*N\"a 1 b 2 c 3 d\"``."

msgid ""
"If you want to specify words, :ref:`query-syntax-near-phrase-search-"
"condition` is what you want."
msgstr ""
"If you want to specify words, :ref:`query-syntax-near-phrase-search-"
"condition` is what you want."

msgid "Near phrase search condition"
msgstr "Near phrase search condition"

msgid "Its syntax is ``*NP\"phrase1 phrase2 ...\"``."
msgstr "Its syntax is ``*NP\"phrase1 phrase2 ...\"``."

msgid ""
"This conditional expression does near phrase search with ``phrase1``, "
"``phrase2`` and ``...``. Near phrase search searches records that contain "
"the all specified phrases and there are at most 10 tokens between them. For "
"example, ``*NP\"a1b2c3d\"`` matches ``a 1 b 2 c 3 d`` but doesn't match ``a "
"b c d 1 2 3``. Because the latter uses different order:"
msgstr ""
"This conditional expression does near phrase search with ``phrase1``, "
"``phrase2`` and ``...``. Near phrase search searches records that contain "
"the all specified phrases and there are at most 10 tokens between them. For "
"example, ``*NP\"a1b2c3d\"`` matches ``a 1 b 2 c 3 d`` but doesn't match ``a "
"b c d 1 2 3``. Because the latter uses different order:"

msgid ""
"You can use a phrase that includes spaces by quoting such as ``*NP\"\\"
"\"groonga mroonga\\\" pgroonga\"``. Note that you need to escape ``\\\"`` in "
"command syntax such as ``*NP\"\\\\\\\"groonga mroonga\\\\\\\" pgroonga\"``. "
"This query matches ``groonga mroonga pgroonga`` but doesn't match ``groonga "
"pgroonga mroonga`` because ``mroonga`` isn't right after ``groonga``:"
msgstr ""
"You can use a phrase that includes spaces by quoting such as ``*NP\"\\"
"\"groonga mroonga\\\" pgroonga\"``. Note that you need to escape ``\\\"`` in "
"command syntax such as ``*NP\"\\\\\\\"groonga mroonga\\\\\\\" pgroonga\"``. "
"This query matches ``groonga mroonga pgroonga`` but doesn't match ``groonga "
"pgroonga mroonga`` because ``mroonga`` isn't right after ``groonga``:"

msgid ""
"You can customize the max interval of the given phrases (``10`` by default) "
"by specifying a number after ``*NP``. Here is an example that uses ``2`` as "
"the max interval of the given phrases::"
msgstr ""
"You can customize the max interval of the given phrases (``10`` by default) "
"by specifying a number after ``*NP``. Here is an example that uses ``2`` as "
"the max interval of the given phrases::"

msgid "Here is an example to customize the max interval of the given phrases:"
msgstr "Here is an example to customize the max interval of the given phrases:"

msgid ""
"You can use additional interval only for the last phrase. It means that you "
"can accept more distance only between the second to last phrase and the last "
"phrase. This is useful for implementing a near phrase search in the same "
"sentence. If you specify ``.`` (sentence end phrase) as the last phrase and "
"specify ``-1`` as the additional last interval, the other specified phrases "
"must be appeared before ``.``. You must append ``$`` to the last phrase like "
"``.$``."
msgstr ""
"You can use additional interval only for the last phrase. It means that you "
"can accept more distance only between the second to last phrase and the last "
"phrase. This is useful for implementing a near phrase search in the same "
"sentence. If you specify ``.`` (sentence end phrase) as the last phrase and "
"specify ``-1`` as the additional last interval, the other specified phrases "
"must be appeared before ``.``. You must append ``$`` to the last phrase like "
"``.$``."

msgid ""
"Here is an example that uses ``-1`` as the additional last interval of the "
"given phrases::"
msgstr ""
"Here is an example that uses ``-1`` as the additional last interval of the "
"given phrases::"

msgid ""
"Here is an example to customize the additional last interval of the given "
"phrases:"
msgstr ""
"Here is an example to customize the additional last interval of the given "
"phrases:"

msgid ""
"You can also use positive number for the additional last interval. If you "
"specify positive number as the additional last interval, all of the "
"following conditions must be satisfied:"
msgstr ""
"You can also use positive number for the additional last interval. If you "
"specify positive number as the additional last interval, all of the "
"following conditions must be satisfied:"

msgid ""
"The interval between the first phrase and the second to last phrase is less "
"than or equals to ``the max interval``."
msgstr ""
"The interval between the first phrase and the second to last phrase is less "
"than or equals to ``the max interval``."

msgid ""
"The interval between the first phrase and the last phrase is less than or "
"equals to ``the max interval`` + ``the additional last interval``."
msgstr ""
"The interval between the first phrase and the last phrase is less than or "
"equals to ``the max interval`` + ``the additional last interval``."

msgid ""
"If you specify negative number as the additional last interval, the second "
"condition isn't required. Appearing the last phrase is just needed."
msgstr ""
"If you specify negative number as the additional last interval, the second "
"condition isn't required. Appearing the last phrase is just needed."

msgid ""
"Here is an example to use positive number as the additional last interval:"
msgstr ""
"Here is an example to use positive number as the additional last interval:"

msgid "Near phrase product search condition"
msgstr "Near phrase product search condition"

msgid ""
"Its syntax is ``*NPP\"(phrase1_1 phrase1_2 ...) (phrase2_1 phrase2_2 ...) ..."
"\"``."
msgstr ""
"Its syntax is ``*NPP\"(phrase1_1 phrase1_2 ...) (phrase2_1 phrase2_2 ...) ..."
"\"``."

msgid ""
"This conditional expression does multiple :ref:`query-syntax-near-phrase-"
"search-condition`. Phrases for each :ref:`query-syntax-near-phrase-search-"
"condition` are computed as product of ``{phrase1_1, phrase1_2, ...}``, "
"``{phrase2_1, phrase2_2, ...}`` and ``...``. For example, ``*NPP\"(a b c) (d "
"e)\"`` uses the following phrases for near phrase searches:"
msgstr ""
"This conditional expression does multiple :ref:`query-syntax-near-phrase-"
"search-condition`. Phrases for each :ref:`query-syntax-near-phrase-search-"
"condition` are computed as product of ``{phrase1_1, phrase1_2, ...}``, "
"``{phrase2_1, phrase2_2, ...}`` and ``...``. For example, ``*NPP\"(a b c) (d "
"e)\"`` uses the following phrases for near phrase searches:"

msgid "``a d``"
msgstr "``a d``"

msgid "``a e``"
msgstr "``a e``"

msgid "``b d``"
msgstr "``b d``"

msgid "``b e``"
msgstr "``b e``"

msgid "``c d``"
msgstr "``c d``"

msgid "``c e``"
msgstr "``c e``"

msgid ""
"You can use the all features of :ref:`query-syntax-near-phrase-search-"
"condition` such as the max interval, ``$`` for the last phrase and the "
"additional last interval."
msgstr ""
"You can use the all features of :ref:`query-syntax-near-phrase-search-"
"condition` such as the max interval, ``$`` for the last phrase and the "
"additional last interval."

msgid ""
"This is more effective than multiple :ref:`query-syntax-near-phrase-search-"
"condition` ."
msgstr ""
"This is more effective than multiple :ref:`query-syntax-near-phrase-search-"
"condition` ."

msgid "Ordered near phrase search condition"
msgstr "Ordered near phrase search condition"

msgid "It's syntax is ``*ONP\"phrase1 phrase2 ...\"``"
msgstr "It's syntax is ``*ONP\"phrase1 phrase2 ...\"``"

msgid ""
"This conditional expression does ordered near phrase search with "
"``phrase1``, ``phrase2`` and ``...``. Ordered near phrase search is similar "
"to :ref:`query-syntax-near-phrase-search-condition` but ordered near phrase "
"search checks phrases order. For example, ``*ONP\"groonga mroonga "
"pgroonga\"`` matches ``groonga mroonga rroonga pgroonga`` but doesn't match "
"``groonga rroonga pgroonga mroonga``. Because the latter uses different "
"order:"
msgstr ""
"This conditional expression does ordered near phrase search with "
"``phrase1``, ``phrase2`` and ``...``. Ordered near phrase search is similar "
"to :ref:`query-syntax-near-phrase-search-condition` but ordered near phrase "
"search checks phrases order. For example, ``*ONP\"groonga mroonga "
"pgroonga\"`` matches ``groonga mroonga rroonga pgroonga`` but doesn't match "
"``groonga rroonga pgroonga mroonga``. Because the latter uses different "
"order:"

msgid ""
"You can use the all features of :ref:`query-syntax-near-phrase-search-"
"condition` such as the max interval and the additional last interval. But "
"you don't need to specify ``$`` for the last phrase because the last phrase "
"in query is the last phrase."
msgstr ""
"You can use the all features of :ref:`query-syntax-near-phrase-search-"
"condition` such as the max interval and the additional last interval. But "
"you don't need to specify ``$`` for the last phrase because the last phrase "
"in query is the last phrase."

msgid "Ordered near phrase product search condition"
msgstr "Ordered near phrase product search condition"

msgid ""
"Its syntax is ``*ONPP\"(phrase1_1 phrase1_2 ...) (phrase2_1 "
"phrase2_2 ...) ...\"``."
msgstr ""
"Its syntax is ``*ONPP\"(phrase1_1 phrase1_2 ...) (phrase2_1 "
"phrase2_2 ...) ...\"``."

msgid ""
"This conditional expression does ordered near phrase product search. Ordered "
"near phrase product search is similar to :ref:`query-syntax-near-phrase-"
"product-search-condition` but ordered near phrase product search checks "
"phrases order like :ref:`query-syntax-ordered-near-phrase-search-condition`. "
"For example, ``*ONPP\"(a b c) (d e)\"`` matches ``a 1 d`` but doesn't match "
"``d 1 a``. Because the latter uses different order."
msgstr ""
"This conditional expression does ordered near phrase product search. Ordered "
"near phrase product search is similar to :ref:`query-syntax-near-phrase-"
"product-search-condition` but ordered near phrase product search checks "
"phrases order like :ref:`query-syntax-ordered-near-phrase-search-condition`. "
"For example, ``*ONPP\"(a b c) (d e)\"`` matches ``a 1 d`` but doesn't match "
"``d 1 a``. Because the latter uses different order."

msgid "Similar search condition"
msgstr "Similar search condition"

msgid "TODO"
msgstr "TODO"

msgid "Equal condition"
msgstr "Equal condition"

msgid "Its syntax is ``column:value``."
msgstr "Its syntax is ``column:value``."

msgid "It matches records that ``column`` value is equal to ``value``."
msgstr "It matches records that ``column`` value is equal to ``value``."

msgid ""
"The expression matches records that ``_key`` column value is equal to "
"``Groonga``."
msgstr ""
"The expression matches records that ``_key`` column value is equal to "
"``Groonga``."

msgid "Not equal condition"
msgstr "Not equal condition"

msgid "Its syntax is ``column:!value``."
msgstr "Its syntax is ``column:!value``."

msgid "It matches records that ``column`` value isn't equal to ``value``."
msgstr "It matches records that ``column`` value isn't equal to ``value``."

msgid ""
"The expression matches records that ``_key`` column value is not equal to "
"``Groonga``."
msgstr ""
"The expression matches records that ``_key`` column value is not equal to "
"``Groonga``."

msgid "Less than condition"
msgstr "Less than condition"

msgid "Its syntax is ``column:<value``."
msgstr "Its syntax is ``column:<value``."

msgid "It matches records that ``column`` value is less than ``value``."
msgstr "It matches records that ``column`` value is less than ``value``."

msgid ""
"If ``column`` type is numerical type such as ``Int32``, ``column`` value and "
"``value`` are compared as number. If ``column`` type is text type such as "
"``ShortText``, ``column`` value and ``value`` are compared as bit sequence."
msgstr ""
"If ``column`` type is numerical type such as ``Int32``, ``column`` value and "
"``value`` are compared as number. If ``column`` type is text type such as "
"``ShortText``, ``column`` value and ``value`` are compared as bit sequence."

msgid ""
"The expression matches records that ``n_likes`` column value is less than "
"``10``."
msgstr ""
"The expression matches records that ``n_likes`` column value is less than "
"``10``."

msgid "Greater than condition"
msgstr "Greater than condition"

msgid "Its syntax is ``column:>value``."
msgstr "Its syntax is ``column:>value``."

msgid "It matches records that ``column`` value is greater than ``value``."
msgstr "It matches records that ``column`` value is greater than ``value``."

msgid ""
"The expression matches records that ``n_likes`` column value is greater than "
"``10``."
msgstr ""
"The expression matches records that ``n_likes`` column value is greater than "
"``10``."

msgid "Less than or equal to condition"
msgstr "Less than or equal to condition"

msgid "Its syntax is ``column:<=value``."
msgstr "Its syntax is ``column:<=value``."

msgid ""
"It matches records that ``column`` value is less than or equal to ``value``."
msgstr ""
"It matches records that ``column`` value is less than or equal to ``value``."

msgid ""
"The expression matches records that ``n_likes`` column value is less than or "
"equal to ``10``."
msgstr ""
"The expression matches records that ``n_likes`` column value is less than or "
"equal to ``10``."

msgid "Greater than or equal to condition"
msgstr "Greater than or equal to condition"

msgid "Its syntax is ``column:>=value``."
msgstr "Its syntax is ``column:>=value``."

msgid ""
"It matches records that ``column`` value is greater than or equal to "
"``value``."
msgstr ""
"It matches records that ``column`` value is greater than or equal to "
"``value``."

msgid ""
"The expression matches records that ``n_likes`` column value is greater than "
"or equal to ``10``."
msgstr ""
"The expression matches records that ``n_likes`` column value is greater than "
"or equal to ``10``."

msgid "Regular expression condition"
msgstr "Regular expression condition"

msgid "Its syntax is ``column:~pattern``."
msgstr "Its syntax is ``column:~pattern``."

msgid ""
"It matches records that ``column`` value is matched to ``pattern``. "
"``pattern`` must be valid :doc:`/reference/regular_expression`."
msgstr ""
"It matches records that ``column`` value is matched to ``pattern``. "
"``pattern`` must be valid :doc:`/reference/regular_expression`."

msgid ""
"The following example uses ``.roonga`` as pattern. It matches ``Groonga``, "
"``Mroonga`` and so on."
msgstr ""
"The following example uses ``.roonga`` as pattern. It matches ``Groonga``, "
"``Mroonga`` and so on."

msgid ""
"In most cases, regular expression is evaluated sequentially. So it may be "
"slow against many records."
msgstr ""
"In most cases, regular expression is evaluated sequentially. So it may be "
"slow against many records."

msgid ""
"In some cases, Groonga evaluates regular expression by index. It's very "
"fast. See :doc:`/reference/regular_expression` for details."
msgstr ""
"In some cases, Groonga evaluates regular expression by index. It's very "
"fast. See :doc:`/reference/regular_expression` for details."

msgid "Combined expression"
msgstr "Combined expression"

msgid "Here is available combined expression list."
msgstr "Here is available combined expression list."

msgid "Logical OR"
msgstr "Logical OR"

msgid "Its syntax is ``a OR b``."
msgstr "Its syntax is ``a OR b``."

msgid ""
"``a`` and ``b`` are conditional expressions, conbinded expressions or "
"assignment expressions."
msgstr ""
"``a`` and ``b`` are conditional expressions, conbinded expressions or "
"assignment expressions."

msgid "If at least one of ``a`` and ``b`` are matched, ``a OR b`` is matched."
msgstr "If at least one of ``a`` and ``b`` are matched, ``a OR b`` is matched."

msgid ""
"The expression matches records that ``n_likes`` column value is greater than "
"``10`` or contain a word ``senna`` in ``content`` column value."
msgstr ""
"The expression matches records that ``n_likes`` column value is greater than "
"``10`` or contain a word ``senna`` in ``content`` column value."

msgid "Logical AND"
msgstr "Logical AND"

msgid "Its syntax is ``a + b`` or just ``a b``."
msgstr "Its syntax is ``a + b`` or just ``a b``."

msgid "If both ``a`` and ``b`` are matched, ``a + b`` is matched."
msgstr "If both ``a`` and ``b`` are matched, ``a + b`` is matched."

msgid ""
"You can specify ``+`` the first expression such as ``+a``. The ``+`` is just "
"ignored."
msgstr ""
"You can specify ``+`` the first expression such as ``+a``. The ``+`` is just "
"ignored."

msgid ""
"The expression matches records that ``n_likes`` column value is greater than "
"or equal to ``10`` and contain a word ``groonga`` in ``content`` column "
"value."
msgstr ""
"The expression matches records that ``n_likes`` column value is greater than "
"or equal to ``10`` and contain a word ``groonga`` in ``content`` column "
"value."

msgid "Logical AND NOT"
msgstr "Logical AND NOT"

msgid "Its syntax is ``a - b``."
msgstr "Its syntax is ``a - b``."

msgid "If ``a`` is matched and ``b`` is not matched, ``a - b`` is matched."
msgstr "If ``a`` is matched and ``b`` is not matched, ``a - b`` is matched."

msgid ""
"You can not specify ``-`` the first expression such as ``-a``. It's syntax "
"error."
msgstr ""
"You can not specify ``-`` the first expression such as ``-a``. It's syntax "
"error."

msgid ""
"The expression matches records that ``n_likes`` column value is greater than "
"or equal to ``10`` and don't contain a word ``groonga`` in ``content`` "
"column value."
msgstr ""
"The expression matches records that ``n_likes`` column value is greater than "
"or equal to ``10`` and don't contain a word ``groonga`` in ``content`` "
"column value."

msgid "Grouping"
msgstr "Grouping"

msgid "Its syntax is ``(...)``. ``...`` is space separated expression list."
msgstr "Its syntax is ``(...)``. ``...`` is space separated expression list."

msgid ""
"``(...)`` groups one ore more expressions and they can be processed as an "
"expression. ``a b OR c`` means that ``a`` and ``b`` are matched or ``c`` is "
"matched. ``a (b OR c)`` means that ``a`` and one of ``b`` and ``c`` are "
"matched."
msgstr ""
"``(...)`` groups one ore more expressions and they can be processed as an "
"expression. ``a b OR c`` means that ``a`` and ``b`` are matched or ``c`` is "
"matched. ``a (b OR c)`` means that ``a`` and one of ``b`` and ``c`` are "
"matched."

msgid ""
"The first expression doesn't use grouping. It matches records that ``n_likes:"
"<5`` and ``content:@senna`` are matched or ``content:@fast`` is matched."
msgstr ""
"The first expression doesn't use grouping. It matches records that ``n_likes:"
"<5`` and ``content:@senna`` are matched or ``content:@fast`` is matched."

msgid ""
"The second expression uses grouping. It matches records that ``n_likes:<5`` "
"and one of ``content:@senna`` or ``content:@fast`` are matched."
msgstr ""
"The second expression uses grouping. It matches records that ``n_likes:<5`` "
"and one of ``content:@senna`` or ``content:@fast`` are matched."

msgid "Assignment expression"
msgstr "Assignment expression"

msgid ""
"This section is for advanced users. Because assignment expression is "
"disabled in ``--query`` option of :doc:`/reference/commands/select` by "
"default. You need to specify ``ALLOW_COLUMN|ALLOW_UPDATE`` as ``--"
"query_flags`` option value to enable assignment expression."
msgstr ""
"This section is for advanced users. Because assignment expression is "
"disabled in ``--query`` option of :doc:`/reference/commands/select` by "
"default. You need to specify ``ALLOW_COLUMN|ALLOW_UPDATE`` as ``--"
"query_flags`` option value to enable assignment expression."

msgid ""
"Assignment expression in query syntax has some limitations. So you should "
"use :doc:`/reference/grn_expr/script_syntax` instead of query syntax for "
"assignment."
msgstr ""
"Assignment expression in query syntax has some limitations. So you should "
"use :doc:`/reference/grn_expr/script_syntax` instead of query syntax for "
"assignment."

msgid ""
"There is only one syntax for assignment expression. It's ``column:=value``."
msgstr ""
"There is only one syntax for assignment expression. It's ``column:=value``."

msgid ""
"``value`` is assigend to ``column``. ``value`` is always processed as string "
"in query syntax. ``value`` is casted to the type of ``column`` "
"automatically. It causes some limitations. For example, you cannot use "
"boolean literal such as ``true`` and ``false`` for ``Bool`` type column. You "
"need to use empty string for ``false`` but query syntax doesn't support "
"``column:=`` syntax."
msgstr ""
"``value`` is assigend to ``column``. ``value`` is always processed as string "
"in query syntax. ``value`` is casted to the type of ``column`` "
"automatically. It causes some limitations. For example, you cannot use "
"boolean literal such as ``true`` and ``false`` for ``Bool`` type column. You "
"need to use empty string for ``false`` but query syntax doesn't support "
"``column:=`` syntax."

msgid "See :doc:`/reference/cast` about cast."
msgstr "See :doc:`/reference/cast` about cast."
