# -*- po -*-
# English translations for Groonga package.
# Copyright (C) 2009-2022 Groonga Project
# This file is distributed under the same license as the Groonga package.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Groonga 12.0.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-02-28 11:57+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "``TokenRegexp``"
msgstr "``TokenRegexp``"

msgid "Summary"
msgstr "Summary"

msgid "This tokenizer is experimental. Specification may be changed."
msgstr "This tokenizer is experimental. Specification may be changed."

msgid ""
"This tokenizer can be used only with UTF-8. You can't use this tokenizer "
"with EUC-JP, Shift_JIS and so on."
msgstr ""
"This tokenizer can be used only with UTF-8. You can't use this tokenizer "
"with EUC-JP, Shift_JIS and so on."

msgid ""
"``TokenRegexp`` is a tokenizer for supporting regular expression search by "
"index."
msgstr ""
"``TokenRegexp`` is a tokenizer for supporting regular expression search by "
"index."

msgid "Syntax"
msgstr "Syntax"

msgid "``TokenRegexp`` hasn't parameter::"
msgstr "``TokenRegexp`` hasn't parameter::"

msgid "Usage"
msgstr "Usage"

msgid ""
"In general, regular expression search is evaluated as sequential search. But "
"the following cases can be evaluated as index search:"
msgstr ""
"In general, regular expression search is evaluated as sequential search. But "
"the following cases can be evaluated as index search:"

msgid "Literal only case such as ``hello``"
msgstr "Literal only case such as ``hello``"

msgid "The beginning of text and literal case such as ``\\A/home/alice``"
msgstr "The beginning of text and literal case such as ``\\A/home/alice``"

msgid "The end of text and literal case such as ``\\.txt\\z``"
msgstr "The end of text and literal case such as ``\\.txt\\z``"

msgid "In most cases, index search is faster than sequential search."
msgstr "In most cases, index search is faster than sequential search."

msgid ""
"``TokenRegexp`` is based on bigram tokenize method. ``TokenRegexp`` adds the "
"beginning of text mark (``U+FFEF``) at the begging of text and the end of "
"text mark (``U+FFF0``) to the end of text when you index text:"
msgstr ""
"``TokenRegexp`` is based on bigram tokenize method. ``TokenRegexp`` adds the "
"beginning of text mark (``U+FFEF``) at the begging of text and the end of "
"text mark (``U+FFF0``) to the end of text when you index text:"

msgid "Execution example::"
msgstr "Execution example::"
