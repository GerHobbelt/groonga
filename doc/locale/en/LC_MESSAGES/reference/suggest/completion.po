# -*- po -*-
# English translations for Groonga package.
# Copyright (C) 2009-2022 Groonga Project
# This file is distributed under the same license as the Groonga package.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Groonga 12.0.1\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-02-28 11:57+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Completion"
msgstr "Completion"

msgid "This section describes about the following completion features:"
msgstr "This section describes about the following completion features:"

msgid "How it works"
msgstr "How it works"

msgid "How to use"
msgstr "How to use"

msgid "How to learn"
msgstr "How to learn"

msgid "The completion feature uses three searches to compute completed words:"
msgstr "The completion feature uses three searches to compute completed words:"

msgid "Prefix RK search against registered words."
msgstr "Prefix RK search against registered words."

msgid "Cooccurrence search against learned data."
msgstr "Cooccurrence search against learned data."

msgid "Prefix search against registered words. (optional)"
msgstr "Prefix search against registered words. (optional)"

msgid "Prefix RK search"
msgstr "Prefix RK search"

msgid "See :doc:`/reference/operations/prefix_rk_search` for prefix RK search."
msgstr ""
"See :doc:`/reference/operations/prefix_rk_search` for prefix RK search."

msgid ""
"If you create dataset which is named as ``query`` by :doc:`/reference/"
"executables/groonga-suggest-create-dataset` executable file, you can update "
"pairs of registered word and its reading by loading data to ``_key`` and "
"``kana`` column of ``item_query`` table explicitly for prefix RK search."
msgstr ""
"If you create dataset which is named as ``query`` by :doc:`/reference/"
"executables/groonga-suggest-create-dataset` executable file, you can update "
"pairs of registered word and its reading by loading data to ``_key`` and "
"``kana`` column of ``item_query`` table explicitly for prefix RK search."

msgid "Cooccurrence search"
msgstr "Cooccurrence search"

msgid ""
"Cooccurrence search can find registered words from user's partial input. It "
"uses user input sequences that will be learned from query logs, access logs "
"and so on."
msgstr ""
"Cooccurrence search can find registered words from user's partial input. It "
"uses user input sequences that will be learned from query logs, access logs "
"and so on."

msgid "For example, there is the following user input sequence:"
msgstr "For example, there is the following user input sequence:"

msgid "input"
msgstr "input"

msgid "submit"
msgstr "submit"

msgid "s"
msgstr "s"

msgid "no"
msgstr "no"

msgid "se"
msgstr "se"

msgid "sea"
msgstr "sea"

msgid "sear"
msgstr "sear"

msgid "searc"
msgstr "searc"

msgid "search"
msgstr "search"

msgid "yes"
msgstr "yes"

msgid "e"
msgstr "e"

msgid "en"
msgstr "en"

msgid "eng"
msgstr "eng"

msgid "engi"
msgstr "engi"

msgid "engin"
msgstr "engin"

msgid "engine"
msgstr "engine"

msgid "enginen"
msgstr "enginen"

msgid "no (typo!)"
msgstr "no (typo!)"

msgid "Groonga creates the following completion pairs:"
msgstr "Groonga creates the following completion pairs:"

msgid "completed word"
msgstr "completed word"

msgid ""
"All user not-submitted inputs (e.g. \"s\", \"se\" and so on) before each an "
"user submission maps to the submitted input (e.g. \"search\")."
msgstr ""
"All user not-submitted inputs (e.g. \"s\", \"se\" and so on) before each an "
"user submission maps to the submitted input (e.g. \"search\")."

msgid ""
"To be precise, this description isn't correct because it omits about time "
"stamp. Groonga doesn't case about \"all user not-submitted inputs before "
"each an user submission\". Groonga just case about \"all user not-submitted "
"inputs within a minute from an user submission before each an user "
"submission\". Groonga doesn't treat user inputs before a minute ago."
msgstr ""
"To be precise, this description isn't correct because it omits about time "
"stamp. Groonga doesn't case about \"all user not-submitted inputs before "
"each an user submission\". Groonga just case about \"all user not-submitted "
"inputs within a minute from an user submission before each an user "
"submission\". Groonga doesn't treat user inputs before a minute ago."

msgid ""
"If an user inputs \"sea\" and cooccurrence search returns \"search\" because "
"\"sea\" is in input column and corresponding completed word column value is "
"\"search\"."
msgstr ""
"If an user inputs \"sea\" and cooccurrence search returns \"search\" because "
"\"sea\" is in input column and corresponding completed word column value is "
"\"search\"."

msgid "Prefix search"
msgstr "Prefix search"

msgid ""
"Prefix search can find registered word that start with user's input. This "
"search doesn't care about romaji, katakana and hiragana not like prefix RK "
"search."
msgstr ""
"Prefix search can find registered word that start with user's input. This "
"search doesn't care about romaji, katakana and hiragana not like prefix RK "
"search."

msgid ""
"This search isn't always ran. It's just ran when it's requested explicitly "
"or both prefix RK search and cooccurrence search return nothing."
msgstr ""
"This search isn't always ran. It's just ran when it's requested explicitly "
"or both prefix RK search and cooccurrence search return nothing."

msgid ""
"For example, there is a registered word \"search\". An user can find "
"\"search\" by \"s\", \"se\", \"sea\", \"sear\", \"searc\" and \"search\"."
msgstr ""
"For example, there is a registered word \"search\". An user can find "
"\"search\" by \"s\", \"se\", \"sea\", \"sear\", \"searc\" and \"search\"."

msgid ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"completion. ``--type complete`` option requests completion."
msgstr ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"completion. ``--type complete`` option requests completion."

msgid "For example, here is an command to get completion results by \"en\":"
msgstr "For example, here is an command to get completion results by \"en\":"

msgid "Execution example::"
msgstr "Execution example::"

msgid "How it learns"
msgstr "How it learns"

msgid ""
"Cooccurrence search uses learned data. They are based on query logs, access "
"logs and so on. To create learned data, Groonga needs user input sequence "
"with time stamp and user submit input with time stamp."
msgstr ""
"Cooccurrence search uses learned data. They are based on query logs, access "
"logs and so on. To create learned data, Groonga needs user input sequence "
"with time stamp and user submit input with time stamp."

msgid ""
"For example, an user wants to search by \"engine\". The user inputs the "
"query with the following sequence:"
msgstr ""
"For example, an user wants to search by \"engine\". The user inputs the "
"query with the following sequence:"

msgid "2011-08-10T13:33:23+09:00: e"
msgstr "2011-08-10T13:33:23+09:00: e"

msgid "2011-08-10T13:33:23+09:00: en"
msgstr "2011-08-10T13:33:23+09:00: en"

msgid "2011-08-10T13:33:24+09:00: eng"
msgstr "2011-08-10T13:33:24+09:00: eng"

msgid "2011-08-10T13:33:24+09:00: engi"
msgstr "2011-08-10T13:33:24+09:00: engi"

msgid "2011-08-10T13:33:24+09:00: engin"
msgstr "2011-08-10T13:33:24+09:00: engin"

msgid "2011-08-10T13:33:25+09:00: engine (submit!)"
msgstr "2011-08-10T13:33:25+09:00: engine (submit!)"

msgid ""
"Groonga can be learned from the input sequence by the following command::"
msgstr ""
"Groonga can be learned from the input sequence by the following command::"

msgid "How to update reading data"
msgstr "How to update reading data"

msgid ""
"Groonga requires registered word and its reading for prefix RK search. This "
"section describes how to register a word and its reading."
msgstr ""
"Groonga requires registered word and its reading for prefix RK search. This "
"section describes how to register a word and its reading."

msgid "Here is an example to register \"日本\" which means Japan in English:"
msgstr "Here is an example to register \"日本\" which means Japan in English:"

msgid "Here is an example to update reading data to complete \"日本\":"
msgstr "Here is an example to update reading data to complete \"日本\":"

msgid ""
"Then you can complete registered word \"日本\" by Romaji input - \"nihon\"."
msgstr ""
"Then you can complete registered word \"日本\" by Romaji input - \"nihon\"."

msgid ""
"Without loading above reading data, you can't complete registered word \"日本"
"\" by query - \"nihon\"."
msgstr ""
"Without loading above reading data, you can't complete registered word \"日本"
"\" by query - \"nihon\"."

msgid ""
"You can register multiple readings for a registered word because ``kana`` "
"column in ``item_query`` table is defined as a :doc:`/reference/columns/"
"vector`."
msgstr ""
"You can register multiple readings for a registered word because ``kana`` "
"column in ``item_query`` table is defined as a :doc:`/reference/columns/"
"vector`."

msgid ""
"This is the reason that you can also complete the registered word \"日本\" "
"by query - \"nippon\"."
msgstr ""
"This is the reason that you can also complete the registered word \"日本\" "
"by query - \"nippon\"."

msgid ""
"This feature is very convenient because you can search registered word even "
"though Japanese input method is disabled."
msgstr ""
"This feature is very convenient because you can search registered word even "
"though Japanese input method is disabled."

msgid ""
"If there are multiple candidates as completed result, you can customize "
"priority to set the value of ``boost`` column in ``item_query`` table."
msgstr ""
"If there are multiple candidates as completed result, you can customize "
"priority to set the value of ``boost`` column in ``item_query`` table."

msgid "Here is an example to customize priority for prefix RK search:"
msgstr "Here is an example to customize priority for prefix RK search:"
